{"Diffs":"[{\"Position\":2346,\"NumberToRemove\":327,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient\\\\\\\\packages.config\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<packages>\\\\r\\\\n  <package id=\\\\\\\"Newtonsoft.Json\\\\\\\" version=\\\\\\\"12.0.1\\\\\\\" targetFramework=\\\\\\\"net471\\\\\\\" />\\\\r\\\\n  <package id=\\\\\\\"System.ValueTuple\\\\\\\" version=\\\\\\\"4.5.0\\\\\\\" targetFramework=\\\\\\\"net471\\\\\\\" />\\\\r\\\\n</packages>\\\"},\"},{\"Position\":2644,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient\\\\\\\\Program.cs\\\",\\\"Contents\\\":\\\"using Newtonsoft.Json;\\\\r\\\\nusing PVCPipeLibrary;\\\\r\\\\nusing System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.Globalization;\\\\r\\\\nusing System.IO;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Net;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\n\\\\r\\\\nnamespace PVCClient\\\\r\\\\n\"},{\"Position\":2971,\"NumberToRemove\":62,\"ContentToAdd\":\"{\\\\r\\\\n    class Program\\\\r\\\\n    \"},{\"Position\":3001,\"NumberToRemove\":202,\"ContentToAdd\":\"{\\\\r\\\\n        static async Task Main(string[] args)\\\\r\\\\n        \"},{\"Position\":3063,\"NumberToRemove\":249,\"ContentToAdd\":\"{\\\\r\\\\n            //pvc ARG -arg\\\\r\\\\n            //Directory.GetCurrentDirectory()\\\\r\\\\n\\\\r\\\\n            Account account = null;\\\\r\\\\n            bool exit = false;\\\\r\\\\n            while (!exit)\\\\r\\\\n            \"},{\"Position\":3265,\"NumberToRemove\":87,\"ContentToAdd\":\"{\\\\r\\\\n                bool home = false;\\\\r\\\\n                Console.WriteLine(\\\\\\\"PVC is a work-in-progress rudimentary VCS. Please enter the number of the repository or enter the full file path.\\\\\\\");\\\\r\\\\n                string rootPath = $@\\\\\\\"C:\\\\\\\\Users\\\\\\\\\"},{\"Position\":3514,\"NumberToRemove\":50,\"ContentToAdd\":\"{Environment.UserName}\\\\\\\\Documents\\\\\\\\PVCPipe\\\\\\\\\\\\\\\";\\\\r\\\\n                if (File.Exists($@\\\\\\\"\"},{\"Position\":3601,\"NumberToRemove\":68,\"ContentToAdd\":\"{rootPath}\\\\\\\\PVCPipeAccount\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":3651,\"NumberToRemove\":190,\"ContentToAdd\":\"{\\\\r\\\\n                    string startingText = File.ReadAllText($@\\\\\\\"\"},{\"Position\":3719,\"NumberToRemove\":374,\"ContentToAdd\":\"{rootPath}\\\\\\\\PVCPipeAccount\\\\\\\");\\\\r\\\\n                    StringBuilder output = new StringBuilder();\\\\r\\\\n                    for (int i = 0; i < startingText.Length; i++)\\\\r\\\\n                    \"},{\"Position\":3909,\"NumberToRemove\":46,\"ContentToAdd\":\"{\\\\r\\\\n                        output.Append((char)(((int)startingText[i] * -1) + 137));\\\\r\\\\n                    }\\\\r\\\\n                    account = JsonConvert.DeserializeObject<Account>(output.ToString());\\\\r\\\\n                }\\\\r\\\\n                string[] repos = Directory.GetDirectories(rootPath);\\\\r\\\\n                for (int i = 0; i < repos.Length; i++)\\\\r\\\\n                \"},{\"Position\":4283,\"NumberToRemove\":6,\"ContentToAdd\":\"{\\\\r\\\\n                    Console.WriteLine($\\\\\\\"\"},{\"Position\":4329,\"NumberToRemove\":231,\"ContentToAdd\":\"{i} - \"},{\"Position\":4335,\"NumberToRemove\":347,\"ContentToAdd\":\"{repos[i].Remove(0, rootPath.Length)}\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n                string path = Console.ReadLine();\\\\r\\\\n\\\\r\\\\n                int selection;\\\\r\\\\n                if (int.TryParse(path, out selection))\\\\r\\\\n                \"},{\"Position\":4566,\"NumberToRemove\":1314,\"ContentToAdd\":\"{\\\\r\\\\n                    path = repos[selection];\\\\r\\\\n                }\\\\r\\\\n                PVCServerInterface interf = new PVCServerInterface(path);\\\\r\\\\n                string[] parameters = new string[1];\\\\r\\\\n                string input = \\\\\\\"\\\\\\\";\\\\r\\\\n                Dictionary<string, string> help = new Dictionary<string, string>\\\\r\\\\n                \"},{\"Position\":4913,\"NumberToRemove\":368,\"ContentToAdd\":\"{\\\\r\\\\n                    [\\\\\\\"clone\\\\\\\"] = \\\\\\\"clone ORIGIN\\\\\\\",\\\\r\\\\n                    [\\\\\\\"pull\\\\\\\"] = \\\\\\\"pull\\\\\\\",\\\\r\\\\n                    [\\\\\\\"checkout\\\\\\\"] = \\\\\\\"checkout BRANCH\\\\\\\",\\\\r\\\\n                    [\\\\\\\"commit\\\\\\\"] = \\\\\\\"commit M E S S A G E\\\\\\\",\\\\r\\\\n                    [\\\\\\\"revert\\\\\\\"] = \\\\\\\"revert <NUMBER OF COMMITS BEFORE HEAD>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"push\\\\\\\"] = \\\\\\\"push <BRANCH>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"branch\\\\\\\"] = \\\\\\\"branch BRANCHNAME <COMMITID>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"help\\\\\\\"] = \\\\\\\"help <COMMAND>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"status\\\\\\\"] = \\\\\\\"status <BRANCH>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"log\\\\\\\"] = \\\\\\\"log <NUMBER>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"ignore\\\\\\\"] = \\\\\\\"ignore <SUBPATH1 SUBPATH2 ...>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"unignore\\\\\\\"] = \\\\\\\"unignore SUBPATH1 SUBPATH2 ...\\\\\\\",\\\\r\\\\n                    [\\\\\\\"ignoreR\\\\\\\"] = \\\\\\\"ignoreR <R E G E X>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"redraw\\\\\\\"] = \\\\\\\"redraw\\\\\\\",\\\\r\\\\n                    [\\\\\\\"home\\\\\\\"] = \\\\\\\"home\\\\\\\",\\\\r\\\\n                    [\\\\\\\"login\\\\\\\"] = \\\\\\\"login\\\\\\\",\\\\r\\\\n                    [\\\\\\\"register\\\\\\\"] = \\\\\\\"register\\\\\\\",\\\\r\\\\n                    [\\\\\\\"resetpass\\\\\\\"] = \\\\\\\"resetpass USERNAME\\\\\\\",\\\\r\\\\n                    [\\\\\\\"changepass\\\\\\\"] = \\\\\\\"changepass\\\\\\\"\\\\r\\\\n                };\\\\r\\\\n                var cmds2 = new Dictionary<string, Func<Task>>();\\\\r\\\\n                var cmds = new Dictionary<string, Func<Task>>\\\\r\\\\n                \"},{\"Position\":6227,\"NumberToRemove\":77,\"ContentToAdd\":\"{\\\\r\\\\n                    [\\\\\\\"clone\\\\\\\"] = async () => await interf.Clone(parameters[1]),\\\\r\\\\n                    [\\\\\\\"pull\\\\\\\"] = async () => Console.WriteLine((await interf.Pull()).ToString().Replace('_', ' ')),\\\\r\\\\n                    [\\\\\\\"checkout\\\\\\\"] = async () => await interf.Checkout(parameters[1]),\\\\r\\\\n                    [\\\\\\\"commit\\\\\\\"] = async () =>\\\\r\\\\n                    \"},{\"Position\":6595,\"NumberToRemove\":392,\"ContentToAdd\":\"{\\\\r\\\\n                        if (account == null)\\\\r\\\\n                        \"},{\"Position\":6672,\"NumberToRemove\":77,\"ContentToAdd\":\"{\\\\r\\\\n                            Console.WriteLine(\\\\\\\"You must log in to commit.\\\\\\\");\\\\r\\\\n                            return;\\\\r\\\\n                        }\\\\r\\\\n                        await interf.Commit(input.Remove(0, parameters[0].Length + 1), account.Username, account.Username, DateTime.Now);\\\\r\\\\n                    },\\\\r\\\\n                    [\\\\\\\"revert\\\\\\\"] = async () =>\\\\r\\\\n                    \"},{\"Position\":7064,\"NumberToRemove\":345,\"ContentToAdd\":\"{\\\\r\\\\n                        if (account == null)\\\\r\\\\n                        \"},{\"Position\":7141,\"NumberToRemove\":234,\"ContentToAdd\":\"{\\\\r\\\\n                            Console.WriteLine(\\\\\\\"You must log in to commit.\\\\\\\");\\\\r\\\\n                            return;\\\\r\\\\n                        }\\\\r\\\\n                        int id = -1;\\\\r\\\\n                        string message = \\\\\\\"Undoes previous commit.\\\\\\\";\\\\r\\\\n                        if(parameters.Length > 1)\\\\r\\\\n                        \"},{\"Position\":7486,\"NumberToRemove\":312,\"ContentToAdd\":\"{\\\\r\\\\n                            int numBeforeHead = int.Parse(parameters[1]);\\\\r\\\\n                            id = (await interf.Log(numBeforeHead))[numBeforeHead - 1].Parent;\\\\r\\\\n                            message = $\\\\\\\"Undoes commit \"},{\"Position\":7720,\"NumberToRemove\":109,\"ContentToAdd\":\"{id}.\\\\\\\";\\\\r\\\\n                        }\\\\r\\\\n                        await interf.RevertCommit(message, account.Username, account.Username, DateTime.Now, id);\\\\r\\\\n                        await interf.Checkout(await interf.GetCurrentBranch());\\\\r\\\\n                    },\\\\r\\\\n                    [\\\\\\\"push\\\\\\\"] = async () => \"},{\"Position\":8032,\"NumberToRemove\":154,\"ContentToAdd\":\"{ var result = await interf.Push(input.Remove(0, 4).Replace(\\\\\\\" \\\\\\\", \\\\\\\"\\\\\\\")); foreach (string s in result.Keys) \"},{\"Position\":8141,\"NumberToRemove\":83,\"ContentToAdd\":\"{ Console.WriteLine(s+\\\\\\\": \\\\\\\" + result[s].ToString().Replace(\\\\\\\"_\\\\\\\", \\\\\\\" \\\\\\\")); } },\\\\r\\\\n                    [\\\\\\\"branch\\\\\\\"] = async () =>\\\\r\\\\n                    \"},{\"Position\":8295,\"NumberToRemove\":91,\"ContentToAdd\":\"{\\\\r\\\\n                        if (parameters.Length > 1)\\\\r\\\\n                        \"},{\"Position\":8378,\"NumberToRemove\":205,\"ContentToAdd\":\"{\\\\r\\\\n                            if (parameters.Length > 2)\\\\r\\\\n                            \"},{\"Position\":8469,\"NumberToRemove\":200,\"ContentToAdd\":\"{\\\\r\\\\n                                await interf.CreateBranch(parameters[1], int.Parse(parameters[2]));\\\\r\\\\n                            }\\\\r\\\\n                            else\\\\r\\\\n                            \"},{\"Position\":8674,\"NumberToRemove\":75,\"ContentToAdd\":\"{\\\\r\\\\n                                await interf.CreateBranch(parameters[1]);\\\\r\\\\n                            }\\\\r\\\\n                        }\\\\r\\\\n                        else\\\\r\\\\n                        \"},{\"Position\":8874,\"NumberToRemove\":168,\"ContentToAdd\":\"{\\\\r\\\\n                            Console.WriteLine($\\\\\\\"Current branch:\\\\\\\\n - \"},{\"Position\":8949,\"NumberToRemove\":228,\"ContentToAdd\":\"{await interf.GetCurrentBranch()}\\\\\\\\nAll branches:\\\\\\\");\\\\r\\\\n                            foreach (string s in await interf.GetAllBranches())\\\\r\\\\n                            \"},{\"Position\":9117,\"NumberToRemove\":29,\"ContentToAdd\":\"{\\\\r\\\\n                                Console.WriteLine(\\\\\\\" - \\\\\\\" + s);\\\\r\\\\n                            }\\\\r\\\\n                        }\\\\r\\\\n                    },\\\\r\\\\n                    [\\\\\\\"help\\\\\\\"] = async () =>\\\\r\\\\n                    \"},{\"Position\":9345,\"NumberToRemove\":126,\"ContentToAdd\":\"{\\\\r\\\\n                        \"},{\"Position\":9374,\"NumberToRemove\":177,\"ContentToAdd\":\"{\\\\r\\\\n                            if (parameters.Length > 1 && help.ContainsKey(parameters[1]))\\\\r\\\\n                            \"},{\"Position\":9500,\"NumberToRemove\":114,\"ContentToAdd\":\"{\\\\r\\\\n                                Console.WriteLine(help[parameters[1]]);\\\\r\\\\n                            }\\\\r\\\\n                            else\\\\r\\\\n                            \"},{\"Position\":9677,\"NumberToRemove\":62,\"ContentToAdd\":\"{\\\\r\\\\n                                foreach (string s in help.Keys.ToArray())\\\\r\\\\n                                \"},{\"Position\":9791,\"NumberToRemove\":3,\"ContentToAdd\":\"{\\\\r\\\\n                                    Console.WriteLine($\\\\\\\"\"},{\"Position\":9853,\"NumberToRemove\":32,\"ContentToAdd\":\"{s}\"},{\"Position\":9856,\"NumberToRemove\":292,\"ContentToAdd\":\"{repeatChar(' ', 20 - s.Length)}\"},{\"Position\":9888,\"NumberToRemove\":131,\"ContentToAdd\":\"{help[s]}\\\\\\\");\\\\r\\\\n                                }\\\\r\\\\n                            }\\\\r\\\\n                        }\\\\r\\\\n                    },\\\\r\\\\n                    [\\\\\\\"status\\\\\\\"] = async () => Console.WriteLine((await interf.GetStatus(parameters.Length > 1 ? parameters[1] : File.ReadAllText($@\\\\\\\"\"},{\"Position\":10180,\"NumberToRemove\":227,\"ContentToAdd\":\"{path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\"))).ToString().Replace('_', ' ')),\\\\r\\\\n                    [\\\\\\\"log\\\\\\\"] = async () =>\\\\r\\\\n                    \"},{\"Position\":10311,\"NumberToRemove\":87,\"ContentToAdd\":\"{\\\\r\\\\n                        var output = (parameters.Length > 1 ? await interf.Log(int.Parse(parameters[1])) : await interf.Log());\\\\r\\\\n                        for (int i = 0; i < output.Length; i++)\\\\r\\\\n                        \"},{\"Position\":10538,\"NumberToRemove\":289,\"ContentToAdd\":\"{\\\\r\\\\n                            if (output[i] != null)\\\\r\\\\n                            \"},{\"Position\":10625,\"NumberToRemove\":83,\"ContentToAdd\":\"{\\\\r\\\\n                                Console.WriteLine(output[i].DateAndTime.ToShortDateString() + \\\\\\\": \\\\\\\" + output[i].Message);\\\\r\\\\n                            }\\\\r\\\\n                        }\\\\r\\\\n                    },\\\\r\\\\n                    [\\\\\\\"ignore\\\\\\\"] = async () =>\\\\r\\\\n                    \"},{\"Position\":10914,\"NumberToRemove\":94,\"ContentToAdd\":\"{\\\\r\\\\n                        if (parameters.Length > 1)\\\\r\\\\n                        \"},{\"Position\":10997,\"NumberToRemove\":138,\"ContentToAdd\":\"{\\\\r\\\\n                            await interf.IgnorePaths(input.Remove(0, 6).Split(new char[] \"},{\"Position\":11091,\"NumberToRemove\":179,\"ContentToAdd\":\"{ ' ' }, StringSplitOptions.RemoveEmptyEntries));\\\\r\\\\n                        }\\\\r\\\\n                        else\\\\r\\\\n                        \"},{\"Position\":11229,\"NumberToRemove\":262,\"ContentToAdd\":\"{\\\\r\\\\n                            Console.WriteLine(\\\\\\\"Ignored subpaths:\\\\\\\");\\\\r\\\\n                            foreach (string s in interf.IgnoredPaths)\\\\r\\\\n                            \"},{\"Position\":11408,\"NumberToRemove\":292,\"ContentToAdd\":\"{\\\\r\\\\n                                Console.WriteLine(s);\\\\r\\\\n                            }\\\\r\\\\n                        }\\\\r\\\\n                    },\\\\r\\\\n                    [\\\\\\\"unignore\\\\\\\"] = async () => await interf.UnignorePaths(input.Remove(0, 6).Split(new char[] \"},{\"Position\":11670,\"NumberToRemove\":90,\"ContentToAdd\":\"{ ' ' }, StringSplitOptions.RemoveEmptyEntries)),\\\\r\\\\n                    [\\\\\\\"ignoreR\\\\\\\"] = async () => await interf.SetIgnoredRegex(input.Remove(0, 8)),\\\\r\\\\n                    [\\\\\\\"redraw\\\\\\\"] = async () => await RedrawCommand(account, path, cmds2),\\\\r\\\\n                    [\\\\\\\"home\\\\\\\"] = async () => \"},{\"Position\":11962,\"NumberToRemove\":354,\"ContentToAdd\":\"{ home = true; },\\\\r\\\\n                    [\\\\\\\"login\\\\\\\"] = async () =>\\\\r\\\\n                    \"},{\"Position\":12052,\"NumberToRemove\":298,\"ContentToAdd\":\"{\\\\r\\\\n                        account = EnterAccountInfo();\\\\r\\\\n                        interf.User = account;\\\\r\\\\n                        Console.ForegroundColor = ConsoleColor.Gray;\\\\r\\\\n                        await ReDraw(path, cmds2, account.Username);\\\\r\\\\n                    },\\\\r\\\\n                    [\\\\\\\"register\\\\\\\"] = async () =>\\\\r\\\\n                    \"},{\"Position\":12406,\"NumberToRemove\":253,\"ContentToAdd\":\"{\\\\r\\\\n                        account = EnterAccountInfo();\\\\r\\\\n                        Console.WriteLine(\\\\\\\"Please enter a recovery email.\\\\\\\");\\\\r\\\\n                        interf.User = account;\\\\r\\\\n                        Console.WriteLine(await interf.RegisterAccount(interf.Origin.Split(new string[] \"},{\"Position\":12704,\"NumberToRemove\":201,\"ContentToAdd\":\"{ \\\\\\\"/api/pipe\\\\\\\" }, StringSplitOptions.None)[0] + \\\\\\\"/api/pipe/register\\\\\\\", Console.ReadLine()));\\\\r\\\\n                    },\\\\r\\\\n                    [\\\\\\\"resetpass\\\\\\\"] = async () => Console.WriteLine((await interf.ResetPassword(interf.Origin.Split(new string[] \"},{\"Position\":12957,\"NumberToRemove\":179,\"ContentToAdd\":\"{ \\\\\\\"/api/pipe\\\\\\\" }, StringSplitOptions.None)[0] + \\\\\\\"/api/pipe/passwordReset\\\\\\\", parameters[1])) ? \\\\\\\"Success\\\\\\\" : \\\\\\\"Failure\\\\\\\"),\\\\r\\\\n                    [\\\\\\\"changepass\\\\\\\"] = async () =>\\\\r\\\\n                    \"},{\"Position\":13158,\"NumberToRemove\":247,\"ContentToAdd\":\"{\\\\r\\\\n                        Console.WriteLine(\\\\\\\"Input new password\\\\\\\");\\\\r\\\\n                        Console.WriteLine((await interf.ChangePassword(interf.Origin.Split(new string[] \"},{\"Position\":13337,\"NumberToRemove\":140,\"ContentToAdd\":\"{ \\\\\\\"/api/pipe\\\\\\\" }, StringSplitOptions.None)[0] + \\\\\\\"/api/pipe/changePass\\\\\\\", SecureEnterText())) ? \\\\\\\"Success\\\\\\\" : \\\\\\\"Failure\\\\\\\");\\\\r\\\\n                    }\\\\r\\\\n                };\\\\r\\\\n                string repeatChar(char chr, int num)\\\\r\\\\n                \"},{\"Position\":13584,\"NumberToRemove\":254,\"ContentToAdd\":\"{\\\\r\\\\n                    StringBuilder s = new StringBuilder();\\\\r\\\\n                    for (int i = 0; i < num; i++)\\\\r\\\\n                    \"},{\"Position\":13724,\"NumberToRemove\":17,\"ContentToAdd\":\"{\\\\r\\\\n                        s.Append(chr);\\\\r\\\\n                    }\\\\r\\\\n                    return s.ToString();\\\\r\\\\n                }\\\\r\\\\n                cmds2 = cmds;\\\\r\\\\n                Console.Clear();\\\\r\\\\n                Console.WriteLine($\\\\\\\"File path: \"},{\"Position\":13978,\"NumberToRemove\":18,\"ContentToAdd\":\"{path}\\\\\\\\nOrigin: \"},{\"Position\":13995,\"NumberToRemove\":47,\"ContentToAdd\":\"{(File.Exists($@\\\\\\\"\"},{\"Position\":14013,\"NumberToRemove\":53,\"ContentToAdd\":\"{path}\\\\\\\\.pvc\\\\\\\\origin\\\\\\\") ? File.ReadAllText($@\\\\\\\"\"},{\"Position\":14060,\"NumberToRemove\":189,\"ContentToAdd\":\"{path}\\\\\\\\.pvc\\\\\\\\origin\\\\\\\") : \\\\\\\"none\\\\\\\")}\\\\\\\\nLogged in as: \"},{\"Position\":14113,\"NumberToRemove\":135,\"ContentToAdd\":\"{(account == null ? \\\\\\\"None\\\\\\\" : account.Username)}\\\\\\\");\\\\r\\\\n                Console.WriteLine(\\\\\\\"Commands:\\\\\\\");\\\\r\\\\n                foreach (string cmd in cmds.Keys.ToArray())\\\\r\\\\n                \"},{\"Position\":14302,\"NumberToRemove\":117,\"ContentToAdd\":\"{\\\\r\\\\n                    Console.WriteLine(\\\\\\\"\\\\\\\\t\\\\\\\" + cmd);\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n                while (true)\\\\r\\\\n                \"},{\"Position\":14437,\"NumberToRemove\":77,\"ContentToAdd\":\"{\\\\r\\\\n                    input = Console.ReadLine();\\\\r\\\\n                    if(input == \\\\\\\"\\\\\\\")\\\\r\\\\n                    \"},{\"Position\":14554,\"NumberToRemove\":276,\"ContentToAdd\":\"{\\\\r\\\\n                        if (account != null)\\\\r\\\\n                        \"},{\"Position\":14631,\"NumberToRemove\":176,\"ContentToAdd\":\"{\\\\r\\\\n                            string startingText = JsonConvert.SerializeObject(account);\\\\r\\\\n                            StringBuilder output = new StringBuilder();\\\\r\\\\n                            for (int i = 0; i < startingText.Length; i++)\\\\r\\\\n                            \"},{\"Position\":14907,\"NumberToRemove\":283,\"ContentToAdd\":\"{\\\\r\\\\n                                output.Append((char)(137 - ((int)startingText[i])));\\\\r\\\\n                            }\\\\r\\\\n                            File.WriteAllText($@\\\\\\\"\"},{\"Position\":15083,\"NumberToRemove\":207,\"ContentToAdd\":\"{rootPath}\\\\\\\\PVCPipeAccount\\\\\\\", output.ToString());\\\\r\\\\n                        }\\\\r\\\\n                        exit = true;\\\\r\\\\n                        return;\\\\r\\\\n                    }\\\\r\\\\n                    parameters = input.Split(' ');\\\\r\\\\n                    try\\\\r\\\\n                    \"},{\"Position\":15366,\"NumberToRemove\":68,\"ContentToAdd\":\"{\\\\r\\\\n                        Console.ForegroundColor = ConsoleColor.Yellow;\\\\r\\\\n                        Exception thro = null;\\\\r\\\\n                        await Task.Run(async () =>\\\\r\\\\n                        \"},{\"Position\":15573,\"NumberToRemove\":191,\"ContentToAdd\":\"{\\\\r\\\\n                            try\\\\r\\\\n                            \"},{\"Position\":15641,\"NumberToRemove\":183,\"ContentToAdd\":\"{\\\\r\\\\n                                await cmds[parameters[0].ToLower()]();\\\\r\\\\n                            }\\\\r\\\\n                            catch (Exception e)\\\\r\\\\n                            \"},{\"Position\":15832,\"NumberToRemove\":138,\"ContentToAdd\":\"{\\\\r\\\\n                                thro = e;\\\\r\\\\n                            }\\\\r\\\\n                        });\\\\r\\\\n                        if (thro != null)\\\\r\\\\n                        \"},{\"Position\":16015,\"NumberToRemove\":442,\"ContentToAdd\":\"{\\\\r\\\\n                            Fail(thro);\\\\r\\\\n                        }\\\\r\\\\n                        if (home)\\\\r\\\\n                        \"},{\"Position\":16153,\"NumberToRemove\":132,\"ContentToAdd\":\"{\\\\r\\\\n                            break;\\\\r\\\\n                        }\\\\r\\\\n                        //await Task.Run(() => cmds[parameters[0]]);\\\\r\\\\n                        Console.ForegroundColor = ConsoleColor.DarkYellow;\\\\r\\\\n                        Console.WriteLine(\\\\\\\"Finished\\\\\\\");\\\\r\\\\n                        Console.ForegroundColor = ConsoleColor.Gray;\\\\r\\\\n                    }\\\\r\\\\n                    catch (Exception e)\\\\r\\\\n                    \"},{\"Position\":16595,\"NumberToRemove\":128,\"ContentToAdd\":\"{\\\\r\\\\n                        Fail(e);\\\\r\\\\n                    }\\\\r\\\\n                    void Fail(Exception e)\\\\r\\\\n                    \"},{\"Position\":16727,\"NumberToRemove\":24,\"ContentToAdd\":\"{\\\\r\\\\n                        Console.ForegroundColor = ConsoleColor.Red;\\\\r\\\\n                        Console.WriteLine($\\\\\\\"Error: \"},{\"Position\":16855,\"NumberToRemove\":248,\"ContentToAdd\":\"{e.Message}\\\\\\\\nLocation: \"},{\"Position\":16879,\"NumberToRemove\":76,\"ContentToAdd\":\"{e.StackTrace/*}\\\\\\\");*/.Remove(e.StackTrace.IndexOf(\\\\\\\"--- End of\\\\\\\"))}\\\\\\\");\\\\r\\\\n                        Console.ForegroundColor = ConsoleColor.Yellow;\\\\r\\\\n                        if (help.ContainsKey(parameters[0].ToLower()))\\\\r\\\\n                        \"},{\"Position\":17127,\"NumberToRemove\":124,\"ContentToAdd\":\"{\\\\r\\\\n                            Console.WriteLine($\\\\\\\"Proper command usage: \"},{\"Position\":17203,\"NumberToRemove\":500,\"ContentToAdd\":\"{help[parameters[0].ToLower()]}\\\\\\\");\\\\r\\\\n                        }\\\\r\\\\n                        else\\\\r\\\\n                        \"},{\"Position\":17327,\"NumberToRemove\":231,\"ContentToAdd\":\"{\\\\r\\\\n                            Console.WriteLine(\\\\\\\"Unsupported command\\\\\\\");\\\\r\\\\n                        }\\\\r\\\\n                        Console.ForegroundColor = ConsoleColor.Gray;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                Console.ForegroundColor = ConsoleColor.Gray;\\\\r\\\\n                Console.Clear();\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        private static async Task RedrawCommand(Account account, string path, Dictionary<string, Func<Task>> cmds2)\\\\r\\\\n        \"},{\"Position\":17827,\"NumberToRemove\":360,\"ContentToAdd\":\"{\\\\r\\\\n            Console.ForegroundColor = ConsoleColor.Gray;\\\\r\\\\n            await ReDraw(path, cmds2, account == null ? \\\\\\\"None\\\\\\\" : account.Username);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public static Account EnterAccountInfo()\\\\r\\\\n        \"},{\"Position\":18058,\"NumberToRemove\":183,\"ContentToAdd\":\"{\\\\r\\\\n            Console.WriteLine(\\\\\\\"Please enter your username.\\\\\\\"); string username = Console.ReadLine();\\\\r\\\\n            Console.WriteLine(\\\\\\\"Please enter your password.\\\\\\\");\\\\r\\\\n            string password = SecureEnterText();\\\\r\\\\n            return new Account(username, password);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        private static string SecureEnterText()\\\\r\\\\n        \"},{\"Position\":18418,\"NumberToRemove\":66,\"ContentToAdd\":\"{\\\\r\\\\n            string password = \\\\\\\"\\\\\\\";\\\\r\\\\n            ConsoleKeyInfo key = new ConsoleKeyInfo('\\\\\\\\x008', ConsoleKey.Backspace, false, false, false);\\\\r\\\\n            do\\\\r\\\\n            \"},{\"Position\":18601,\"NumberToRemove\":117,\"ContentToAdd\":\"{\\\\r\\\\n                if (Console.KeyAvailable)\\\\r\\\\n                \"},{\"Position\":18667,\"NumberToRemove\":112,\"ContentToAdd\":\"{\\\\r\\\\n                    key = Console.ReadKey(true);\\\\r\\\\n                    switch (key.Key)\\\\r\\\\n                    \"},{\"Position\":18784,\"NumberToRemove\":532,\"ContentToAdd\":\"{\\\\r\\\\n                        case ConsoleKey.Backspace:\\\\r\\\\n                            if (password.Length > 0) \"},{\"Position\":18896,\"NumberToRemove\":81,\"ContentToAdd\":\"{ password = password.Remove(password.Length - 1); }\\\\r\\\\n                            break;\\\\r\\\\n                        case ConsoleKey.Enter: break;\\\\r\\\\n                        default:\\\\r\\\\n                            password += key.KeyChar; break;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            while (key.Key != ConsoleKey.Enter);\\\\r\\\\n            return password;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public static async Task ReDraw(string path, Dictionary<string, Func<Task>> cmds, string username)\\\\r\\\\n        \"},{\"Position\":19428,\"NumberToRemove\":17,\"ContentToAdd\":\"{\\\\r\\\\n            Console.Clear();\\\\r\\\\n            Console.WriteLine($\\\\\\\"File path: \"},{\"Position\":19509,\"NumberToRemove\":18,\"ContentToAdd\":\"{path}\\\\\\\\nOrigin: \"},{\"Position\":19526,\"NumberToRemove\":47,\"ContentToAdd\":\"{(File.Exists($@\\\\\\\"\"},{\"Position\":19544,\"NumberToRemove\":53,\"ContentToAdd\":\"{path}\\\\\\\\.pvc\\\\\\\\origin\\\\\\\") ? File.ReadAllText($@\\\\\\\"\"},{\"Position\":19591,\"NumberToRemove\":138,\"ContentToAdd\":\"{path}\\\\\\\\.pvc\\\\\\\\origin\\\\\\\") : \\\\\\\"none\\\\\\\")}\\\\\\\\nLogged in as: \"},{\"Position\":19644,\"NumberToRemove\":105,\"ContentToAdd\":\"{username}\\\\\\\");\\\\r\\\\n            Console.WriteLine(\\\\\\\"Commands:\\\\\\\");\\\\r\\\\n            foreach (string cmd in cmds.Keys.ToArray())\\\\r\\\\n            \"},{\"Position\":19782,\"NumberToRemove\":587,\"ContentToAdd\":\"{\\\\r\\\\n                Console.WriteLine(\\\\\\\"\\\\\\\\t\\\\\\\" + cmd);\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":19887,\"NumberToRemove\":3016,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient\\\\\\\\PVCClient.csproj\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<Project ToolsVersion=\\\\\\\"15.0\\\\\\\" xmlns=\\\\\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\\\\\">\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props\\\\\\\" Condition=\\\\\\\"Exists('$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props')\\\\\\\" />\\\\r\\\\n  <PropertyGroup>\\\\r\\\\n    <Configuration Condition=\\\\\\\" '$(Configuration)' == '' \\\\\\\">Debug</Configuration>\\\\r\\\\n    <Platform Condition=\\\\\\\" '$(Platform)' == '' \\\\\\\">AnyCPU</Platform>\\\\r\\\\n    <ProjectGuid>\"},{\"Position\":20474,\"NumberToRemove\":223,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}</ProjectGuid>\\\\r\\\\n    <OutputType>Exe</OutputType>\\\\r\\\\n    <RootNamespace>PVCClient</RootNamespace>\\\\r\\\\n    <AssemblyName>PVCClient</AssemblyName>\\\\r\\\\n    <TargetFrameworkVersion>v4.7.1</TargetFrameworkVersion>\\\\r\\\\n    <FileAlignment>512</FileAlignment>\\\\r\\\\n    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>\\\\r\\\\n    <TargetFrameworkProfile />\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \\\\\\\">\\\\r\\\\n    <PlatformTarget>AnyCPU</PlatformTarget>\\\\r\\\\n    <DebugSymbols>true</DebugSymbols>\\\\r\\\\n    <DebugType>full</DebugType>\\\\r\\\\n    <Optimize>false</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Debug\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n    <LangVersion>latest</LangVersion>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \\\\\\\">\\\\r\\\\n    <PlatformTarget>AnyCPU</PlatformTarget>\\\\r\\\\n    <DebugType>pdbonly</DebugType>\\\\r\\\\n    <Optimize>true</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Release\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Reference Include=\\\\\\\"McMaster.Extensions.CommandLineUtils, Version=2.2.5.0, Culture=neutral, PublicKeyToken=6f71cb76b82f055d, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\McMaster.Extensions.CommandLineUtils.2.2.5\\\\\\\\lib\\\\\\\\net45\\\\\\\\McMaster.Extensions.CommandLineUtils.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\Newtonsoft.Json.12.0.1\\\\\\\\lib\\\\\\\\net45\\\\\\\\Newtonsoft.Json.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ComponentModel.DataAnnotations\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Core\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\System.ValueTuple.4.5.0\\\\\\\\lib\\\\\\\\net47\\\\\\\\System.ValueTuple.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml.Linq\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data.DataSetExtensions\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"Microsoft.CSharp\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Net.Http\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Compile Include=\\\\\\\"Program.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Properties\\\\\\\\AssemblyInfo.cs\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <None Include=\\\\\\\"App.config\\\\\\\" />\\\\r\\\\n    <None Include=\\\\\\\"packages.config\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <ProjectReference Include=\\\\\\\"..\\\\\\\\PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\\\\\">\\\\r\\\\n      <Project>\"},{\"Position\":23490,\"NumberToRemove\":38,\"ContentToAdd\":\"{3671d7ca-1c5e-469d-9266-8e3617330b7b}</Project>\\\\r\\\\n      <Name>PVCPipeLibrary</Name>\\\\r\\\\n    </ProjectReference>\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildToolsPath)\\\\\\\\Microsoft.CSharp.targets\\\\\\\" />\\\\r\\\\n</Project>\\\"}]},\"},{\"Position\":23713,\"NumberToRemove\":61,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\",\\\"Folders\\\":[\"},{\"Position\":23751,\"NumberToRemove\":1610,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\Properties\\\",\\\"Folders\\\":[],\\\"Files\\\":[\"},{\"Position\":23812,\"NumberToRemove\":258,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\Properties\\\\\\\\AssemblyInfo.cs\\\",\\\"Contents\\\":\\\"using System.Reflection;\\\\r\\\\nusing System.Runtime.CompilerServices;\\\\r\\\\nusing System.Runtime.InteropServices;\\\\r\\\\n\\\\r\\\\n// General Information about an assembly is controlled through the following\\\\r\\\\n// set of attributes. Change these attribute values to modify the information\\\\r\\\\n// associated with an assembly.\\\\r\\\\n[assembly: AssemblyTitle(\\\\\\\"PVCCommandLine\\\\\\\")]\\\\r\\\\n[assembly: AssemblyDescription(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyConfiguration(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCompany(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyProduct(\\\\\\\"PVCCommandLine\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCopyright(\\\\\\\"Copyright ©  2018\\\\\\\")]\\\\r\\\\n[assembly: AssemblyTrademark(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCulture(\\\\\\\"\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Setting ComVisible to false makes the types in this assembly not visible\\\\r\\\\n// to COM components.  If you need to access a type in this assembly from\\\\r\\\\n// COM, set the ComVisible attribute to true on that type.\\\\r\\\\n[assembly: ComVisible(false)]\\\\r\\\\n\\\\r\\\\n// The following GUID is for the ID of the typelib if this project is exposed to COM\\\\r\\\\n[assembly: Guid(\\\\\\\"300570ec-ee81-4c45-a08f-7a2cb6fe22e9\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Version information for an assembly consists of the following four values:\\\\r\\\\n//\\\\r\\\\n//      Major Version\\\\r\\\\n//      Minor Version\\\\r\\\\n//      Build Number\\\\r\\\\n//      Revision\\\\r\\\\n//\\\\r\\\\n// You can specify all the values or you can default the Build and Revision Numbers\\\\r\\\\n// by using the '*' as shown below:\\\\r\\\\n// [assembly: AssemblyVersion(\\\\\\\"1.0.*\\\\\\\")]\\\\r\\\\n[assembly: AssemblyVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n[assembly: AssemblyFileVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":25422,\"NumberToRemove\":327,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\App.config\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<configuration>\\\\r\\\\n    <startup> \\\\r\\\\n        <supportedRuntime version=\\\\\\\"v4.0\\\\\\\" sku=\\\\\\\".NETFramework,Version=v4.6.1\\\\\\\" />\\\\r\\\\n    </startup>\\\\r\\\\n  <runtime>\\\\r\\\\n    <assemblyBinding xmlns=\\\\\\\"urn:schemas-microsoft-com:asm.v1\\\\\\\">\\\\r\\\\n      <dependentAssembly>\\\\r\\\\n        <assemblyIdentity name=\\\\\\\"System.ValueTuple\\\\\\\" publicKeyToken=\\\\\\\"cc7b13ffcd2ddd51\\\\\\\" culture=\\\\\\\"neutral\\\\\\\" />\\\\r\\\\n        <bindingRedirect oldVersion=\\\\\\\"0.0.0.0-4.0.3.0\\\\\\\" newVersion=\\\\\\\"4.0.3.0\\\\\\\" />\\\\r\\\\n      </dependentAssembly>\\\\r\\\\n    </assemblyBinding>\\\\r\\\\n  </runtime>\\\\r\\\\n</configuration>\\\"},\"},{\"Position\":26063,\"NumberToRemove\":124,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\packages.config\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<packages>\\\\r\\\\n  <package id=\\\\\\\"McMaster.Extensions.CommandLineUtils\\\\\\\" version=\\\\\\\"2.2.5\\\\\\\" targetFramework=\\\\\\\"net461\\\\\\\" />\\\\r\\\\n  <package id=\\\\\\\"Newtonsoft.Json\\\\\\\" version=\\\\\\\"12.0.1\\\\\\\" targetFramework=\\\\\\\"net461\\\\\\\" />\\\\r\\\\n  <package id=\\\\\\\"System.ValueTuple\\\\\\\" version=\\\\\\\"4.5.0\\\\\\\" targetFramework=\\\\\\\"net461\\\\\\\" />\\\\r\\\\n</packages>\\\"},\"},{\"Position\":26472,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\Program.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.IO;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Net;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing McMaster.Extensions.CommandLineUtils;\\\\r\\\\nusing PVCPipeLibrary;\\\\r\\\\n\\\\r\\\\nnamespace PVCCommandLine\\\\r\\\\n\"},{\"Position\":26799,\"NumberToRemove\":381,\"ContentToAdd\":\"{\\\\r\\\\n    [Command(\\\\\\\"pvc\\\\\\\")]\\\\r\\\\n    [Subcommand(\\\\\\\"commit\\\\\\\", typeof(CommitCommand))]\\\\r\\\\n    class PVC : PVCCommandBase\\\\r\\\\n    \"},{\"Position\":26923,\"NumberToRemove\":299,\"ContentToAdd\":\"{\\\\r\\\\n        static void Main(string[] args)\\\\r\\\\n        \"},{\"Position\":26979,\"NumberToRemove\":403,\"ContentToAdd\":\"{\\\\r\\\\n            \\\\r\\\\n            CommandLineApplication.ExecuteAsync<PVC>(args);\\\\r\\\\n            Console.ReadKey();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        //https://github.com/natemcmaster/CommandLineUtils/blob/master/docs/samples/subcommands/inheritance/Program.cs\\\\r\\\\n        //CredentialCache\\\\r\\\\n        //NetworkCredential\\\\r\\\\n\\\\r\\\\n        public NetworkCredential GetCredential()\\\\r\\\\n        \"},{\"Position\":27360,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\\r\\\\n            CredentialCache cache = new CredentialCache();\\\\r\\\\n            Credential = cache.GetCredential(new Uri(\\\\\\\"http://pvc-pipe.com\\\\\\\"), \\\\\\\"\\\\\\\");\\\\r\\\\n            return Credential;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public NetworkCredential SetCredential(string username, string password)\\\\r\\\\n        \"},{\"Position\":27659,\"NumberToRemove\":153,\"ContentToAdd\":\"{\\\\r\\\\n            CredentialCache cache = new CredentialCache();\\\\r\\\\n            NetworkCredential cred = new NetworkCredential(username, password);\\\\r\\\\n            Credential = cred;\\\\r\\\\n            cache.Add(new Uri(\\\\\\\"http://pvc-pipe.com\\\\\\\"), \\\\\\\"\\\\\\\", cred);\\\\r\\\\n            return Credential;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [Option(\\\\\\\"--dir=<path>\\\\\\\")]\\\\r\\\\n        [DirectoryExists]\\\\r\\\\n        public string PVCDir \"},{\"Position\":28062,\"NumberToRemove\":137,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        //public string Command \"},{\"Position\":28115,\"NumberToRemove\":107,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public NetworkCredential Credential;\\\\r\\\\n\\\\r\\\\n        public async Task OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":28268,\"NumberToRemove\":285,\"ContentToAdd\":\"{\\\\r\\\\n            app.ShowHelp();\\\\r\\\\n            return;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public override List<string> CreateArgs()\\\\r\\\\n        \"},{\"Position\":28405,\"NumberToRemove\":32,\"ContentToAdd\":\"{\\\\r\\\\n            List<string> args = new List<string>();\\\\r\\\\n            if (PVCDir != null)\\\\r\\\\n            \"},{\"Position\":28512,\"NumberToRemove\":82,\"ContentToAdd\":\"{\\\\r\\\\n                args.Add(\\\\\\\"--dir=\\\\\\\" + PVCDir);\\\\r\\\\n            }\\\\r\\\\n            return args;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    [Command(Description = \\\\\\\"Sign in. Only authenticates when a command which requires an account is run\\\\\\\")]\\\\r\\\\n    class LogInCommand : PVCCommandBase\\\\r\\\\n    \"},{\"Position\":28797,\"NumberToRemove\":266,\"ContentToAdd\":\"{\\\\r\\\\n        private PVC Parent \"},{\"Position\":28829,\"NumberToRemove\":67,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public override List<string> CreateArgs()\\\\r\\\\n        \"},{\"Position\":28911,\"NumberToRemove\":78,\"ContentToAdd\":\"{\\\\r\\\\n            List<string> args = Parent.CreateArgs();\\\\r\\\\n            args.Add(\\\\\\\"login\\\\\\\");\\\\r\\\\n            return args;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    [Command(Description = \\\\\\\"Commit changes to a repository\\\\\\\")]\\\\r\\\\n    class CommitCommand : PVCCommandBase\\\\r\\\\n    \"},{\"Position\":29177,\"NumberToRemove\":48,\"ContentToAdd\":\"{\\\\r\\\\n\\\\r\\\\n        [Option(\\\\\\\"-m\\\\\\\")]\\\\r\\\\n        public string Message \"},{\"Position\":29244,\"NumberToRemove\":82,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        [Option(\\\\\\\"-a\\\\\\\")]\\\\r\\\\n        public string Author \"},{\"Position\":29322,\"NumberToRemove\":145,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        private PVC Parent \"},{\"Position\":29370,\"NumberToRemove\":143,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public override List<string> CreateArgs()\\\\r\\\\n        \"},{\"Position\":29452,\"NumberToRemove\":221,\"ContentToAdd\":\"{\\\\r\\\\n            List<string> args = Parent.CreateArgs();\\\\r\\\\n            args.Add(\\\\\\\"commit\\\\\\\");\\\\r\\\\n            if(Message != null)\\\\r\\\\n            \"},{\"Position\":29597,\"NumberToRemove\":470,\"ContentToAdd\":\"{\\\\r\\\\n                args.Add(\\\\\\\"-m\\\\\\\");\\\\r\\\\n                args.Add(Message);\\\\r\\\\n            }\\\\r\\\\n            if(Author != null)\\\\r\\\\n            \"},{\"Position\":29740,\"NumberToRemove\":183,\"ContentToAdd\":\"{\\\\r\\\\n                args.Add(\\\\\\\"-a\\\\\\\");\\\\r\\\\n                args.Add(Author);\\\\r\\\\n            }\\\\r\\\\n            return args;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":29961,\"NumberToRemove\":71,\"ContentToAdd\":\"{\\\\r\\\\n            PVCServerInterface interf = new PVCServerInterface(string.IsNullOrEmpty(Parent.PVCDir) ? Directory.GetCurrentDirectory() : Parent.PVCDir);\\\\r\\\\n            var message = app.Option(\\\\\\\"-m <MESSAGE>\\\\\\\", \\\\\\\"The message\\\\\\\", CommandOptionType.SingleValue);\\\\r\\\\n            var author = app.Option(\\\\\\\"-a <AUTHOR>\\\\\\\", \\\\\\\"The author\\\\\\\", CommandOptionType.SingleValue);\\\\r\\\\n            Parent.GetCredential();\\\\r\\\\n            if(string.IsNullOrEmpty(Message))\\\\r\\\\n            \"},{\"Position\":30431,\"NumberToRemove\":451,\"ContentToAdd\":\"{\\\\r\\\\n                Console.WriteLine(\\\\\\\"A commit must have a message.\\\\\\\");\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            if (string.IsNullOrEmpty(Author))\\\\r\\\\n            \"},{\"Position\":30614,\"NumberToRemove\":159,\"ContentToAdd\":\"{\\\\r\\\\n                if (Parent.Credential == null)\\\\r\\\\n                \"},{\"Position\":30685,\"NumberToRemove\":202,\"ContentToAdd\":\"{\\\\r\\\\n                    Console.WriteLine(\\\\\\\"A commit must have an author. This can be specified either by using the -a option or by logging in.\\\\\\\");\\\\r\\\\n                    return;\\\\r\\\\n                }\\\\r\\\\n                Author = Parent.Credential.UserName;\\\\r\\\\n            }\\\\r\\\\n            await interf.Commit(Message, Author, Author, DateTime.Now);\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    [HelpOption(\\\\\\\"--help\\\\\\\")]\\\\r\\\\n    abstract class PVCCommandBase\\\\r\\\\n    \"},{\"Position\":31136,\"NumberToRemove\":597,\"ContentToAdd\":\"{\\\\r\\\\n        public abstract List<string> CreateArgs();\\\\r\\\\n\\\\r\\\\n        protected virtual async Task<int> OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":31295,\"NumberToRemove\":2770,\"ContentToAdd\":\"{\\\\r\\\\n            var args = CreateArgs();\\\\r\\\\n\\\\r\\\\n            Console.WriteLine(\\\\\\\"Result = pvc \\\\\\\" + ArgumentEscaper.EscapeAndConcatenate(args));\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":31497,\"NumberToRemove\":221,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\PVCCommandLine.csproj\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<Project ToolsVersion=\\\\\\\"15.0\\\\\\\" xmlns=\\\\\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\\\\\">\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props\\\\\\\" Condition=\\\\\\\"Exists('$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props')\\\\\\\" />\\\\r\\\\n  <PropertyGroup>\\\\r\\\\n    <Configuration Condition=\\\\\\\" '$(Configuration)' == '' \\\\\\\">Debug</Configuration>\\\\r\\\\n    <Platform Condition=\\\\\\\" '$(Platform)' == '' \\\\\\\">AnyCPU</Platform>\\\\r\\\\n    <ProjectGuid>\"},{\"Position\":32094,\"NumberToRemove\":378,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}</ProjectGuid>\\\\r\\\\n    <OutputType>Exe</OutputType>\\\\r\\\\n    <RootNamespace>PVCCommandLine</RootNamespace>\\\\r\\\\n    <AssemblyName>PVCCommandLine</AssemblyName>\\\\r\\\\n    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>\\\\r\\\\n    <FileAlignment>512</FileAlignment>\\\\r\\\\n    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>\\\\r\\\\n    <Deterministic>true</Deterministic>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \\\\\\\">\\\\r\\\\n    <PlatformTarget>AnyCPU</PlatformTarget>\\\\r\\\\n    <DebugSymbols>true</DebugSymbols>\\\\r\\\\n    <DebugType>full</DebugType>\\\\r\\\\n    <Optimize>false</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Debug\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n    <LangVersion>7.3</LangVersion>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \\\\\\\">\\\\r\\\\n    <PlatformTarget>AnyCPU</PlatformTarget>\\\\r\\\\n    <DebugType>pdbonly</DebugType>\\\\r\\\\n    <Optimize>true</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Release\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Reference Include=\\\\\\\"McMaster.Extensions.CommandLineUtils, Version=2.2.5.0, Culture=neutral, PublicKeyToken=6f71cb76b82f055d, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\McMaster.Extensions.CommandLineUtils.2.2.5\\\\\\\\lib\\\\\\\\net45\\\\\\\\McMaster.Extensions.CommandLineUtils.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\Newtonsoft.Json.12.0.1\\\\\\\\lib\\\\\\\\net45\\\\\\\\Newtonsoft.Json.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ComponentModel.DataAnnotations\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Core\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\System.ValueTuple.4.5.0\\\\\\\\lib\\\\\\\\net461\\\\\\\\System.ValueTuple.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml.Linq\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data.DataSetExtensions\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"Microsoft.CSharp\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Net.Http\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Compile Include=\\\\\\\"Program.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Properties\\\\\\\\AssemblyInfo.cs\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <None Include=\\\\\\\"App.config\\\\\\\" />\\\\r\\\\n    <None Include=\\\\\\\"packages.config\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <ProjectReference Include=\\\\\\\"..\\\\\\\\PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\\\\\">\\\\r\\\\n      <Project>\"},{\"Position\":35127,\"NumberToRemove\":37,\"ContentToAdd\":\"{3671d7ca-1c5e-469d-9266-8e3617330b7b}</Project>\\\\r\\\\n      <Name>PVCPipeLibrary</Name>\\\\r\\\\n    </ProjectReference>\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildToolsPath)\\\\\\\\Microsoft.CSharp.targets\\\\\\\" />\\\\r\\\\n</Project>\\\"},\"},{\"Position\":35348,\"NumberToRemove\":60,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\PVCCommandLine.csproj.user\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<Project ToolsVersion=\\\\\\\"15.0\\\\\\\" xmlns=\\\\\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\\\\\">\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\"'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'\\\\\\\">\\\\r\\\\n    <StartArguments>--help</StartArguments>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n</Project>\\\"}]},\"},{\"Position\":35726,\"NumberToRemove\":1607,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\",\\\"Folders\\\":[\"},{\"Position\":35763,\"NumberToRemove\":78,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Properties\\\",\\\"Folders\\\":[],\\\"Files\\\":[\"},{\"Position\":35823,\"NumberToRemove\":37,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Properties\\\\\\\\AssemblyInfo.cs\\\",\\\"Contents\\\":\\\"using System.Reflection;\\\\r\\\\nusing System.Runtime.CompilerServices;\\\\r\\\\nusing System.Runtime.InteropServices;\\\\r\\\\n\\\\r\\\\n// General Information about an assembly is controlled through the following\\\\r\\\\n// set of attributes. Change these attribute values to modify the information\\\\r\\\\n// associated with an assembly.\\\\r\\\\n[assembly: AssemblyTitle(\\\\\\\"PVCPipeClient\\\\\\\")]\\\\r\\\\n[assembly: AssemblyDescription(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyConfiguration(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCompany(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyProduct(\\\\\\\"PVCPipeClient\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCopyright(\\\\\\\"Copyright ©  2018\\\\\\\")]\\\\r\\\\n[assembly: AssemblyTrademark(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCulture(\\\\\\\"\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Setting ComVisible to false makes the types in this assembly not visible\\\\r\\\\n// to COM components.  If you need to access a type in this assembly from\\\\r\\\\n// COM, set the ComVisible attribute to true on that type.\\\\r\\\\n[assembly: ComVisible(false)]\\\\r\\\\n\\\\r\\\\n// The following GUID is for the ID of the typelib if this project is exposed to COM\\\\r\\\\n[assembly: Guid(\\\\\\\"3671d7ca-1c5e-469d-9266-8e3617330b7b\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Version information for an assembly consists of the following four values:\\\\r\\\\n//\\\\r\\\\n//      Major Version\\\\r\\\\n//      Minor Version\\\\r\\\\n//      Build Number\\\\r\\\\n//      Revision\\\\r\\\\n//\\\\r\\\\n// You can specify all the values or you can default the Build and Revision Numbers\\\\r\\\\n// by using the '*' as shown below:\\\\r\\\\n// [assembly: AssemblyVersion(\\\\\\\"1.0.*\\\\\\\")]\\\\r\\\\n[assembly: AssemblyVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n[assembly: AssemblyFileVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":37430,\"NumberToRemove\":143,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Account.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":37508,\"NumberToRemove\":107,\"ContentToAdd\":\"{\\\\r\\\\n    public class Account\\\\r\\\\n    \"},{\"Position\":37545,\"NumberToRemove\":212,\"ContentToAdd\":\"{\\\\r\\\\n        public string Username;\\\\r\\\\n        public string Password;\\\\r\\\\n        public Account(string username, string password)\\\\r\\\\n        \"},{\"Position\":37688,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n            Username = username;\\\\r\\\\n            Password = password;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":37795,\"NumberToRemove\":33,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Commit.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\n\\\\r\\\\nnamespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":38007,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n    public class Commit\\\\r\\\\n    \"},{\"Position\":38043,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n        public string Diffs \"},{\"Position\":38076,\"NumberToRemove\":50,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public int Parent \"},{\"Position\":38123,\"NumberToRemove\":53,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Message \"},{\"Position\":38174,\"NumberToRemove\":57,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Author \"},{\"Position\":38224,\"NumberToRemove\":148,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Committer \"},{\"Position\":38277,\"NumberToRemove\":240,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public DateTime DateAndTime \"},{\"Position\":38334,\"NumberToRemove\":81,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public Commit(string diffs, string message, string author, string committer, int parent, DateTime dateTime)\\\\r\\\\n        \"},{\"Position\":38482,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n            Diffs = diffs;\\\\r\\\\n            Message = message;\\\\r\\\\n            Author = author;\\\\r\\\\n            Committer = committer;\\\\r\\\\n            Parent = parent;\\\\r\\\\n            DateAndTime = dateTime;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":38722,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\packages.config\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<packages>\\\\r\\\\n  <package id=\\\\\\\"Newtonsoft.Json\\\\\\\" version=\\\\\\\"12.0.1\\\\\\\" targetFramework=\\\\\\\"net461\\\\\\\" />\\\\r\\\\n  <package id=\\\\\\\"System.ValueTuple\\\\\\\" version=\\\\\\\"4.5.0\\\\\\\" targetFramework=\\\\\\\"net461\\\\\\\" />\\\\r\\\\n</packages>\\\"},\"},{\"Position\":39024,\"NumberToRemove\":129,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PullResult.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":39105,\"NumberToRemove\":81,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":39161,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n        public enum PullResult\\\\r\\\\n        \"},{\"Position\":39208,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n            Success = 0,\\\\r\\\\n            Uncommitted_Changes,\\\\r\\\\n            Merge_Conflict\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":39337,\"NumberToRemove\":254,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PushResult.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":39418,\"NumberToRemove\":596,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":39474,\"NumberToRemove\":2660,\"ContentToAdd\":\"{\\\\r\\\\n        public enum PushResult\\\\r\\\\n        \"},{\"Position\":39521,\"NumberToRemove\":358,\"ContentToAdd\":\"{\\\\r\\\\n            Success = 0,\\\\r\\\\n            Uncommited_Changes,\\\\r\\\\n            Conflict,\\\\r\\\\n            Authentication_Error,\\\\r\\\\n            Bad_Request,\\\\r\\\\n            No_Response_From_Server,\\\\r\\\\n            Up_to_Date\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":39775,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<Project ToolsVersion=\\\\\\\"15.0\\\\\\\" xmlns=\\\\\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\\\\\">\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props\\\\\\\" Condition=\\\\\\\"Exists('$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props')\\\\\\\" />\\\\r\\\\n  <PropertyGroup>\\\\r\\\\n    <Configuration Condition=\\\\\\\" '$(Configuration)' == '' \\\\\\\">Debug</Configuration>\\\\r\\\\n    <Platform Condition=\\\\\\\" '$(Platform)' == '' \\\\\\\">AnyCPU</Platform>\\\\r\\\\n    <ProjectGuid>\"},{\"Position\":40371,\"NumberToRemove\":37,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}</ProjectGuid>\\\\r\\\\n    <OutputType>Library</OutputType>\\\\r\\\\n    <AppDesignerFolder>Properties</AppDesignerFolder>\\\\r\\\\n    <RootNamespace>PVCPipeClient</RootNamespace>\\\\r\\\\n    <AssemblyName>PVCPipeClient</AssemblyName>\\\\r\\\\n    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>\\\\r\\\\n    <FileAlignment>512</FileAlignment>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \\\\\\\">\\\\r\\\\n    <DebugSymbols>true</DebugSymbols>\\\\r\\\\n    <DebugType>full</DebugType>\\\\r\\\\n    <Optimize>false</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Debug\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \\\\\\\">\\\\r\\\\n    <DebugType>pdbonly</DebugType>\\\\r\\\\n    <Optimize>true</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Release\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Reference Include=\\\\\\\"Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\Newtonsoft.Json.12.0.1\\\\\\\\lib\\\\\\\\net45\\\\\\\\Newtonsoft.Json.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Core\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\System.ValueTuple.4.5.0\\\\\\\\lib\\\\\\\\net461\\\\\\\\System.ValueTuple.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml.Linq\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data.DataSetExtensions\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"Microsoft.CSharp\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Net.Http\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Compile Include=\\\\\\\"Account.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Commit.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Properties\\\\\\\\AssemblyInfo.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"PullResult.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"PushResult.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"PVCServerInterface.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"RegisterResult.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Status.cs\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <None Include=\\\\\\\"packages.config\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildToolsPath)\\\\\\\\Microsoft.CSharp.targets\\\\\\\" />\\\\r\\\\n</Project>\\\"},\"},{\"Position\":43031,\"NumberToRemove\":165,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PVCServerInterface.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.IO;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Net;\\\\r\\\\nusing System.Net.Http;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Text.RegularExpressions;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing Newtonsoft.Json;\\\\r\\\\n\\\\r\\\\nnamespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":43389,\"NumberToRemove\":155,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":43445,\"NumberToRemove\":145,\"ContentToAdd\":\"{\\\\r\\\\n        class Folder\\\\r\\\\n        \"},{\"Position\":43482,\"NumberToRemove\":202,\"ContentToAdd\":\"{\\\\r\\\\n            public string Path;\\\\r\\\\n            public Folder[] Folders;\\\\r\\\\n            public FileObj[] Files;\\\\r\\\\n        }\\\\r\\\\n        class FileObj\\\\r\\\\n        \"},{\"Position\":43647,\"NumberToRemove\":189,\"ContentToAdd\":\"{\\\\r\\\\n            public string Path;\\\\r\\\\n            public string Contents;\\\\r\\\\n\\\\r\\\\n            public FileObj(string path, string contents)\\\\r\\\\n            \"},{\"Position\":43802,\"NumberToRemove\":85,\"ContentToAdd\":\"{\\\\r\\\\n                Path = path;\\\\r\\\\n                Contents = contents;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        class Diff\\\\r\\\\n        \"},{\"Position\":43947,\"NumberToRemove\":45,\"ContentToAdd\":\"{\\\\r\\\\n            public int Position;\\\\r\\\\n            public int NumberToRemove;\\\\r\\\\n            public string ContentToAdd;\\\\r\\\\n            public Diff(int pos, int numToRem, string toAdd)\\\\r\\\\n            \"},{\"Position\":44149,\"NumberToRemove\":113,\"ContentToAdd\":\"{\\\\r\\\\n                Position = pos;\\\\r\\\\n                NumberToRemove = numToRem;\\\\r\\\\n                ContentToAdd = toAdd;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public Account User \"},{\"Position\":44338,\"NumberToRemove\":62,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public async Task<string> GetCurrentBranch()\\\\r\\\\n        \"},{\"Position\":44423,\"NumberToRemove\":111,\"ContentToAdd\":\"{\\\\r\\\\n            return File.ReadAllText($@\\\\\\\"\"},{\"Position\":44468,\"NumberToRemove\":53,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<string[]> GetAllBranches()\\\\r\\\\n        \"},{\"Position\":44581,\"NumberToRemove\":185,\"ContentToAdd\":\"{\\\\r\\\\n            string[] temp = Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":44643,\"NumberToRemove\":105,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\").ToArray();\\\\r\\\\n            for (int i = 0; i < temp.Length; i++)\\\\r\\\\n            \"},{\"Position\":44754,\"NumberToRemove\":290,\"ContentToAdd\":\"{\\\\r\\\\n                temp[i] = temp[i].Remove(0, $@\\\\\\\"\"},{\"Position\":44807,\"NumberToRemove\":59,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\\\\\\\".Length);\\\\r\\\\n            }\\\\r\\\\n            return temp;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        async Task<Diff[]> GetDiffs(string left, string right)\\\\r\\\\n        \"},{\"Position\":44992,\"NumberToRemove\":86,\"ContentToAdd\":\"{\\\\r\\\\n            List<Diff> diffs = new List<Diff>();\\\\r\\\\n            await Task.Run(() =>\\\\r\\\\n            \"},{\"Position\":45097,\"NumberToRemove\":41,\"ContentToAdd\":\"{\\\\r\\\\n                //Try checking each character of right against left until there is a mismatch. Then maybe recursive call on shortened file?\\\\r\\\\n                //New strat: For now, trying out comparing lines. Check line against line\\\\r\\\\n                string[] leftLines = left.Split('\"},{\"Position\":45387,\"NumberToRemove\":122,\"ContentToAdd\":\"{');\\\\r\\\\n                string[] rightLines = right.Split('\"},{\"Position\":45446,\"NumberToRemove\":42,\"ContentToAdd\":\"{');\\\\r\\\\n                for (int i = 1; i < leftLines.Length; i++)\\\\r\\\\n                \"},{\"Position\":45532,\"NumberToRemove\":229,\"ContentToAdd\":\"{\\\\r\\\\n                    leftLines[i] = '\"},{\"Position\":45573,\"NumberToRemove\":244,\"ContentToAdd\":\"{' + leftLines[i];\\\\r\\\\n                }\\\\r\\\\n                for (int i = 1; i < rightLines.Length; i++)\\\\r\\\\n                \"},{\"Position\":45695,\"NumberToRemove\":77,\"ContentToAdd\":\"{\\\\r\\\\n                    rightLines[i] = '\"},{\"Position\":45737,\"NumberToRemove\":277,\"ContentToAdd\":\"{' + rightLines[i];\\\\r\\\\n                }\\\\r\\\\n                int loopLength = leftLines.Length > rightLines.Length ? leftLines.Length : rightLines.Length;\\\\r\\\\n                for (int i = 0; i < loopLength; i++)\\\\r\\\\n                \"},{\"Position\":45966,\"NumberToRemove\":218,\"ContentToAdd\":\"{\\\\r\\\\n                    string strLeft = i < leftLines.Length ? leftLines[i] : null;\\\\r\\\\n                    string strRight = i < rightLines.Length ? rightLines[i] : null;\\\\r\\\\n                    if (strLeft != strRight)\\\\r\\\\n                    \"},{\"Position\":46210,\"NumberToRemove\":315,\"ContentToAdd\":\"{\\\\r\\\\n                        if (strLeft == null)\\\\r\\\\n                        \"},{\"Position\":46287,\"NumberToRemove\":144,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, leftLines.Length) + cumulativeLength(rightLines, i, leftLines.Length), 0, strRight));\\\\r\\\\n                        }\\\\r\\\\n                        else if (strRight == null)\\\\r\\\\n                        \"},{\"Position\":46564,\"NumberToRemove\":282,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, rightLines.Length), leftLines[i].Length, \\\\\\\"\\\\\\\"));\\\\r\\\\n                        }\\\\r\\\\n                        else\\\\r\\\\n                        \"},{\"Position\":46782,\"NumberToRemove\":71,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, i), leftLines[i].Length, strRight));\\\\r\\\\n                        }\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                int cumulativeLength(string[] array, int endingIndexPlusOne, int startingIndex = 0)\\\\r\\\\n                \"},{\"Position\":47097,\"NumberToRemove\":239,\"ContentToAdd\":\"{\\\\r\\\\n                    int cumLen = 0;\\\\r\\\\n                    for (int i = startingIndex; i < endingIndexPlusOne; i++)\\\\r\\\\n                    \"},{\"Position\":47241,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n                        cumLen += array[i].Length;\\\\r\\\\n                    }\\\\r\\\\n                    return cumLen;\\\\r\\\\n                }\\\\r\\\\n            });\\\\r\\\\n            return diffs.ToArray();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        string MergeDiffs(string left, Diff[] diffs)\\\\r\\\\n        \"},{\"Position\":47523,\"NumberToRemove\":49,\"ContentToAdd\":\"{\\\\r\\\\n            for (int i = 0; i < diffs.Length; i++)\\\\r\\\\n            \"},{\"Position\":47594,\"NumberToRemove\":89,\"ContentToAdd\":\"{\\\\r\\\\n                left = left.Remove(diffs[i].Position, diffs[i].NumberToRemove).Insert(diffs[i].Position, diffs[i].ContentToAdd);\\\\r\\\\n            }\\\\r\\\\n            return left;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public string Origin\\\\r\\\\n        \"},{\"Position\":47833,\"NumberToRemove\":69,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":47869,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n                return File.ReadAllText($@\\\\\\\"\"},{\"Position\":47918,\"NumberToRemove\":42,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\origin\\\\\\\");\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public string Path \"},{\"Position\":48007,\"NumberToRemove\":42,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string[] IgnoredPaths\\\\r\\\\n        \"},{\"Position\":48076,\"NumberToRemove\":45,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":48112,\"NumberToRemove\":98,\"ContentToAdd\":\"{\\\\r\\\\n                if (!File.Exists($@\\\\\\\"\"},{\"Position\":48154,\"NumberToRemove\":307,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":48196,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n                    return new string[] \"},{\"Position\":48241,\"NumberToRemove\":246,\"ContentToAdd\":\"{ @\\\\\\\"\\\\\\\\.pvc\\\\\\\" };\\\\r\\\\n                }\\\\r\\\\n                string[] igPaths = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":48339,\"NumberToRemove\":100,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n                string[] igPaths2 = new string[igPaths.Length + 1];\\\\r\\\\n                igPaths.CopyTo(igPaths2, 1);\\\\r\\\\n                igPaths2[0] = @\\\\\\\"\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n                return igPaths2;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public string IgnoredRegex\\\\r\\\\n        \"},{\"Position\":48646,\"NumberToRemove\":61,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":48682,\"NumberToRemove\":121,\"ContentToAdd\":\"{\\\\r\\\\n                return IgnoredPaths.Length > 1 ? (IgnoredPaths[1].StartsWith(\\\\\\\"R: \\\\\\\") ? IgnoredPaths[1].Remove(0, 3) : \\\\\\\"\\\\\\\") : \\\\\\\"\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        public async Task SetIgnoredRegex(string regexToIgnore)\\\\r\\\\n        \"},{\"Position\":48928,\"NumberToRemove\":111,\"ContentToAdd\":\"{\\\\r\\\\n            if (IgnoredPaths.Length > 1 && IgnoredPaths[1].StartsWith(\\\\\\\"R: \\\\\\\"))\\\\r\\\\n            \"},{\"Position\":49028,\"NumberToRemove\":38,\"ContentToAdd\":\"{\\\\r\\\\n                string[] linesa = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":49089,\"NumberToRemove\":43,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n                linesa[0] = \\\\\\\"R: \\\\\\\" + regexToIgnore;\\\\r\\\\n                File.WriteAllLines($@\\\\\\\"\"},{\"Position\":49210,\"NumberToRemove\":146,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", linesa);\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            if (!File.Exists($@\\\\\\\"\"},{\"Position\":49321,\"NumberToRemove\":216,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":49359,\"NumberToRemove\":120,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":49402,\"NumberToRemove\":41,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", \\\\\\\"R: \\\\\\\" + regexToIgnore);\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            string[] lines = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":49548,\"NumberToRemove\":131,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n            string[] lines2 = new string[lines.Length + 1];\\\\r\\\\n            lines.CopyTo(lines2, 1);\\\\r\\\\n            lines2[0] = \\\\\\\"R: \\\\\\\" + regexToIgnore;\\\\r\\\\n            File.WriteAllLines($@\\\\\\\"\"},{\"Position\":49764,\"NumberToRemove\":37,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", lines2);\\\\r\\\\n        }\\\\r\\\\n        public async Task IgnorePaths(string[] pathsToIgnore)\\\\r\\\\n        \"},{\"Position\":49884,\"NumberToRemove\":38,\"ContentToAdd\":\"{\\\\r\\\\n            File.AppendAllLines($@\\\\\\\"\"},{\"Position\":49925,\"NumberToRemove\":44,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", pathsToIgnore);\\\\r\\\\n        }\\\\r\\\\n        public async Task UnignorePaths(string[] pathsToUnignore)\\\\r\\\\n        \"},{\"Position\":50056,\"NumberToRemove\":44,\"ContentToAdd\":\"{\\\\r\\\\n            if (File.Exists($@\\\\\\\"\"},{\"Position\":50093,\"NumberToRemove\":136,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":50131,\"NumberToRemove\":74,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllLines($@\\\\\\\"\"},{\"Position\":50175,\"NumberToRemove\":46,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", File.ReadAllLines($@\\\\\\\"\"},{\"Position\":50219,\"NumberToRemove\":52,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\").Except(pathsToUnignore));\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        //public Func<string, string, string> GetDiffs \"},{\"Position\":50355,\"NumberToRemove\":99,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Func<string, string, string> MergeDiffs \"},{\"Position\":50429,\"NumberToRemove\":36,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Commit Head \"},{\"Position\":50475,\"NumberToRemove\":148,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Commit[] Branches \"},{\"Position\":50527,\"NumberToRemove\":585,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        HttpClient client;\\\\r\\\\n\\\\r\\\\n        public HttpClient HttpClient\\\\r\\\\n        \"},{\"Position\":50626,\"NumberToRemove\":431,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":50662,\"NumberToRemove\":432,\"ContentToAdd\":\"{\\\\r\\\\n                return client;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public PVCServerInterface(/*Commit head,*/ string path)\\\\r\\\\n        \"},{\"Position\":50810,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n            client = new HttpClient();\\\\r\\\\n            //Head = head;\\\\r\\\\n            Path = path;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Registers the account specified in the User property of this client-server interface at the specified URL and with the specified recovery email.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <param name=\\\\\\\"registerURL\\\\\\\"></param>\\\\r\\\\n        /// <param name=\\\\\\\"recoveryEmail\\\\\\\"></param>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<RegisterResult> RegisterAccount(string registerURL, string recoveryEmail)\\\\r\\\\n        \"},{\"Position\":51395,\"NumberToRemove\":18,\"ContentToAdd\":\"{\\\\r\\\\n            var registered = await client.PostAsync(registerURL, new StringContent(JsonConvert.SerializeObject((User, recoveryEmail)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return registered.IsSuccessStatusCode ? RegisterResult.Success : RegisterResult.Failure;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<RegisterResult> RegisterAccount(string registerURL, Account account, string recoveryEmail)\\\\r\\\\n        \"},{\"Position\":51826,\"NumberToRemove\":255,\"ContentToAdd\":\"{\\\\r\\\\n            User = account;\\\\r\\\\n            var registered = await client.PostAsync(registerURL, new StringContent(JsonConvert.SerializeObject((User, recoveryEmail)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return registered.IsSuccessStatusCode ? RegisterResult.Success : RegisterResult.Failure;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<bool> ResetPassword(string generalResetURL, string username)\\\\r\\\\n        \"},{\"Position\":52258,\"NumberToRemove\":566,\"ContentToAdd\":\"{\\\\r\\\\n            var result = await client.PostAsync($\\\\\\\"\"},{\"Position\":52314,\"NumberToRemove\":94,\"ContentToAdd\":\"{generalResetURL}/\"},{\"Position\":52332,\"NumberToRemove\":116,\"ContentToAdd\":\"{username}\\\\\\\", new StringContent(username, Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return result.IsSuccessStatusCode;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<bool> ChangePassword(string passwordChangeURL, string newPassword)\\\\r\\\\n        \"},{\"Position\":52587,\"NumberToRemove\":172,\"ContentToAdd\":\"{\\\\r\\\\n            var result = await client.PostAsync(passwordChangeURL, new StringContent(JsonConvert.SerializeObject((User, newPassword)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return result.IsSuccessStatusCode;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Creates and commits a commit which undoes the changes of the specified commit.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task RevertCommit(string message, string author, string committer, DateTime dateTime, int idToUndo = -1)\\\\r\\\\n        \"},{\"Position\":53153,\"NumberToRemove\":327,\"ContentToAdd\":\"{\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            if(idToUndo == -1)\\\\r\\\\n            \"},{\"Position\":53247,\"NumberToRemove\":246,\"ContentToAdd\":\"{\\\\r\\\\n                idToUndo = head;\\\\r\\\\n            }\\\\r\\\\n            Commit commitToUndo = GetCommit(idToUndo, $@\\\\\\\"\"},{\"Position\":53363,\"NumberToRemove\":96,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n            Diff[] diffs = JsonConvert.DeserializeObject<Diff[]>(commitToUndo.Diffs);\\\\r\\\\n            Commit parent = GetCommit(commitToUndo.Parent, $@\\\\\\\"\"},{\"Position\":53535,\"NumberToRemove\":247,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n            string parentFiles = GetUpdatedFiles(commitToUndo.Parent);\\\\r\\\\n            Diff[] undoDiffs = await GetDiffs(MergeDiffs(parentFiles, diffs), parentFiles);\\\\r\\\\n            await Commit(author, committer, JsonConvert.SerializeObject(undoDiffs), message, head, dateTime);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<Commit[]> Log()\\\\r\\\\n        \"},{\"Position\":53907,\"NumberToRemove\":262,\"ContentToAdd\":\"{\\\\r\\\\n            List<Commit> ret = new List<Commit>();\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            string path2 = Path + \\\\\\\"\\\\\\\\\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n            Commit temp = GetCommit(head, path2);\\\\r\\\\n            while (true)\\\\r\\\\n            \"},{\"Position\":54153,\"NumberToRemove\":96,\"ContentToAdd\":\"{\\\\r\\\\n                ret.Add(temp);\\\\r\\\\n                if (temp.Parent == 0)\\\\r\\\\n                \"},{\"Position\":54249,\"NumberToRemove\":339,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                temp = GetCommit(temp.Parent, path2);\\\\r\\\\n            }\\\\r\\\\n            return ret.ToArray();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<Commit[]> Log(int number)\\\\r\\\\n        \"},{\"Position\":54496,\"NumberToRemove\":64,\"ContentToAdd\":\"{\\\\r\\\\n            Commit[] ret = new Commit[number];\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            string path2 = Path + \\\\\\\"\\\\\\\\\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n            Commit temp = GetCommit(head, path2);\\\\r\\\\n            for (int i = 0; i < number; i++)\\\\r\\\\n            \"},{\"Position\":54758,\"NumberToRemove\":133,\"ContentToAdd\":\"{\\\\r\\\\n                ret[i] = temp;\\\\r\\\\n                if (temp.Parent == 0)\\\\r\\\\n                \"},{\"Position\":54854,\"NumberToRemove\":260,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                temp = GetCommit(temp.Parent, path2);\\\\r\\\\n            }\\\\r\\\\n            return ret;\\\\r\\\\n\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// WIP\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<PullResult> Pull()\\\\r\\\\n        \"},{\"Position\":55193,\"NumberToRemove\":48,\"ContentToAdd\":\"{\\\\r\\\\n            if (await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":55257,\"NumberToRemove\":140,\"ContentToAdd\":\"{\\\\r\\\\n                return PullResult.Uncommitted_Changes;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":55390,\"NumberToRemove\":30,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool allValid = true;\\\\r\\\\n            foreach (string path in Directory.EnumerateDirectories($@\\\\\\\"\"},{\"Position\":55650,\"NumberToRemove\":83,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":55698,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                string branchCheck = path.Remove(0, Path.Length + 19);\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":55838,\"NumberToRemove\":133,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":55868,\"NumberToRemove\":155,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":55951,\"NumberToRemove\":47,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":55976,\"NumberToRemove\":61,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) != branch1)\\\\r\\\\n                \"},{\"Position\":56109,\"NumberToRemove\":61,\"ContentToAdd\":\"{\\\\r\\\\n                    allValid = false;\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            if (allValid)\\\\r\\\\n            \"},{\"Position\":56264,\"NumberToRemove\":24,\"ContentToAdd\":\"{\\\\r\\\\n                Directory.Move(path2, $@\\\\\\\"\"},{\"Position\":56311,\"NumberToRemove\":308,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcTemp\\\\\\\");\\\\r\\\\n                Directory.Delete($@\\\\\\\"\"},{\"Position\":56372,\"NumberToRemove\":102,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\", true);\\\\r\\\\n                Directory.Move($@\\\\\\\"\"},{\"Position\":56433,\"NumberToRemove\":108,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcTemp\\\\\\\", $@\\\\\\\"\"},{\"Position\":56457,\"NumberToRemove\":194,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n                await Checkout(branch);\\\\r\\\\n                return PullResult.Success;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return PullResult.Merge_Conflict;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<Status> GetStatus(string branch)\\\\r\\\\n        \"},{\"Position\":56765,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n            if (branch == await GetCurrentBranch() && await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":56867,\"NumberToRemove\":54,\"ContentToAdd\":\"{\\\\r\\\\n                return Status.Uncommitted_Changes;\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":56975,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n                await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":57169,\"NumberToRemove\":32,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":57199,\"NumberToRemove\":141,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n                if (!File.Exists($@\\\\\\\"\"},{\"Position\":57278,\"NumberToRemove\":215,\"ContentToAdd\":\"{branch}\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":57310,\"NumberToRemove\":134,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Ahead_of_Origin;\\\\r\\\\n                }\\\\r\\\\n                int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":57451,\"NumberToRemove\":135,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":57476,\"NumberToRemove\":155,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n                int ca = CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2);\\\\r\\\\n                Directory.Delete(path2, true);\\\\r\\\\n                if (branch1 == branch2)\\\\r\\\\n                \"},{\"Position\":57691,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Up_to_Date;\\\\r\\\\n                }\\\\r\\\\n                else if (ca == branch1)\\\\r\\\\n                \"},{\"Position\":57825,\"NumberToRemove\":203,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Behind_Origin;\\\\r\\\\n                }\\\\r\\\\n                else//(ca == branch2)\\\\r\\\\n                \"},{\"Position\":57960,\"NumberToRemove\":38,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Ahead_of_Origin;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            //else if (await CanPush(File.ReadAllText($@\\\\\\\"\"},{\"Position\":58115,\"NumberToRemove\":30,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")))\\\\r\\\\n            //\"},{\"Position\":58162,\"NumberToRemove\":58,\"ContentToAdd\":\"{\\\\r\\\\n            //    return Status.Up_to_Date;\\\\r\\\\n            //}\\\\r\\\\n            //return Status.Out_of_Date;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        public async Task<bool> Checkout(string branch)\\\\r\\\\n        \"},{\"Position\":58365,\"NumberToRemove\":109,\"ContentToAdd\":\"{\\\\r\\\\n            if (!File.Exists($@\\\\\\\"\"},{\"Position\":58403,\"NumberToRemove\":102,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":58433,\"NumberToRemove\":80,\"ContentToAdd\":\"{branch}\\\\\\\") || await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":58491,\"NumberToRemove\":199,\"ContentToAdd\":\"{\\\\r\\\\n                return false;\\\\r\\\\n            }\\\\r\\\\n            await Task.Run(async () =>\\\\r\\\\n            \"},{\"Position\":58600,\"NumberToRemove\":106,\"ContentToAdd\":\"{\\\\r\\\\n                foreach (string path in Directory.EnumerateDirectories(Path))\\\\r\\\\n                \"},{\"Position\":58702,\"NumberToRemove\":156,\"ContentToAdd\":\"{\\\\r\\\\n                    if (path != Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n                    \"},{\"Position\":58782,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                        Directory.Delete(path, true);\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                foreach (string path in Directory.EnumerateFiles(Path))\\\\r\\\\n                \"},{\"Position\":58981,\"NumberToRemove\":161,\"ContentToAdd\":\"{\\\\r\\\\n                    File.Delete(path);\\\\r\\\\n                }\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":59087,\"NumberToRemove\":137,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\", branch);\\\\r\\\\n                await SetFiles(JsonConvert.DeserializeObject<Folder>(GetUpdatedFiles(int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":59243,\"NumberToRemove\":163,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":59273,\"NumberToRemove\":139,\"ContentToAdd\":\"{branch}\\\\\\\")))), Path);\\\\r\\\\n            });\\\\r\\\\n            return true;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task SetFiles(Folder folder, string rootPath)\\\\r\\\\n        \"},{\"Position\":59434,\"NumberToRemove\":257,\"ContentToAdd\":\"{\\\\r\\\\n            Directory.CreateDirectory(rootPath + folder.Path);\\\\r\\\\n            foreach (FileObj file in folder.Files)\\\\r\\\\n            \"},{\"Position\":59571,\"NumberToRemove\":54,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllText(rootPath + file.Path, file.Contents);\\\\r\\\\n            }\\\\r\\\\n            foreach (Folder dir in folder.Folders)\\\\r\\\\n            \"},{\"Position\":59734,\"NumberToRemove\":144,\"ContentToAdd\":\"{\\\\r\\\\n                await SetFiles(dir, rootPath);\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<Folder> LoadFiles()\\\\r\\\\n        \"},{\"Position\":59873,\"NumberToRemove\":79,\"ContentToAdd\":\"{\\\\r\\\\n            return await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<Folder> LoadFiles(string path, int charsToRemoveFromPath, string[] excludedDirs, string regex, string rootPath = \\\\\\\"\\\\\\\")\\\\r\\\\n        \"},{\"Position\":60130,\"NumberToRemove\":228,\"ContentToAdd\":\"{\\\\r\\\\n            if (rootPath == \\\\\\\"\\\\\\\")\\\\r\\\\n            \"},{\"Position\":60184,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n                rootPath = path;\\\\r\\\\n            }\\\\r\\\\n            string[] firstCharsRemoved(string[] start, int charsToRem)\\\\r\\\\n            \"},{\"Position\":60328,\"NumberToRemove\":243,\"ContentToAdd\":\"{\\\\r\\\\n                for (int i = 0; i < start.Length; i++)\\\\r\\\\n                \"},{\"Position\":60407,\"NumberToRemove\":78,\"ContentToAdd\":\"{\\\\r\\\\n                    start[i] = start[i].Remove(0, charsToRem);\\\\r\\\\n                }\\\\r\\\\n                return start;\\\\r\\\\n            }\\\\r\\\\n            string[] exceptRegex(string[] array, string regExpression)\\\\r\\\\n            \"},{\"Position\":60635,\"NumberToRemove\":216,\"ContentToAdd\":\"{\\\\r\\\\n                if (regExpression == \\\\\\\"\\\\\\\")\\\\r\\\\n                \"},{\"Position\":60702,\"NumberToRemove\":373,\"ContentToAdd\":\"{\\\\r\\\\n                    return array;\\\\r\\\\n                }\\\\r\\\\n                Regex regexp = new Regex(regExpression);\\\\r\\\\n                var temp = array.ToList();\\\\r\\\\n                for (int i = 0; i < array.Length; i++)\\\\r\\\\n                \"},{\"Position\":60945,\"NumberToRemove\":85,\"ContentToAdd\":\"{\\\\r\\\\n                    if (regexp.IsMatch(array[i]))\\\\r\\\\n                    \"},{\"Position\":61023,\"NumberToRemove\":14,\"ContentToAdd\":\"{\\\\r\\\\n                        temp.Remove(array[i]);\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                return temp.ToArray();\\\\r\\\\n            }\\\\r\\\\n            Folder folder = new Folder()\\\\r\\\\n            \"},{\"Position\":61239,\"NumberToRemove\":389,\"ContentToAdd\":\"{\\\\r\\\\n                Path = path.Remove(0, charsToRemoveFromPath)\\\\r\\\\n            };\\\\r\\\\n            string[] filePaths = exceptRegex(firstCharsRemoved(Directory.GetFiles(path), charsToRemoveFromPath).Except(excludedDirs).ToArray(), regex);\\\\r\\\\n            folder.Files = new FileObj[filePaths.Length];\\\\r\\\\n            for (int i = 0; i < filePaths.Length; i++)\\\\r\\\\n            \"},{\"Position\":61612,\"NumberToRemove\":60,\"ContentToAdd\":\"{\\\\r\\\\n                folder.Files[i] = new FileObj(filePaths[i], File.ReadAllText($\\\\\\\"\"},{\"Position\":61697,\"NumberToRemove\":10,\"ContentToAdd\":\"{rootPath}\\\\\\\\\\\\\\\\\"},{\"Position\":61711,\"NumberToRemove\":206,\"ContentToAdd\":\"{filePaths[i]}\\\\\\\"));\\\\r\\\\n            }\\\\r\\\\n            Regex regextest = new Regex(regex);\\\\r\\\\n            var folderPaths = exceptRegex(firstCharsRemoved(Directory.GetDirectories(path), charsToRemoveFromPath).Except(excludedDirs).ToArray(), regex);\\\\r\\\\n            folder.Folders = new Folder[folderPaths.Length];\\\\r\\\\n\\\\r\\\\n            for (int i = 0; i < folderPaths.Length; i++)\\\\r\\\\n            \"},{\"Position\":62100,\"NumberToRemove\":96,\"ContentToAdd\":\"{\\\\r\\\\n                folder.Folders[i] = await LoadFiles($\\\\\\\"\"},{\"Position\":62160,\"NumberToRemove\":23,\"ContentToAdd\":\"{rootPath}\"},{\"Position\":62170,\"NumberToRemove\":22,\"ContentToAdd\":\"{folderPaths[i]}\\\\\\\", charsToRemoveFromPath, excludedDirs, regex, rootPath);\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            return folder;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        string GetUpdatedFiles(int latestCommit)\\\\r\\\\n        \"},{\"Position\":62376,\"NumberToRemove\":268,\"ContentToAdd\":\"{\\\\r\\\\n            Commit lastCommit = JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":62472,\"NumberToRemove\":73,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":62495,\"NumberToRemove\":30,\"ContentToAdd\":\"{latestCommit % 100}\\\\\\\\\"},{\"Position\":62517,\"NumberToRemove\":22,\"ContentToAdd\":\"{latestCommit / 100}\\\\\\\"));\\\\r\\\\n            return MergeDiffs(lastCommit.Parent == 0 ? \\\\\\\"\\\\\\\" : GetUpdatedFiles(lastCommit.Parent), JsonConvert.DeserializeObject<Diff[]>(lastCommit.Diffs));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task CreateBranch(string name)\\\\r\\\\n        \"},{\"Position\":62785,\"NumberToRemove\":132,\"ContentToAdd\":\"{\\\\r\\\\n            await CreateBranch(name, int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":62858,\"NumberToRemove\":60,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":62888,\"NumberToRemove\":30,\"ContentToAdd\":\"{File.ReadAllText($@\\\\\\\"\"},{\"Position\":62910,\"NumberToRemove\":109,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")}\\\\\\\")));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task CreateBranch(string name, int commitID)\\\\r\\\\n        \"},{\"Position\":63042,\"NumberToRemove\":112,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(() => File.WriteAllText($@\\\\\\\"\"},{\"Position\":63102,\"NumberToRemove\":167,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":63132,\"NumberToRemove\":59,\"ContentToAdd\":\"{name}\\\\\\\", commitID.ToString()));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task Clone(string orig)\\\\r\\\\n        \"},{\"Position\":63241,\"NumberToRemove\":228,\"ContentToAdd\":\"{\\\\r\\\\n            await Clone(Path, orig, true, @\\\\\\\"\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n            await Checkout(File.ReadAllText($@\\\\\\\"\"},{\"Position\":63353,\"NumberToRemove\":67,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task Clone(string path, string orig, bool loadCommits, string dataAdditional = @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n        \"},{\"Position\":63520,\"NumberToRemove\":343,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(async () =>\\\\r\\\\n            \"},{\"Position\":63579,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n                string path2 = path + dataAdditional;\\\\r\\\\n                Directory.CreateDirectory(path2);\\\\r\\\\n                File.WriteAllText(path2 + @\\\\\\\"\\\\\\\\origin\\\\\\\", orig);\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":63807,\"NumberToRemove\":25,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\");\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":63874,\"NumberToRemove\":104,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\");\\\\r\\\\n                var received = await client.GetAsync(Origin + \\\\\\\"/branches\\\\\\\");\\\\r\\\\n                Dictionary<string, int> branches = JsonConvert.DeserializeObject<Dictionary<string, int>>(received.Content.ReadAsStringAsync().Result);\\\\r\\\\n                foreach (string branch in branches.Keys)\\\\r\\\\n                \"},{\"Position\":64217,\"NumberToRemove\":101,\"ContentToAdd\":\"{\\\\r\\\\n                    File.WriteAllText($@\\\\\\\"\"},{\"Position\":64264,\"NumberToRemove\":80,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":64289,\"NumberToRemove\":297,\"ContentToAdd\":\"{branch}\\\\\\\", branches[branch].ToString());\\\\r\\\\n                }\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":64393,\"NumberToRemove\":160,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\HEAD\\\\\\\", branches.Keys.ToArray()[0]);\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":64494,\"NumberToRemove\":61,\"ContentToAdd\":\"{path2}\\\\\\\\commits\\\\\\\");\\\\r\\\\n\\\\r\\\\n                if (loadCommits)\\\\r\\\\n                \"},{\"Position\":64574,\"NumberToRemove\":16,\"ContentToAdd\":\"{\\\\r\\\\n                    await GetAllCommits(path, branches.Keys.ToArray(), dataAdditional);\\\\r\\\\n                }\\\\r\\\\n            });\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async /*Task<Dictionary<int, Commit>>*/ Task GetAllCommits(string path, string[] branches, string extraString = @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n        \"},{\"Position\":64871,\"NumberToRemove\":255,\"ContentToAdd\":\"{\\\\r\\\\n            // Dictionary<int, Commit> allCommits = new Dictionary<int, Commit>();\\\\r\\\\n            for (int i = 0; i < branches.Length; i++)\\\\r\\\\n            \"},{\"Position\":65031,\"NumberToRemove\":44,\"ContentToAdd\":\"{\\\\r\\\\n                var received = await client.GetAsync($\\\\\\\"\"},{\"Position\":65092,\"NumberToRemove\":6,\"ContentToAdd\":\"{Origin}?branch=\"},{\"Position\":65108,\"NumberToRemove\":24,\"ContentToAdd\":\"{branches[i]}\\\\\\\");\\\\r\\\\n                Dictionary<int, Commit> commits = JsonConvert.DeserializeObject<Dictionary<int, Commit>>(received.Content.ReadAsStringAsync().Result);\\\\r\\\\n                for (int j = 0; j < commits.Keys.Count; j++)\\\\r\\\\n                \"},{\"Position\":65363,\"NumberToRemove\":139,\"ContentToAdd\":\"{\\\\r\\\\n                    string path2 = $@\\\\\\\"\"},{\"Position\":65407,\"NumberToRemove\":9,\"ContentToAdd\":\"{path}\"},{\"Position\":65413,\"NumberToRemove\":314,\"ContentToAdd\":\"{extraString}\\\\\\\\commits\\\\\\\\\"},{\"Position\":65437,\"NumberToRemove\":109,\"ContentToAdd\":\"{commits.Keys.ToArray()[j] % 100}\\\\\\\";\\\\r\\\\n                    Directory.CreateDirectory(path2);\\\\r\\\\n                    File.WriteAllText($@\\\\\\\"\"},{\"Position\":65576,\"NumberToRemove\":30,\"ContentToAdd\":\"{path2}\\\\\\\\\"},{\"Position\":65585,\"NumberToRemove\":22,\"ContentToAdd\":\"{commits.Keys.ToArray()[j] / 100}\\\\\\\", JsonConvert.SerializeObject(commits.Values.ToArray()[j]));\\\\r\\\\n                    // allCommits.Add(commits[j].GetHashCode(),commits[j]);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            //return allCommits;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<int> GetHead()\\\\r\\\\n        \"},{\"Position\":65899,\"NumberToRemove\":142,\"ContentToAdd\":\"{\\\\r\\\\n            int result = 0;\\\\r\\\\n            await Task.Run(() => result = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":66008,\"NumberToRemove\":124,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":66038,\"NumberToRemove\":23,\"ContentToAdd\":\"{File.ReadAllText($@\\\\\\\"\"},{\"Position\":66060,\"NumberToRemove\":67,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")}\\\\\\\")));\\\\r\\\\n            return result;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<int> Commit(Commit commit)\\\\r\\\\n        \"},{\"Position\":66202,\"NumberToRemove\":95,\"ContentToAdd\":\"{\\\\r\\\\n            Guid guid = Guid.NewGuid();\\\\r\\\\n            int hash = guid.GetHashCode();\\\\r\\\\n            string path = $@\\\\\\\"\"},{\"Position\":66326,\"NumberToRemove\":8,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":66349,\"NumberToRemove\":254,\"ContentToAdd\":\"{hash % 100}\\\\\\\";\\\\r\\\\n            await Task.Run(() =>\\\\r\\\\n            \"},{\"Position\":66416,\"NumberToRemove\":230,\"ContentToAdd\":\"{\\\\r\\\\n                Directory.CreateDirectory(path);\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":66511,\"NumberToRemove\":54,\"ContentToAdd\":\"{path}\\\\\\\\\"},{\"Position\":66519,\"NumberToRemove\":477,\"ContentToAdd\":\"{hash / 100}\\\\\\\", JsonConvert.SerializeObject(commit));\\\\r\\\\n            });\\\\r\\\\n            return hash;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task Commit(string author, string committer, string diffs, string message, int parentId, DateTime dateTime)\\\\r\\\\n        \"},{\"Position\":66773,\"NumberToRemove\":66,\"ContentToAdd\":\"{\\\\r\\\\n            await Commit(new Commit(diffs, message, author, committer, parentId, dateTime));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task Commit(string message, string author, string committer, DateTime dateTime)\\\\r\\\\n        \"},{\"Position\":67003,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n            if (dateTime == null)\\\\r\\\\n            \"},{\"Position\":67057,\"NumberToRemove\":122,\"ContentToAdd\":\"{\\\\r\\\\n                dateTime = DateTime.Now;\\\\r\\\\n            }\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            Commit commitToCommit = new Commit(JsonConvert.SerializeObject(await GetDiffs(GetUpdatedFiles(head), JsonConvert.SerializeObject(await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex)))), message, author, committer, head, dateTime);\\\\r\\\\n            int specialHash = await Commit(commitToCommit);\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":67534,\"NumberToRemove\":54,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            File.WriteAllText($@\\\\\\\"\"},{\"Position\":67630,\"NumberToRemove\":59,\"ContentToAdd\":\"{branch}\\\\\\\", specialHash.ToString());\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task DeleteBranch(string branch)\\\\r\\\\n        \"},{\"Position\":67752,\"NumberToRemove\":9,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(() => File.Delete($@\\\\\\\"\"},{\"Position\":67806,\"NumberToRemove\":160,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":67836,\"NumberToRemove\":478,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            //await client.DeleteAsync($\\\\\\\"\"},{\"Position\":67895,\"NumberToRemove\":219,\"ContentToAdd\":\"{Origin}/\"},{\"Position\":67904,\"NumberToRemove\":30,\"ContentToAdd\":\"{branch}\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        //TODO: Detect uncommitted changes or out-of-date repo\\\\r\\\\n        async Task<bool> UncommittedChanges()\\\\r\\\\n        \"},{\"Position\":68064,\"NumberToRemove\":74,\"ContentToAdd\":\"{\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            return (await GetDiffs(GetUpdatedFiles(head), JsonConvert.SerializeObject(await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex)))).Length != 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Describes whether or not a branch can be pushed without causing merge conflicts.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        async Task<bool> CanPush(string branch)\\\\r\\\\n        \"},{\"Position\":68542,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool canPush = false;\\\\r\\\\n            int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":68761,\"NumberToRemove\":120,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":68791,\"NumberToRemove\":214,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":68865,\"NumberToRemove\":219,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":68890,\"NumberToRemove\":30,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) == branch2)\\\\r\\\\n            \"},{\"Position\":69010,\"NumberToRemove\":74,\"ContentToAdd\":\"{\\\\r\\\\n                canPush = true;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return canPush;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        async Task<bool> CanPull(string branch)\\\\r\\\\n        \"},{\"Position\":69224,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool canPull = false;\\\\r\\\\n            int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":69443,\"NumberToRemove\":120,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":69473,\"NumberToRemove\":215,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":69547,\"NumberToRemove\":210,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":69572,\"NumberToRemove\":205,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) == branch1)\\\\r\\\\n            \"},{\"Position\":69692,\"NumberToRemove\":141,\"ContentToAdd\":\"{\\\\r\\\\n                canPull = true;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return canPull;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        int CommonAncestor(int commit1, int commit2)\\\\r\\\\n        \"},{\"Position\":69907,\"NumberToRemove\":72,\"ContentToAdd\":\"{\\\\r\\\\n            return CommonAncestor(commit1, commit2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        int CommonAncestor(int commit1, int commit2, string path1, string path2)\\\\r\\\\n        \"},{\"Position\":70117,\"NumberToRemove\":139,\"ContentToAdd\":\"{\\\\r\\\\n            int commit2Start = commit2;\\\\r\\\\n            Commit cmit = GetCommit(commit1, path1);\\\\r\\\\n            Commit cmit2Strt = GetCommit(commit2, path2);\\\\r\\\\n            while (true)\\\\r\\\\n            \"},{\"Position\":70322,\"NumberToRemove\":252,\"ContentToAdd\":\"{\\\\r\\\\n                Commit cmit2 = cmit2Strt;\\\\r\\\\n                commit2 = commit2Start;\\\\r\\\\n                while (true)\\\\r\\\\n                \"},{\"Position\":70463,\"NumberToRemove\":274,\"ContentToAdd\":\"{\\\\r\\\\n                    if (commit2 == commit1)\\\\r\\\\n                    \"},{\"Position\":70535,\"NumberToRemove\":83,\"ContentToAdd\":\"{\\\\r\\\\n                        return commit2;\\\\r\\\\n                    }\\\\r\\\\n                    if (cmit2.Parent == 0)\\\\r\\\\n                    \"},{\"Position\":70674,\"NumberToRemove\":20,\"ContentToAdd\":\"{\\\\r\\\\n                        break;\\\\r\\\\n                    }\\\\r\\\\n                    commit2 = cmit2.Parent;\\\\r\\\\n                    cmit2 = GetCommit(cmit2.Parent, path2);\\\\r\\\\n                }\\\\r\\\\n                if (cmit.Parent == 0)\\\\r\\\\n                \"},{\"Position\":70926,\"NumberToRemove\":12,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                commit1 = cmit.Parent;\\\\r\\\\n                cmit = GetCommit(cmit.Parent, path1);\\\\r\\\\n            }\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        Commit GetCommit(int id, string pvcPath)\\\\r\\\\n        \"},{\"Position\":71200,\"NumberToRemove\":364,\"ContentToAdd\":\"{\\\\r\\\\n            return JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":71283,\"NumberToRemove\":212,\"ContentToAdd\":\"{pvcPath}\\\\\\\\commits\\\\\\\\\"},{\"Position\":71303,\"NumberToRemove\":63,\"ContentToAdd\":\"{id % 100}\\\\\\\\\"},{\"Position\":71315,\"NumberToRemove\":133,\"ContentToAdd\":\"{id / 100}\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Pushes committed changes.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <param name=\\\\\\\"branchToPush\\\\\\\">The branch to push. If empty, pushes all branches.</param>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<Dictionary<string, PushResult>> Push(string branchToPush = \\\\\\\"\\\\\\\")\\\\r\\\\n        \"},{\"Position\":71679,\"NumberToRemove\":242,\"ContentToAdd\":\"{\\\\r\\\\n            var results = new Dictionary<string, PushResult>();\\\\r\\\\n            HttpStatusCode responseCode = HttpStatusCode.InternalServerError;\\\\r\\\\n            if (await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":71891,\"NumberToRemove\":74,\"ContentToAdd\":\"{\\\\r\\\\n                return new Dictionary<string, PushResult> \"},{\"Position\":71954,\"NumberToRemove\":52,\"ContentToAdd\":\"{ [await GetCurrentBranch()] = PushResult.Uncommited_Changes };\\\\r\\\\n            }\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":72087,\"NumberToRemove\":105,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool allValid = true;\\\\r\\\\n            if (branchToPush == \\\\\\\"\\\\\\\")\\\\r\\\\n            \"},{\"Position\":72329,\"NumberToRemove\":134,\"ContentToAdd\":\"{\\\\r\\\\n                foreach (string path in Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":72403,\"NumberToRemove\":152,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":72455,\"NumberToRemove\":66,\"ContentToAdd\":\"{\\\\r\\\\n                    if (!await checkValid(path.Remove(0, Path.Length + 19)))\\\\r\\\\n                    \"},{\"Position\":72560,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                        break;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":72694,\"NumberToRemove\":58,\"ContentToAdd\":\"{\\\\r\\\\n                await checkValid(branchToPush);\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            async Task<bool> checkValid(string branchCheck)\\\\r\\\\n            \"},{\"Position\":72846,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":72912,\"NumberToRemove\":37,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":72942,\"NumberToRemove\":70,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                if (File.Exists($@\\\\\\\"\"},{\"Position\":73025,\"NumberToRemove\":141,\"ContentToAdd\":\"{branchCheck}\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":73062,\"NumberToRemove\":318,\"ContentToAdd\":\"{\\\\r\\\\n                    int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":73132,\"NumberToRemove\":66,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":73157,\"NumberToRemove\":78,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) != branch2)\\\\r\\\\n                    \"},{\"Position\":73298,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n                        allValid = false;\\\\r\\\\n                        results.Add(branchCheck.Remove(0, 1), PushResult.Conflict);\\\\r\\\\n                        return false;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                return true;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            if (allValid)\\\\r\\\\n            \"},{\"Position\":73616,\"NumberToRemove\":170,\"ContentToAdd\":\"{\\\\r\\\\n                if (branchToPush == \\\\\\\"\\\\\\\")\\\\r\\\\n                \"},{\"Position\":73682,\"NumberToRemove\":158,\"ContentToAdd\":\"{\\\\r\\\\n                    foreach (string path in Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":73760,\"NumberToRemove\":70,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n                    \"},{\"Position\":73816,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                        await PushBranch(path.Remove(0, Path.Length + 19));\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                else\\\\r\\\\n                \"},{\"Position\":73986,\"NumberToRemove\":105,\"ContentToAdd\":\"{\\\\r\\\\n                    await PushBranch(branchToPush);\\\\r\\\\n                }\\\\r\\\\n                async Task PushBranch(string branchCheck)\\\\r\\\\n                \"},{\"Position\":74144,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                    int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":74214,\"NumberToRemove\":41,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":74244,\"NumberToRemove\":74,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    int commonAncestor;\\\\r\\\\n                    if (File.Exists($@\\\\\\\"\"},{\"Position\":74374,\"NumberToRemove\":200,\"ContentToAdd\":\"{branchCheck}\\\\\\\"))\\\\r\\\\n                    \"},{\"Position\":74415,\"NumberToRemove\":141,\"ContentToAdd\":\"{\\\\r\\\\n                        int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":74489,\"NumberToRemove\":30,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":74514,\"NumberToRemove\":186,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                        commonAncestor = CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2);\\\\r\\\\n                    }\\\\r\\\\n                    else\\\\r\\\\n                    \"},{\"Position\":74714,\"NumberToRemove\":116,\"ContentToAdd\":\"{\\\\r\\\\n                        commonAncestor = 0;\\\\r\\\\n                    }\\\\r\\\\n                    int commit = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":74855,\"NumberToRemove\":23,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":74885,\"NumberToRemove\":16,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    Dictionary<int, Commit> commits = new Dictionary<int, Commit>();\\\\r\\\\n                    while (commit != commonAncestor)\\\\r\\\\n                    \"},{\"Position\":75071,\"NumberToRemove\":275,\"ContentToAdd\":\"{\\\\r\\\\n                        Commit commitInCommitForm = JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":75187,\"NumberToRemove\":9,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":75210,\"NumberToRemove\":408,\"ContentToAdd\":\"{commit % 100}\\\\\\\\\"},{\"Position\":75226,\"NumberToRemove\":60,\"ContentToAdd\":\"{commit / 100}\\\\\\\"));\\\\r\\\\n                        commits.Add(commit, commitInCommitForm);\\\\r\\\\n                        commit = commitInCommitForm.Parent;\\\\r\\\\n                    }\\\\r\\\\n                    commits.Reverse();\\\\r\\\\n                    var response = client.PutAsync($\\\\\\\"\"},{\"Position\":75501,\"NumberToRemove\":842,\"ContentToAdd\":\"{Origin}/\"},{\"Position\":75510,\"NumberToRemove\":85,\"ContentToAdd\":\"{branchCheck}\\\\\\\", new StringContent(JsonConvert.SerializeObject((User, commits)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n                    results.Add(branchCheck.Remove(0, 1), await FromResponseCode(response.Result.StatusCode));\\\\r\\\\n                    await response;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            async Task<PushResult> FromResponseCode(HttpStatusCode statusCode)\\\\r\\\\n            \"},{\"Position\":75918,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n                switch (statusCode)\\\\r\\\\n                \"},{\"Position\":75978,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n                    case HttpStatusCode.OK:\\\\r\\\\n                        return PushResult.Success;\\\\r\\\\n                    case HttpStatusCode.Unauthorized:\\\\r\\\\n                        return PushResult.Authentication_Error;\\\\r\\\\n                    case HttpStatusCode.BadRequest:\\\\r\\\\n                        return PushResult.Bad_Request;\\\\r\\\\n                    case HttpStatusCode.Accepted:\\\\r\\\\n                        return PushResult.Up_to_Date;\\\\r\\\\n                    default:\\\\r\\\\n                        return PushResult.No_Response_From_Server;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return results;\\\\r\\\\n            //await client.PostAsync(Origin, new StringContent(JsonConvert.SerializeObject(commit), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":76820,\"NumberToRemove\":82,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\RegisterResult.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":76905,\"NumberToRemove\":77,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":76961,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n        public enum RegisterResult\\\\r\\\\n        \"},{\"Position\":77012,\"NumberToRemove\":43,\"ContentToAdd\":\"{\\\\r\\\\n            Success,\\\\r\\\\n            Failure\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":77094,\"NumberToRemove\":171,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Status.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":77171,\"NumberToRemove\":64,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":77227,\"NumberToRemove\":219,\"ContentToAdd\":\"{\\\\r\\\\n        public enum Status\\\\r\\\\n        \"},{\"Position\":77270,\"NumberToRemove\":94,\"ContentToAdd\":\"{\\\\r\\\\n            Uncommitted_Changes,\\\\r\\\\n            Ahead_of_Origin,\\\\r\\\\n            Behind_Origin,\\\\r\\\\n            Up_to_Date\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":77441,\"NumberToRemove\":68,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\.pvcignore\\\",\\\"Contents\\\":\\\"R: bin|vs|obj|(packages$)\\\\r\\\\n\\\"},\"},{\"Position\":77508,\"NumberToRemove\":108,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient.sln\\\",\\\"Contents\\\":\\\"Microsoft Visual Studio Solution File, Format Version 12.00\\\\r\\\\n# Visual Studio 15\\\\r\\\\nVisualStudioVersion = 15.0.27004.2005\\\\r\\\\nMinimumVisualStudioVersion = 10.0.40219.1\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":77727,\"NumberToRemove\":68,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCClient\\\\\\\", \\\\\\\"PVCClient\\\\\\\\PVCClient.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":77821,\"NumberToRemove\":109,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":77889,\"NumberToRemove\":302,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCPipeLibrary\\\\\\\", \\\\\\\"PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":77997,\"NumberToRemove\":86,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":78065,\"NumberToRemove\":84,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCCommandLine\\\\\\\", \\\\\\\"PVCCommandLine\\\\\\\\PVCCommandLine.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":78174,\"NumberToRemove\":90,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nGlobal\\\\r\\\\n\\\\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\\\\r\\\\n\\\\t\\\\tDebug|Any CPU = Debug|Any CPU\\\\r\\\\n\\\\t\\\\tRelease|Any CPU = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":78476,\"NumberToRemove\":88,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":78562,\"NumberToRemove\":86,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":78646,\"NumberToRemove\":84,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":78736,\"NumberToRemove\":90,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":78824,\"NumberToRemove\":88,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":78910,\"NumberToRemove\":86,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":78994,\"NumberToRemove\":84,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":79084,\"NumberToRemove\":90,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":79172,\"NumberToRemove\":288,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":79258,\"NumberToRemove\":80,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":79342,\"NumberToRemove\":38,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":79432,\"NumberToRemove\":0,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(SolutionProperties) = preSolution\\\\r\\\\n\\\\t\\\\tHideSolutionNode = FALSE\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ExtensibilityGlobals) = postSolution\\\\r\\\\n\\\\t\\\\tSolutionGuid = \"},{\"Position\":79720,\"NumberToRemove\":0,\"ContentToAdd\":\"{78911CB1-A8D8-4CCA-BCF1-C4390A8F96AE}\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\nEndGlobal\\\\r\\\\n\\\"},\"},{\"Position\":79800,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\TODO.txt\\\",\\\"Contents\\\":\\\"Accidentally committed packages folder. Next, undo that and test revert functionality.\\\"}]}\"}]","Parent":1777590267,"Message":"Updated pvcignore and fixed my stupid bug.","Author":"penguinee232","Committer":"penguinee232","DateAndTime":"2018-12-08T15:32:32.5809095-08:00"}