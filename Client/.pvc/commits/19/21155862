{"Diffs":"[{\"Position\":0,\"NumberToRemove\":35,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\",\\\"Folders\\\":[\"},{\"Position\":22,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient\\\",\\\"Folders\\\":[\"},{\"Position\":55,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient\\\\\\\\Properties\\\",\\\"Folders\\\":[],\\\"Files\\\":[\"},{\"Position\":111,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient\\\\\\\\Properties\\\\\\\\AssemblyInfo.cs\\\",\\\"Contents\\\":\\\"using System.Reflection;\\\\r\\\\nusing System.Runtime.CompilerServices;\\\\r\\\\nusing System.Runtime.InteropServices;\\\\r\\\\n\\\\r\\\\n// General Information about an assembly is controlled through the following\\\\r\\\\n// set of attributes. Change these attribute values to modify the information\\\\r\\\\n// associated with an assembly.\\\\r\\\\n[assembly: AssemblyTitle(\\\\\\\"PVCClient\\\\\\\")]\\\\r\\\\n[assembly: AssemblyDescription(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyConfiguration(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCompany(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyProduct(\\\\\\\"PVCClient\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCopyright(\\\\\\\"Copyright Â©  2018\\\\\\\")]\\\\r\\\\n[assembly: AssemblyTrademark(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCulture(\\\\\\\"\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Setting ComVisible to false makes the types in this assembly not visible\\\\r\\\\n// to COM components.  If you need to access a type in this assembly from\\\\r\\\\n// COM, set the ComVisible attribute to true on that type.\\\\r\\\\n[assembly: ComVisible(false)]\\\\r\\\\n\\\\r\\\\n// The following GUID is for the ID of the typelib if this project is exposed to COM\\\\r\\\\n[assembly: Guid(\\\\\\\"ebcb5049-341b-4988-a676-3e01610c0b05\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Version information for an assembly consists of the following four values:\\\\r\\\\n//\\\\r\\\\n//      Major Version\\\\r\\\\n//      Minor Version\\\\r\\\\n//      Build Number\\\\r\\\\n//      Revision\\\\r\\\\n//\\\\r\\\\n// You can specify all the values or you can default the Build and Revision Numbers\\\\r\\\\n// by using the '*' as shown below:\\\\r\\\\n// [assembly: AssemblyVersion(\\\\\\\"1.0.*\\\\\\\")]\\\\r\\\\n[assembly: AssemblyVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n[assembly: AssemblyFileVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":1706,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient\\\\\\\\App.config\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<configuration>\\\\r\\\\n    <startup> \\\\r\\\\n        <supportedRuntime version=\\\\\\\"v4.0\\\\\\\" sku=\\\\\\\".NETFramework,Version=v4.7.1\\\\\\\"/>\\\\r\\\\n    </startup>\\\\r\\\\n</configuration>\\\\r\\\\n\\\"},\"},{\"Position\":1961,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient\\\\\\\\Program.cs\\\",\\\"Contents\\\":\\\"using PVCPipeClient;\\\\r\\\\nusing System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.IO;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\n\\\\r\\\\nnamespace PVCClient\\\\r\\\\n\"},{\"Position\":2209,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    class Program\\\\r\\\\n    \"},{\"Position\":2239,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n        static async Task Main(string[] args)\\\\r\\\\n        \"},{\"Position\":2301,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            while (true)\\\\r\\\\n            \"},{\"Position\":2346,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                bool home = false;\\\\r\\\\n                Console.WriteLine(\\\\\\\"PVC is a work-in-progress rudimentary VCS. Please enter the number of the repository or enter the full file path.\\\\\\\");\\\\r\\\\n                string rootPath = $@\\\\\\\"C:\\\\\\\\Users\\\\\\\\\"},{\"Position\":2595,\"NumberToRemove\":0,\"ContentToAdd\":\"{Environment.UserName}\\\\\\\\Documents\\\\\\\\PVCPipe\\\\\\\\\\\\\\\";\\\\r\\\\n                string[] repos = Directory.GetDirectories(rootPath);\\\\r\\\\n                for (int i = 0; i < repos.Length; i++)\\\\r\\\\n                \"},{\"Position\":2792,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    Console.WriteLine($\\\\\\\"\"},{\"Position\":2838,\"NumberToRemove\":0,\"ContentToAdd\":\"{i} - \"},{\"Position\":2844,\"NumberToRemove\":0,\"ContentToAdd\":\"{repos[i].Remove(0, rootPath.Length)}\\\\\\\");\\\\r\\\\n                }\\\\r\\\\n                string path = Console.ReadLine();\\\\r\\\\n                int selection;\\\\r\\\\n                if (int.TryParse(path, out selection))\\\\r\\\\n                \"},{\"Position\":3071,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    path = repos[selection];\\\\r\\\\n                }\\\\r\\\\n                PVCServerInterface interf = new PVCServerInterface(path);\\\\r\\\\n                string[] parameters = new string[1];\\\\r\\\\n                string input = \\\\\\\"\\\\\\\";\\\\r\\\\n                Dictionary<string, string> help = new Dictionary<string, string>\\\\r\\\\n                \"},{\"Position\":3418,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    [\\\\\\\"clone\\\\\\\"] = \\\\\\\"clone ORIGIN\\\\\\\",\\\\r\\\\n                    [\\\\\\\"pull\\\\\\\"] = \\\\\\\"pull\\\\\\\",\\\\r\\\\n                    [\\\\\\\"checkout\\\\\\\"] = \\\\\\\"checkout BRANCH\\\\\\\",\\\\r\\\\n                    [\\\\\\\"commit\\\\\\\"] = \\\\\\\"commit AUTHOR COMMITTER M E S S A G E\\\\\\\",\\\\r\\\\n                    [\\\\\\\"push\\\\\\\"] = \\\\\\\"push <BRANCH>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"branch\\\\\\\"] = \\\\\\\"branch <BRANCHNAME> <COMMITID>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"help\\\\\\\"] = \\\\\\\"help <COMMAND>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"status\\\\\\\"] = \\\\\\\"status <BRANCH>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"log\\\\\\\"] = \\\\\\\"log <NUMBER>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"ignore\\\\\\\"] = \\\\\\\"ignore <SUBPATH1 SUBPATH2 ...>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"unignore\\\\\\\"] = \\\\\\\"unignore SUBPATH1 SUBPATH2 ...\\\\\\\",\\\\r\\\\n                    [\\\\\\\"ignoreR\\\\\\\"] = \\\\\\\"ignoreR <R E G E X>\\\\\\\",\\\\r\\\\n                    [\\\\\\\"redraw\\\\\\\"] = \\\\\\\"redraw\\\\\\\",\\\\r\\\\n                    [\\\\\\\"home\\\\\\\"] = \\\\\\\"home\\\\\\\"\\\\r\\\\n                };\\\\r\\\\n                var cmds2 = new Dictionary<string, Func<Task>>();\\\\r\\\\n                var cmds = new Dictionary<string, Func<Task>>\\\\r\\\\n                \"},{\"Position\":4444,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    [\\\\\\\"clone\\\\\\\"] = async () => \"},{\"Position\":4495,\"NumberToRemove\":0,\"ContentToAdd\":\"{ await interf.Clone(parameters[1]);/* await ReDraw(path, cmds2);*/ },\\\\r\\\\n                    [\\\\\\\"pull\\\\\\\"] = async () => Console.WriteLine((await interf.Pull()).ToString().Replace('_', ' ')),\\\\r\\\\n                    [\\\\\\\"checkout\\\\\\\"] = async () => await interf.Checkout(parameters[1]),\\\\r\\\\n                    [\\\\\\\"commit\\\\\\\"] = async () => await interf.Commit(input.Remove(0, parameters[0].Length + parameters[1].Length + parameters[2].Length + 3), parameters[1], parameters[2]),\\\\r\\\\n                    [\\\\\\\"push\\\\\\\"] = async () => await interf.Push(input.Remove(0, 4).Replace(\\\\\\\" \\\\\\\", \\\\\\\"\\\\\\\")),\\\\r\\\\n                    [\\\\\\\"branch\\\\\\\"] = async () => \"},{\"Position\":5123,\"NumberToRemove\":0,\"ContentToAdd\":\"{ if (parameters.Length > 1) \"},{\"Position\":5152,\"NumberToRemove\":0,\"ContentToAdd\":\"{ if (parameters.Length > 2) \"},{\"Position\":5181,\"NumberToRemove\":0,\"ContentToAdd\":\"{ await interf.CreateBranch(parameters[1], int.Parse(parameters[2])); } else \"},{\"Position\":5258,\"NumberToRemove\":0,\"ContentToAdd\":\"{ await interf.CreateBranch(parameters[1]); } } else \"},{\"Position\":5311,\"NumberToRemove\":0,\"ContentToAdd\":\"{ Console.WriteLine($\\\\\\\"Current branch:\\\\\\\\n - \"},{\"Position\":5355,\"NumberToRemove\":0,\"ContentToAdd\":\"{await interf.GetCurrentBranch()}\\\\\\\\nAll branches:\\\\\\\"); foreach (string s in await interf.GetAllBranches()) \"},{\"Position\":5461,\"NumberToRemove\":0,\"ContentToAdd\":\"{ Console.WriteLine(\\\\\\\" - \\\\\\\" + s); } } },\\\\r\\\\n                    [\\\\\\\"help\\\\\\\"] = async () => await Task.Run(() => \"},{\"Position\":5571,\"NumberToRemove\":0,\"ContentToAdd\":\"{ if (parameters.Length > 1 && help.ContainsKey(parameters[1])) \"},{\"Position\":5635,\"NumberToRemove\":0,\"ContentToAdd\":\"{ Console.WriteLine(help[parameters[1]]); } else \"},{\"Position\":5684,\"NumberToRemove\":0,\"ContentToAdd\":\"{ foreach (string s in help.Keys.ToArray()) \"},{\"Position\":5728,\"NumberToRemove\":0,\"ContentToAdd\":\"{ Console.WriteLine($\\\\\\\"\"},{\"Position\":5751,\"NumberToRemove\":0,\"ContentToAdd\":\"{s}\"},{\"Position\":5754,\"NumberToRemove\":0,\"ContentToAdd\":\"{repeatChar(' ', 20 - s.Length)}\"},{\"Position\":5786,\"NumberToRemove\":0,\"ContentToAdd\":\"{help[s]}\\\\\\\"); } } }),\\\\r\\\\n                    [\\\\\\\"status\\\\\\\"] = async () => Console.WriteLine((await interf.GetStatus(parameters.Length > 1 ? parameters[1] : File.ReadAllText($@\\\\\\\"\"},{\"Position\":5961,\"NumberToRemove\":0,\"ContentToAdd\":\"{path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\"))).ToString().Replace('_', ' ')),\\\\r\\\\n                    [\\\\\\\"log\\\\\\\"] = async () => \"},{\"Position\":6069,\"NumberToRemove\":0,\"ContentToAdd\":\"{ string[] output = (parameters.Length > 1 ? await interf.Log(int.Parse(parameters[1])) : await interf.Log()); for (int i = 0; i < output.Length; i++) \"},{\"Position\":6220,\"NumberToRemove\":0,\"ContentToAdd\":\"{ if (output[i] != null) \"},{\"Position\":6245,\"NumberToRemove\":0,\"ContentToAdd\":\"{ Console.WriteLine(output[i]); } } },\\\\r\\\\n                    [\\\\\\\"ignore\\\\\\\"] = async () => \"},{\"Position\":6334,\"NumberToRemove\":0,\"ContentToAdd\":\"{ if (parameters.Length > 1) \"},{\"Position\":6363,\"NumberToRemove\":0,\"ContentToAdd\":\"{ await interf.IgnorePaths(input.Remove(0, 6).Split(new char[] \"},{\"Position\":6426,\"NumberToRemove\":0,\"ContentToAdd\":\"{ ' ' }, StringSplitOptions.RemoveEmptyEntries)); } else \"},{\"Position\":6483,\"NumberToRemove\":0,\"ContentToAdd\":\"{ Console.WriteLine(\\\\\\\"Ignored subpaths:\\\\\\\"); foreach (string s in interf.IgnoredPaths) \"},{\"Position\":6569,\"NumberToRemove\":0,\"ContentToAdd\":\"{ Console.WriteLine(s); } } },\\\\r\\\\n                    [\\\\\\\"unignore\\\\\\\"] = async () => await interf.UnignorePaths(input.Remove(0, 6).Split(new char[] \"},{\"Position\":6715,\"NumberToRemove\":0,\"ContentToAdd\":\"{ ' ' }, StringSplitOptions.RemoveEmptyEntries)),\\\\r\\\\n                    [\\\\\\\"ignoreR\\\\\\\"] = async () => await interf.SetIgnoredRegex(input.Remove(0, 8)),\\\\r\\\\n                    [\\\\\\\"redraw\\\\\\\"] = async () => \"},{\"Position\":6916,\"NumberToRemove\":0,\"ContentToAdd\":\"{ Console.ForegroundColor = ConsoleColor.Gray; await ReDraw(path, cmds2); },\\\\r\\\\n                    [\\\\\\\"home\\\\\\\"] = async () => \"},{\"Position\":7041,\"NumberToRemove\":0,\"ContentToAdd\":\"{ home = true; }\\\\r\\\\n                };\\\\r\\\\n                string repeatChar(char chr, int num)\\\\r\\\\n                \"},{\"Position\":7155,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    StringBuilder s = new StringBuilder();\\\\r\\\\n                    for (int i = 0; i < num; i++)\\\\r\\\\n                    \"},{\"Position\":7295,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        s.Append(chr);\\\\r\\\\n                    }\\\\r\\\\n                    return s.ToString();\\\\r\\\\n                }\\\\r\\\\n                cmds2 = cmds;\\\\r\\\\n                Console.Clear();\\\\r\\\\n                Console.WriteLine($\\\\\\\"File path: \"},{\"Position\":7549,\"NumberToRemove\":0,\"ContentToAdd\":\"{path}\\\\\\\\nOrigin: \"},{\"Position\":7566,\"NumberToRemove\":0,\"ContentToAdd\":\"{(File.Exists($@\\\\\\\"\"},{\"Position\":7584,\"NumberToRemove\":0,\"ContentToAdd\":\"{path}\\\\\\\\.pvc\\\\\\\\origin\\\\\\\") ? File.ReadAllText($@\\\\\\\"\"},{\"Position\":7631,\"NumberToRemove\":0,\"ContentToAdd\":\"{path}\\\\\\\\.pvc\\\\\\\\origin\\\\\\\") : \\\\\\\"none\\\\\\\")}\\\\\\\");\\\\r\\\\n                Console.WriteLine(\\\\\\\"Commands:\\\\\\\");\\\\r\\\\n                foreach (string cmd in cmds.Keys.ToArray())\\\\r\\\\n                \"},{\"Position\":7807,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    Console.WriteLine(\\\\\\\"\\\\\\\\t\\\\\\\" + cmd);\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n                while (true)\\\\r\\\\n                \"},{\"Position\":7946,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    input = Console.ReadLine();\\\\r\\\\n                    parameters = input.Split(' ');\\\\r\\\\n                    try\\\\r\\\\n                    \"},{\"Position\":8103,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        Console.ForegroundColor = ConsoleColor.Yellow;\\\\r\\\\n                        Exception thro = null;\\\\r\\\\n                        await Task.Run(async () =>\\\\r\\\\n                        \"},{\"Position\":8310,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                            try\\\\r\\\\n                            \"},{\"Position\":8378,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                                await cmds[parameters[0]]();\\\\r\\\\n                            }\\\\r\\\\n                            catch (Exception e)\\\\r\\\\n                            \"},{\"Position\":8559,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                                thro = e;\\\\r\\\\n                            }\\\\r\\\\n                        });\\\\r\\\\n                        if (thro != null)\\\\r\\\\n                        \"},{\"Position\":8742,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                            Fail(thro);\\\\r\\\\n                        }\\\\r\\\\n                        if(home)\\\\r\\\\n                        \"},{\"Position\":8879,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                            break;\\\\r\\\\n                        }\\\\r\\\\n                        //await Task.Run(() => cmds[parameters[0]]);\\\\r\\\\n                        Console.ForegroundColor = ConsoleColor.DarkYellow;\\\\r\\\\n                        Console.WriteLine(\\\\\\\"Finished\\\\\\\");\\\\r\\\\n                        Console.ForegroundColor = ConsoleColor.Gray;\\\\r\\\\n                    }\\\\r\\\\n                    catch (Exception e)\\\\r\\\\n                    \"},{\"Position\":9321,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        Fail(e);\\\\r\\\\n                    }\\\\r\\\\n                    void Fail(Exception e)\\\\r\\\\n                    \"},{\"Position\":9453,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        Console.ForegroundColor = ConsoleColor.Red;\\\\r\\\\n                        Console.WriteLine($\\\\\\\"Error: \"},{\"Position\":9581,\"NumberToRemove\":0,\"ContentToAdd\":\"{e.Message}\\\\\\\\nLocation: \"},{\"Position\":9605,\"NumberToRemove\":0,\"ContentToAdd\":\"{e.StackTrace/*}\\\\\\\");*/.Remove(e.StackTrace.IndexOf(\\\\\\\"--- End of\\\\\\\"))}\\\\\\\");\\\\r\\\\n                        Console.ForegroundColor = ConsoleColor.Yellow;\\\\r\\\\n                        if (help.ContainsKey(parameters[0]))\\\\r\\\\n                        \"},{\"Position\":9843,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                            Console.WriteLine($\\\\\\\"Proper command usage: \"},{\"Position\":9919,\"NumberToRemove\":0,\"ContentToAdd\":\"{help[parameters[0]]}\\\\\\\");\\\\r\\\\n                        }\\\\r\\\\n                        else\\\\r\\\\n                        \"},{\"Position\":10033,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                            Console.WriteLine(\\\\\\\"Unsupported command\\\\\\\");\\\\r\\\\n                        }\\\\r\\\\n                        Console.ForegroundColor = ConsoleColor.Gray;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                Console.ForegroundColor = ConsoleColor.Gray;\\\\r\\\\n                Console.Clear();\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        }\\\\r\\\\n        public static async Task ReDraw(string path, Dictionary<string, Func<Task>> cmds)\\\\r\\\\n        \"},{\"Position\":10503,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            Console.Clear();\\\\r\\\\n            Console.WriteLine($\\\\\\\"File path: \"},{\"Position\":10584,\"NumberToRemove\":0,\"ContentToAdd\":\"{path}\\\\\\\\nOrigin: \"},{\"Position\":10601,\"NumberToRemove\":0,\"ContentToAdd\":\"{(File.Exists($@\\\\\\\"\"},{\"Position\":10619,\"NumberToRemove\":0,\"ContentToAdd\":\"{path}\\\\\\\\.pvc\\\\\\\\origin\\\\\\\") ? File.ReadAllText($@\\\\\\\"\"},{\"Position\":10666,\"NumberToRemove\":0,\"ContentToAdd\":\"{path}\\\\\\\\.pvc\\\\\\\\origin\\\\\\\") : \\\\\\\"none\\\\\\\")}\\\\\\\");\\\\r\\\\n            Console.WriteLine(\\\\\\\"Commands:\\\\\\\");\\\\r\\\\n            foreach (string cmd in cmds.Keys.ToArray())\\\\r\\\\n            \"},{\"Position\":10830,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                Console.WriteLine(\\\\\\\"\\\\\\\\t\\\\\\\" + cmd);\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":10935,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient\\\\\\\\PVCClient.csproj\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<Project ToolsVersion=\\\\\\\"15.0\\\\\\\" xmlns=\\\\\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\\\\\">\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props\\\\\\\" Condition=\\\\\\\"Exists('$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props')\\\\\\\" />\\\\r\\\\n  <PropertyGroup>\\\\r\\\\n    <Configuration Condition=\\\\\\\" '$(Configuration)' == '' \\\\\\\">Debug</Configuration>\\\\r\\\\n    <Platform Condition=\\\\\\\" '$(Platform)' == '' \\\\\\\">AnyCPU</Platform>\\\\r\\\\n    <ProjectGuid>\"},{\"Position\":11522,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}</ProjectGuid>\\\\r\\\\n    <OutputType>Exe</OutputType>\\\\r\\\\n    <RootNamespace>PVCClient</RootNamespace>\\\\r\\\\n    <AssemblyName>PVCClient</AssemblyName>\\\\r\\\\n    <TargetFrameworkVersion>v4.7.1</TargetFrameworkVersion>\\\\r\\\\n    <FileAlignment>512</FileAlignment>\\\\r\\\\n    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>\\\\r\\\\n    <TargetFrameworkProfile />\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \\\\\\\">\\\\r\\\\n    <PlatformTarget>AnyCPU</PlatformTarget>\\\\r\\\\n    <DebugSymbols>true</DebugSymbols>\\\\r\\\\n    <DebugType>full</DebugType>\\\\r\\\\n    <Optimize>false</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Debug\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n    <LangVersion>latest</LangVersion>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \\\\\\\">\\\\r\\\\n    <PlatformTarget>AnyCPU</PlatformTarget>\\\\r\\\\n    <DebugType>pdbonly</DebugType>\\\\r\\\\n    <Optimize>true</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Release\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Reference Include=\\\\\\\"Newtonsoft.Json, Version=11.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\Newtonsoft.Json.11.0.2\\\\\\\\lib\\\\\\\\net45\\\\\\\\Newtonsoft.Json.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Core\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml.Linq\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data.DataSetExtensions\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"Microsoft.CSharp\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Net.Http\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Compile Include=\\\\\\\"Program.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Properties\\\\\\\\AssemblyInfo.cs\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <None Include=\\\\\\\"App.config\\\\\\\" />\\\\r\\\\n    <None Include=\\\\\\\"packages.config\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <ProjectReference Include=\\\\\\\"..\\\\\\\\PVCPipeClient\\\\\\\\PVCPipeClient.csproj\\\\\\\">\\\\r\\\\n      <Project>\"},{\"Position\":13875,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671d7ca-1c5e-469d-9266-8e3617330b7b}</Project>\\\\r\\\\n      <Name>PVCPipeClient</Name>\\\\r\\\\n    </ProjectReference>\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildToolsPath)\\\\\\\\Microsoft.CSharp.targets\\\\\\\" />\\\\r\\\\n</Project>\\\"}]},\"},{\"Position\":14097,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\",\\\"Folders\\\":[\"},{\"Position\":14134,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Properties\\\",\\\"Folders\\\":[],\\\"Files\\\":[\"},{\"Position\":14194,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Properties\\\\\\\\AssemblyInfo.cs\\\",\\\"Contents\\\":\\\"using System.Reflection;\\\\r\\\\nusing System.Runtime.CompilerServices;\\\\r\\\\nusing System.Runtime.InteropServices;\\\\r\\\\n\\\\r\\\\n// General Information about an assembly is controlled through the following\\\\r\\\\n// set of attributes. Change these attribute values to modify the information\\\\r\\\\n// associated with an assembly.\\\\r\\\\n[assembly: AssemblyTitle(\\\\\\\"PVCPipeClient\\\\\\\")]\\\\r\\\\n[assembly: AssemblyDescription(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyConfiguration(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCompany(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyProduct(\\\\\\\"PVCPipeClient\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCopyright(\\\\\\\"Copyright Â©  2018\\\\\\\")]\\\\r\\\\n[assembly: AssemblyTrademark(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCulture(\\\\\\\"\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Setting ComVisible to false makes the types in this assembly not visible\\\\r\\\\n// to COM components.  If you need to access a type in this assembly from\\\\r\\\\n// COM, set the ComVisible attribute to true on that type.\\\\r\\\\n[assembly: ComVisible(false)]\\\\r\\\\n\\\\r\\\\n// The following GUID is for the ID of the typelib if this project is exposed to COM\\\\r\\\\n[assembly: Guid(\\\\\\\"3671d7ca-1c5e-469d-9266-8e3617330b7b\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Version information for an assembly consists of the following four values:\\\\r\\\\n//\\\\r\\\\n//      Major Version\\\\r\\\\n//      Minor Version\\\\r\\\\n//      Build Number\\\\r\\\\n//      Revision\\\\r\\\\n//\\\\r\\\\n// You can specify all the values or you can default the Build and Revision Numbers\\\\r\\\\n// by using the '*' as shown below:\\\\r\\\\n// [assembly: AssemblyVersion(\\\\\\\"1.0.*\\\\\\\")]\\\\r\\\\n[assembly: AssemblyVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n[assembly: AssemblyFileVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":15801,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Commit.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\n\\\\r\\\\nnamespace PVCPipeClient\\\\r\\\\n\"},{\"Position\":16012,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    class Commit\\\\r\\\\n    \"},{\"Position\":16041,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n        public string Diffs \"},{\"Position\":16074,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public int Parent \"},{\"Position\":16121,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Message \"},{\"Position\":16172,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Author \"},{\"Position\":16222,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Committer \"},{\"Position\":16275,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public Commit(string diffs, string message, string author, string committer, int parent)\\\\r\\\\n        \"},{\"Position\":16404,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            Diffs = diffs;\\\\r\\\\n            Message = message;\\\\r\\\\n            Author = author;\\\\r\\\\n            Committer = committer;\\\\r\\\\n            Parent = parent;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":16605,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PVCPipeClient.csproj\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<Project ToolsVersion=\\\\\\\"15.0\\\\\\\" xmlns=\\\\\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\\\\\">\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props\\\\\\\" Condition=\\\\\\\"Exists('$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props')\\\\\\\" />\\\\r\\\\n  <PropertyGroup>\\\\r\\\\n    <Configuration Condition=\\\\\\\" '$(Configuration)' == '' \\\\\\\">Debug</Configuration>\\\\r\\\\n    <Platform Condition=\\\\\\\" '$(Platform)' == '' \\\\\\\">AnyCPU</Platform>\\\\r\\\\n    <ProjectGuid>\"},{\"Position\":17200,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}</ProjectGuid>\\\\r\\\\n    <OutputType>Library</OutputType>\\\\r\\\\n    <AppDesignerFolder>Properties</AppDesignerFolder>\\\\r\\\\n    <RootNamespace>PVCPipeClient</RootNamespace>\\\\r\\\\n    <AssemblyName>PVCPipeClient</AssemblyName>\\\\r\\\\n    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>\\\\r\\\\n    <FileAlignment>512</FileAlignment>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \\\\\\\">\\\\r\\\\n    <DebugSymbols>true</DebugSymbols>\\\\r\\\\n    <DebugType>full</DebugType>\\\\r\\\\n    <Optimize>false</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Debug\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \\\\\\\">\\\\r\\\\n    <DebugType>pdbonly</DebugType>\\\\r\\\\n    <Optimize>true</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Release\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Reference Include=\\\\\\\"Newtonsoft.Json, Version=11.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\Newtonsoft.Json.11.0.2\\\\\\\\lib\\\\\\\\net45\\\\\\\\Newtonsoft.Json.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Core\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml.Linq\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data.DataSetExtensions\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"Microsoft.CSharp\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Net.Http\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Compile Include=\\\\\\\"Commit.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Properties\\\\\\\\AssemblyInfo.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"PVCServerInterface.cs\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <None Include=\\\\\\\"packages.config\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildToolsPath)\\\\\\\\Microsoft.CSharp.targets\\\\\\\" />\\\\r\\\\n</Project>\\\"},\"},{\"Position\":19370,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PVCServerInterface.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.IO;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Net.Http;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Text.RegularExpressions;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing Newtonsoft.Json;\\\\r\\\\n\\\\r\\\\nnamespace PVCPipeClient\\\\r\\\\n\"},{\"Position\":19706,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    public class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":19754,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n\\\\r\\\\n        class Folder\\\\r\\\\n        \"},{\"Position\":19795,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            public string Path;\\\\r\\\\n            public Folder[] Folders;\\\\r\\\\n            public FileObj[] Files;\\\\r\\\\n        }\\\\r\\\\n        class FileObj\\\\r\\\\n        \"},{\"Position\":19960,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            public string Path;\\\\r\\\\n            public string Contents;\\\\r\\\\n\\\\r\\\\n            public FileObj(string path, string contents)\\\\r\\\\n            \"},{\"Position\":20115,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                Path = path;\\\\r\\\\n                Contents = contents;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        class Diff\\\\r\\\\n        \"},{\"Position\":20256,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            public int Position;\\\\r\\\\n            public int NumberToRemove;\\\\r\\\\n            public string ContentToAdd;\\\\r\\\\n            public Diff(int pos, int numToRem, string toAdd)\\\\r\\\\n            \"},{\"Position\":20458,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                Position = pos;\\\\r\\\\n                NumberToRemove = numToRem;\\\\r\\\\n                ContentToAdd = toAdd;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        public async Task<string> GetCurrentBranch()\\\\r\\\\n        \"},{\"Position\":20687,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            return File.ReadAllText($@\\\\\\\"\"},{\"Position\":20732,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<string[]> GetAllBranches()\\\\r\\\\n        \"},{\"Position\":20845,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            string[] temp = Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":20907,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\").ToArray();\\\\r\\\\n            for (int i = 0; i < temp.Length; i++)\\\\r\\\\n            \"},{\"Position\":21018,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                temp[i] = temp[i].Remove(0, $@\\\\\\\"\"},{\"Position\":21071,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\\\\\\\".Length);\\\\r\\\\n            }\\\\r\\\\n            return temp;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        async Task<Diff[]> GetDiffs(string left, string right)\\\\r\\\\n        \"},{\"Position\":21256,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            List<Diff> diffs = new List<Diff>();\\\\r\\\\n            await Task.Run(() =>\\\\r\\\\n            \"},{\"Position\":21361,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                //Try checking each character of right against left until there is a mismatch. Then maybe recursive call on shortened file?\\\\r\\\\n                //New strat: For now, trying out comparing lines. Check line against line\\\\r\\\\n                string[] leftLines = left.Split('\"},{\"Position\":21651,\"NumberToRemove\":0,\"ContentToAdd\":\"{');\\\\r\\\\n                string[] rightLines = right.Split('\"},{\"Position\":21710,\"NumberToRemove\":0,\"ContentToAdd\":\"{');\\\\r\\\\n                for (int i = 1; i < leftLines.Length; i++)\\\\r\\\\n                \"},{\"Position\":21796,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    leftLines[i] = '\"},{\"Position\":21837,\"NumberToRemove\":0,\"ContentToAdd\":\"{' + leftLines[i];\\\\r\\\\n                }\\\\r\\\\n                for (int i = 1; i < rightLines.Length; i++)\\\\r\\\\n                \"},{\"Position\":21959,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    rightLines[i] = '\"},{\"Position\":22001,\"NumberToRemove\":0,\"ContentToAdd\":\"{' + rightLines[i];\\\\r\\\\n                }\\\\r\\\\n                int loopLength = leftLines.Length > rightLines.Length ? leftLines.Length : rightLines.Length;\\\\r\\\\n                for (int i = 0; i < loopLength; i++)\\\\r\\\\n                \"},{\"Position\":22230,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    string strLeft = i < leftLines.Length ? leftLines[i] : null;\\\\r\\\\n                    string strRight = i < rightLines.Length ? rightLines[i] : null;\\\\r\\\\n                    if (strLeft != strRight)\\\\r\\\\n                    \"},{\"Position\":22474,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        if (strLeft == null)\\\\r\\\\n                        \"},{\"Position\":22551,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, leftLines.Length) + cumulativeLength(rightLines, i, leftLines.Length), 0, strRight));\\\\r\\\\n                        }\\\\r\\\\n                        else if (strRight == null)\\\\r\\\\n                        \"},{\"Position\":22828,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, rightLines.Length), leftLines[i].Length, \\\\\\\"\\\\\\\"));\\\\r\\\\n                        }\\\\r\\\\n                        else\\\\r\\\\n                        \"},{\"Position\":23046,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, i), leftLines[i].Length, strRight));\\\\r\\\\n                        }\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                int cumulativeLength(string[] array, int endingIndexPlusOne, int startingIndex = 0)\\\\r\\\\n                \"},{\"Position\":23361,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    int cumLen = 0;\\\\r\\\\n                    for (int i = startingIndex; i < endingIndexPlusOne; i++)\\\\r\\\\n                    \"},{\"Position\":23505,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        cumLen += array[i].Length;\\\\r\\\\n                    }\\\\r\\\\n                    return cumLen;\\\\r\\\\n                }\\\\r\\\\n            });\\\\r\\\\n            return diffs.ToArray();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        string MergeDiffs(string left, Diff[] diffs)\\\\r\\\\n        \"},{\"Position\":23787,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            for (int i = 0; i < diffs.Length; i++)\\\\r\\\\n            \"},{\"Position\":23858,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                left = left.Remove(diffs[i].Position, diffs[i].NumberToRemove).Insert(diffs[i].Position, diffs[i].ContentToAdd);\\\\r\\\\n            }\\\\r\\\\n            return left;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        string origin\\\\r\\\\n        \"},{\"Position\":24090,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":24126,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                return File.ReadAllText($@\\\\\\\"\"},{\"Position\":24175,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\origin\\\\\\\");\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public string Path \"},{\"Position\":24264,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string[] IgnoredPaths\\\\r\\\\n        \"},{\"Position\":24333,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":24369,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                if (!File.Exists($@\\\\\\\"\"},{\"Position\":24411,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":24453,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    return new string[] \"},{\"Position\":24498,\"NumberToRemove\":0,\"ContentToAdd\":\"{ @\\\\\\\"\\\\\\\\.pvc\\\\\\\" };\\\\r\\\\n                }\\\\r\\\\n                string[] igPaths = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":24596,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n                string[] igPaths2 = new string[igPaths.Length + 1];\\\\r\\\\n                igPaths.CopyTo(igPaths2, 1);\\\\r\\\\n                igPaths2[0] = @\\\\\\\"\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n                return igPaths2;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public string IgnoredRegex\\\\r\\\\n        \"},{\"Position\":24903,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":24939,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                return IgnoredPaths.Length > 1 ? (IgnoredPaths[1].StartsWith(\\\\\\\"R: \\\\\\\") ? IgnoredPaths[1].Remove(0, 3) : \\\\\\\"\\\\\\\") : \\\\\\\"\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        public async Task SetIgnoredRegex(string regexToIgnore)\\\\r\\\\n        \"},{\"Position\":25185,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            if (IgnoredPaths.Length > 1 && IgnoredPaths[1].StartsWith(\\\\\\\"R: \\\\\\\"))\\\\r\\\\n            \"},{\"Position\":25285,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                string[] linesa = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":25346,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n                linesa[0] = \\\\\\\"R: \\\\\\\" + regexToIgnore;\\\\r\\\\n                File.WriteAllLines($@\\\\\\\"\"},{\"Position\":25467,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", linesa);\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            if (!File.Exists($@\\\\\\\"\"},{\"Position\":25578,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":25616,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":25659,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", \\\\\\\"R: \\\\\\\" + regexToIgnore);\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            string[] lines = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":25805,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n            string[] lines2 = new string[lines.Length + 1];\\\\r\\\\n            lines.CopyTo(lines2, 1);\\\\r\\\\n            lines2[0] = \\\\\\\"R: \\\\\\\" + regexToIgnore;\\\\r\\\\n            File.WriteAllLines($@\\\\\\\"\"},{\"Position\":26021,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", lines2);\\\\r\\\\n        }\\\\r\\\\n        public async Task IgnorePaths(string[] pathsToIgnore)\\\\r\\\\n        \"},{\"Position\":26141,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            File.AppendAllLines($@\\\\\\\"\"},{\"Position\":26182,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", pathsToIgnore);\\\\r\\\\n        }\\\\r\\\\n        public async Task UnignorePaths(string[] pathsToUnignore)\\\\r\\\\n        \"},{\"Position\":26313,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            if (File.Exists($@\\\\\\\"\"},{\"Position\":26350,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":26388,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllLines($@\\\\\\\"\"},{\"Position\":26432,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", File.ReadAllLines($@\\\\\\\"\"},{\"Position\":26476,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\").Except(pathsToUnignore));\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        //public Func<string, string, string> GetDiffs \"},{\"Position\":26612,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Func<string, string, string> MergeDiffs \"},{\"Position\":26686,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Commit Head \"},{\"Position\":26732,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Commit[] Branches \"},{\"Position\":26784,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        HttpClient client;\\\\r\\\\n\\\\r\\\\n        public PVCServerInterface(/*Commit head,*/ string path)\\\\r\\\\n        \"},{\"Position\":26910,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            client = new HttpClient();\\\\r\\\\n            //Head = head;\\\\r\\\\n            Path = path;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<string[]> Log()\\\\r\\\\n        \"},{\"Position\":27085,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            List<string> ret = new List<string>();\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            string path2 = Path + \\\\\\\"\\\\\\\\\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n            Commit temp = GetCommit(head, path2);\\\\r\\\\n            while (true)\\\\r\\\\n            \"},{\"Position\":27331,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                ret.Add(temp.Message);\\\\r\\\\n                if (temp.Parent == 0)\\\\r\\\\n                \"},{\"Position\":27435,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                temp = GetCommit(temp.Parent, path2);\\\\r\\\\n            }\\\\r\\\\n            return ret.ToArray();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<string[]> Log(int number)\\\\r\\\\n        \"},{\"Position\":27682,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            string[] ret = new string[number];\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            string path2 = Path + \\\\\\\"\\\\\\\\\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n            Commit temp = GetCommit(head, path2);\\\\r\\\\n            for (int i = 0; i < number; i++)\\\\r\\\\n            \"},{\"Position\":27944,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                ret[i] = temp.Message;\\\\r\\\\n                if (temp.Parent == 0)\\\\r\\\\n                \"},{\"Position\":28048,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                temp = GetCommit(temp.Parent, path2);\\\\r\\\\n            }\\\\r\\\\n            return ret;\\\\r\\\\n\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public enum PullResult\\\\r\\\\n        \"},{\"Position\":28268,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            Success = 0,\\\\r\\\\n            Uncommitted_Changes,\\\\r\\\\n            Merge_Conflict\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// WIP\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<PullResult> Pull()\\\\r\\\\n        \"},{\"Position\":28549,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            if (await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":28613,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                return PullResult.Uncommitted_Changes;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":28746,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool allValid = true;\\\\r\\\\n            foreach (string path in Directory.EnumerateDirectories($@\\\\\\\"\"},{\"Position\":29006,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":29054,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                string branchCheck = path.Remove(0, Path.Length + 19);\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":29194,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":29224,\"NumberToRemove\":0,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":29307,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":29332,\"NumberToRemove\":0,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) != branch1)\\\\r\\\\n                \"},{\"Position\":29465,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    allValid = false;\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            if (allValid)\\\\r\\\\n            \"},{\"Position\":29620,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                Directory.Move(path2, $@\\\\\\\"\"},{\"Position\":29667,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcTemp\\\\\\\");\\\\r\\\\n                Directory.Delete($@\\\\\\\"\"},{\"Position\":29728,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\", true);\\\\r\\\\n                Directory.Move($@\\\\\\\"\"},{\"Position\":29789,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcTemp\\\\\\\", $@\\\\\\\"\"},{\"Position\":29813,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n                await Checkout(branch);\\\\r\\\\n                return PullResult.Success;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return PullResult.Merge_Conflict;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public enum Status\\\\r\\\\n        \"},{\"Position\":30089,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            Uncommitted_Changes,\\\\r\\\\n            Ahead_of_Origin,\\\\r\\\\n            Behind_Origin,\\\\r\\\\n            Up_to_Date\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<Status> GetStatus(string branch)\\\\r\\\\n        \"},{\"Position\":30305,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            if (await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":30369,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                return Status.Uncommitted_Changes;\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":30477,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n                await Clone(path2, origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":30671,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":30701,\"NumberToRemove\":0,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n                if (!File.Exists($@\\\\\\\"\"},{\"Position\":30755,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":30780,\"NumberToRemove\":0,\"ContentToAdd\":\"{branch}\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":30812,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Ahead_of_Origin;\\\\r\\\\n                }\\\\r\\\\n                int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":30953,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":30978,\"NumberToRemove\":0,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n                int ca = CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2);\\\\r\\\\n                Directory.Delete(path2, true);\\\\r\\\\n                if (branch1 == branch2)\\\\r\\\\n                \"},{\"Position\":31193,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Up_to_Date;\\\\r\\\\n                }\\\\r\\\\n                else if (ca == branch1)\\\\r\\\\n                \"},{\"Position\":31327,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Behind_Origin;\\\\r\\\\n                }\\\\r\\\\n                else//(ca == branch2)\\\\r\\\\n                \"},{\"Position\":31462,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Ahead_of_Origin;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            //else if (await CanPush(File.ReadAllText($@\\\\\\\"\"},{\"Position\":31617,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")))\\\\r\\\\n            //\"},{\"Position\":31664,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            //    return Status.Up_to_Date;\\\\r\\\\n            //}\\\\r\\\\n            //return Status.Out_of_Date;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        public async Task<bool> Checkout(string branch)\\\\r\\\\n        \"},{\"Position\":31867,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            if (!File.Exists($@\\\\\\\"\"},{\"Position\":31905,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":31935,\"NumberToRemove\":0,\"ContentToAdd\":\"{branch}\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":31963,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                return false;\\\\r\\\\n            }\\\\r\\\\n            await Task.Run(async () =>\\\\r\\\\n            \"},{\"Position\":32072,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                foreach (string path in Directory.EnumerateDirectories(Path))\\\\r\\\\n                \"},{\"Position\":32174,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    if (path != Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n                    \"},{\"Position\":32254,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        Directory.Delete(path, true);\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                foreach (string path in Directory.EnumerateFiles(Path))\\\\r\\\\n                \"},{\"Position\":32453,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    File.Delete(path);\\\\r\\\\n                }\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":32559,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\", branch);\\\\r\\\\n                await SetFiles(JsonConvert.DeserializeObject<Folder>(GetUpdatedFiles(int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":32715,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":32745,\"NumberToRemove\":0,\"ContentToAdd\":\"{branch}\\\\\\\")))), Path);\\\\r\\\\n            });\\\\r\\\\n            return true;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task SetFiles(Folder folder, string rootPath)\\\\r\\\\n        \"},{\"Position\":32906,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            Directory.CreateDirectory(rootPath + folder.Path);\\\\r\\\\n            foreach (FileObj file in folder.Files)\\\\r\\\\n            \"},{\"Position\":33043,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllText(rootPath + file.Path, file.Contents);\\\\r\\\\n            }\\\\r\\\\n            foreach (Folder dir in folder.Folders)\\\\r\\\\n            \"},{\"Position\":33206,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                await SetFiles(dir, rootPath);\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<Folder> LoadFiles()\\\\r\\\\n        \"},{\"Position\":33345,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            return await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<Folder> LoadFiles(string path, int charsToRemoveFromPath, string[] excludedDirs, string regex, string rootPath = \\\\\\\"\\\\\\\")\\\\r\\\\n        \"},{\"Position\":33602,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            if (rootPath == \\\\\\\"\\\\\\\")\\\\r\\\\n            \"},{\"Position\":33656,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                rootPath = path;\\\\r\\\\n            }\\\\r\\\\n            string[] firstCharsRemoved(string[] start, int charsToRem)\\\\r\\\\n            \"},{\"Position\":33800,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                for (int i = 0; i < start.Length; i++)\\\\r\\\\n                \"},{\"Position\":33879,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    start[i] = start[i].Remove(0, charsToRem);\\\\r\\\\n                }\\\\r\\\\n                return start;\\\\r\\\\n            }\\\\r\\\\n            string[] exceptRegex(string[] array, string regExpression)\\\\r\\\\n            \"},{\"Position\":34107,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                if (regExpression == \\\\\\\"\\\\\\\")\\\\r\\\\n                \"},{\"Position\":34174,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    return array;\\\\r\\\\n                }\\\\r\\\\n                Regex regexp = new Regex(regExpression);\\\\r\\\\n                var temp = array.ToList();\\\\r\\\\n                for (int i = 0; i < array.Length; i++)\\\\r\\\\n                \"},{\"Position\":34417,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    if (regexp.IsMatch(array[i]))\\\\r\\\\n                    \"},{\"Position\":34495,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        temp.Remove(array[i]);\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                return temp.ToArray();\\\\r\\\\n            }\\\\r\\\\n            Folder folder = new Folder()\\\\r\\\\n            \"},{\"Position\":34711,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                Path = path.Remove(0, charsToRemoveFromPath)\\\\r\\\\n            };\\\\r\\\\n            string[] filePaths = exceptRegex(firstCharsRemoved(Directory.GetFiles(path), charsToRemoveFromPath).Except(excludedDirs).ToArray(), regex);\\\\r\\\\n            folder.Files = new FileObj[filePaths.Length];\\\\r\\\\n            for (int i = 0; i < filePaths.Length; i++)\\\\r\\\\n            \"},{\"Position\":35084,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                folder.Files[i] = new FileObj(filePaths[i], File.ReadAllText($\\\\\\\"\"},{\"Position\":35169,\"NumberToRemove\":0,\"ContentToAdd\":\"{rootPath}\\\\\\\\\\\\\\\\\"},{\"Position\":35183,\"NumberToRemove\":0,\"ContentToAdd\":\"{filePaths[i]}\\\\\\\"));\\\\r\\\\n            }\\\\r\\\\n            Regex regextest = new Regex(regex);\\\\r\\\\n            var folderPaths = exceptRegex(firstCharsRemoved(Directory.GetDirectories(path), charsToRemoveFromPath).Except(excludedDirs).ToArray(), regex);\\\\r\\\\n            folder.Folders = new Folder[folderPaths.Length];\\\\r\\\\n\\\\r\\\\n            for (int i = 0; i < folderPaths.Length; i++)\\\\r\\\\n            \"},{\"Position\":35572,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                folder.Folders[i] = await LoadFiles($\\\\\\\"\"},{\"Position\":35632,\"NumberToRemove\":0,\"ContentToAdd\":\"{rootPath}\"},{\"Position\":35642,\"NumberToRemove\":0,\"ContentToAdd\":\"{folderPaths[i]}\\\\\\\", charsToRemoveFromPath, excludedDirs, regex, rootPath);\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            return folder;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        string GetUpdatedFiles(int latestCommit)\\\\r\\\\n        \"},{\"Position\":35848,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            Commit lastCommit = JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":35944,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":35967,\"NumberToRemove\":0,\"ContentToAdd\":\"{latestCommit % 100}\\\\\\\\\"},{\"Position\":35989,\"NumberToRemove\":0,\"ContentToAdd\":\"{latestCommit / 100}\\\\\\\"));\\\\r\\\\n            return MergeDiffs(lastCommit.Parent == 0 ? \\\\\\\"\\\\\\\" : GetUpdatedFiles(lastCommit.Parent), JsonConvert.DeserializeObject<Diff[]>(lastCommit.Diffs));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task CreateBranch(string name)\\\\r\\\\n        \"},{\"Position\":36257,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            await CreateBranch(name, int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":36330,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":36360,\"NumberToRemove\":0,\"ContentToAdd\":\"{File.ReadAllText($@\\\\\\\"\"},{\"Position\":36382,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")}\\\\\\\")));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task CreateBranch(string name, int commitID)\\\\r\\\\n        \"},{\"Position\":36514,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(() => File.WriteAllText($@\\\\\\\"\"},{\"Position\":36574,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":36604,\"NumberToRemove\":0,\"ContentToAdd\":\"{name}\\\\\\\", commitID.ToString()));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task Clone(string orig)\\\\r\\\\n        \"},{\"Position\":36713,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            await Clone(Path, orig, true, @\\\\\\\"\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task Clone(string path, string orig, bool loadCommits, string dataAdditional = @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n        \"},{\"Position\":36911,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(async () =>\\\\r\\\\n            \"},{\"Position\":36970,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                string path2 = path + dataAdditional;\\\\r\\\\n                Directory.CreateDirectory(path2);\\\\r\\\\n                File.WriteAllText(path2 + @\\\\\\\"\\\\\\\\origin\\\\\\\", orig);\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":37198,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\");\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":37265,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\");\\\\r\\\\n                var received = await client.GetAsync(origin + \\\\\\\"/branches\\\\\\\");\\\\r\\\\n                Dictionary<string, int> branches = JsonConvert.DeserializeObject<Dictionary<string, int>>(received.Content.ReadAsStringAsync().Result);\\\\r\\\\n                foreach (string branch in branches.Keys)\\\\r\\\\n                \"},{\"Position\":37608,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    File.WriteAllText($@\\\\\\\"\"},{\"Position\":37655,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":37680,\"NumberToRemove\":0,\"ContentToAdd\":\"{branch}\\\\\\\", branches[branch].ToString());\\\\r\\\\n                }\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":37784,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\HEAD\\\\\\\", branches.Keys.ToArray()[0]);\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":37885,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\commits\\\\\\\");\\\\r\\\\n\\\\r\\\\n                if (loadCommits)\\\\r\\\\n                \"},{\"Position\":37965,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    await GetAllCommits(path, branches.Keys.ToArray(), dataAdditional);\\\\r\\\\n                }\\\\r\\\\n            });\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async /*Task<Dictionary<int, Commit>>*/ Task GetAllCommits(string path, string[] branches, string extraString = @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n        \"},{\"Position\":38262,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            // Dictionary<int, Commit> allCommits = new Dictionary<int, Commit>();\\\\r\\\\n            for (int i = 0; i < branches.Length; i++)\\\\r\\\\n            \"},{\"Position\":38422,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                var received = await client.GetAsync($\\\\\\\"\"},{\"Position\":38483,\"NumberToRemove\":0,\"ContentToAdd\":\"{origin}?branch=\"},{\"Position\":38499,\"NumberToRemove\":0,\"ContentToAdd\":\"{branches[i]}\\\\\\\");\\\\r\\\\n                Dictionary<int, Commit> commits = JsonConvert.DeserializeObject<Dictionary<int, Commit>>(received.Content.ReadAsStringAsync().Result);\\\\r\\\\n                for (int j = 0; j < commits.Keys.Count; j++)\\\\r\\\\n                \"},{\"Position\":38754,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    string path2 = $@\\\\\\\"\"},{\"Position\":38798,\"NumberToRemove\":0,\"ContentToAdd\":\"{path}\"},{\"Position\":38804,\"NumberToRemove\":0,\"ContentToAdd\":\"{extraString}\\\\\\\\commits\\\\\\\\\"},{\"Position\":38828,\"NumberToRemove\":0,\"ContentToAdd\":\"{commits.Keys.ToArray()[j] % 100}\\\\\\\";\\\\r\\\\n                    Directory.CreateDirectory(path2);\\\\r\\\\n                    File.WriteAllText($@\\\\\\\"\"},{\"Position\":38967,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\\"},{\"Position\":38976,\"NumberToRemove\":0,\"ContentToAdd\":\"{commits.Keys.ToArray()[j] / 100}\\\\\\\", JsonConvert.SerializeObject(commits.Values.ToArray()[j]));\\\\r\\\\n                    // allCommits.Add(commits[j].GetHashCode(),commits[j]);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            //return allCommits;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<int> GetHead()\\\\r\\\\n        \"},{\"Position\":39290,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            int result = 0;\\\\r\\\\n            await Task.Run(() => result = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":39399,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":39429,\"NumberToRemove\":0,\"ContentToAdd\":\"{File.ReadAllText($@\\\\\\\"\"},{\"Position\":39451,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")}\\\\\\\")));\\\\r\\\\n            return result;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<int> Commit(Commit commit)\\\\r\\\\n        \"},{\"Position\":39593,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            Guid guid = Guid.NewGuid();\\\\r\\\\n            int hash = guid.GetHashCode();\\\\r\\\\n            string path = $@\\\\\\\"\"},{\"Position\":39717,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":39740,\"NumberToRemove\":0,\"ContentToAdd\":\"{hash % 100}\\\\\\\";\\\\r\\\\n            await Task.Run(() =>\\\\r\\\\n            \"},{\"Position\":39807,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                Directory.CreateDirectory(path);\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":39902,\"NumberToRemove\":0,\"ContentToAdd\":\"{path}\\\\\\\\\"},{\"Position\":39910,\"NumberToRemove\":0,\"ContentToAdd\":\"{hash / 100}\\\\\\\", JsonConvert.SerializeObject(commit));\\\\r\\\\n            });\\\\r\\\\n            return hash;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task Commit(string author, string committer, string diffs, string message, int parentId)\\\\r\\\\n        \"},{\"Position\":40145,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            await Commit(new Commit(diffs, message, author, committer, parentId));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task Commit(string message, string author, string committer)\\\\r\\\\n        \"},{\"Position\":40346,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            Commit commitToCommit = new Commit(JsonConvert.SerializeObject(await GetDiffs(GetUpdatedFiles(head), JsonConvert.SerializeObject(await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex)))), message, author, committer, head);\\\\r\\\\n            int specialHash = await Commit(commitToCommit);\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":40752,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            File.WriteAllText($@\\\\\\\"\"},{\"Position\":40818,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":40848,\"NumberToRemove\":0,\"ContentToAdd\":\"{branch}\\\\\\\", specialHash.ToString());\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task DeleteBranch(string branch)\\\\r\\\\n        \"},{\"Position\":40970,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(() => File.Delete($@\\\\\\\"\"},{\"Position\":41024,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":41054,\"NumberToRemove\":0,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            //await client.DeleteAsync($\\\\\\\"\"},{\"Position\":41113,\"NumberToRemove\":0,\"ContentToAdd\":\"{Origin}/\"},{\"Position\":41122,\"NumberToRemove\":0,\"ContentToAdd\":\"{branch}\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        //TODO: Detect uncommitted changes or out-of-date repo\\\\r\\\\n        async Task<bool> UncommittedChanges()\\\\r\\\\n        \"},{\"Position\":41282,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            return (await GetDiffs(GetUpdatedFiles(head), JsonConvert.SerializeObject(await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex)))).Length != 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Describes whether or not a branch can be pushed without causing merge conflicts.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        async Task<bool> CanPush(string branch)\\\\r\\\\n        \"},{\"Position\":41760,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool canPush = false;\\\\r\\\\n            int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":41979,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":42009,\"NumberToRemove\":0,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":42083,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":42108,\"NumberToRemove\":0,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) == branch2)\\\\r\\\\n            \"},{\"Position\":42228,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                canPush = true;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return canPush;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        async Task<bool> CanPull(string branch)\\\\r\\\\n        \"},{\"Position\":42442,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool canPull = false;\\\\r\\\\n            int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":42661,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":42691,\"NumberToRemove\":0,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":42765,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":42790,\"NumberToRemove\":0,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) == branch1)\\\\r\\\\n            \"},{\"Position\":42910,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                canPull = true;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return canPull;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        int CommonAncestor(int commit1, int commit2)\\\\r\\\\n        \"},{\"Position\":43125,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            return CommonAncestor(commit1, commit2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        int CommonAncestor(int commit1, int commit2, string path1, string path2)\\\\r\\\\n        \"},{\"Position\":43335,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            Commit cmit = GetCommit(commit1, path1);\\\\r\\\\n            Commit cmit2Strt = GetCommit(commit2, path2);\\\\r\\\\n            while (true)\\\\r\\\\n            \"},{\"Position\":43497,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                Commit cmit2 = cmit2Strt;\\\\r\\\\n                while (true)\\\\r\\\\n                \"},{\"Position\":43595,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    if (commit2 == commit1)\\\\r\\\\n                    \"},{\"Position\":43667,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        return commit2;\\\\r\\\\n                    }\\\\r\\\\n                    if (cmit2.Parent == 0)\\\\r\\\\n                    \"},{\"Position\":43806,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        break;\\\\r\\\\n                    }\\\\r\\\\n                    commit2 = cmit2.Parent;\\\\r\\\\n                    cmit2 = GetCommit(cmit2.Parent, path2);\\\\r\\\\n                }\\\\r\\\\n                if (cmit.Parent == 0)\\\\r\\\\n                \"},{\"Position\":44058,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                commit1 = cmit.Parent;\\\\r\\\\n                cmit = GetCommit(cmit.Parent, path1);\\\\r\\\\n            }\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        Commit GetCommit(int id, string pvcPath)\\\\r\\\\n        \"},{\"Position\":44332,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            return JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":44415,\"NumberToRemove\":0,\"ContentToAdd\":\"{pvcPath}\\\\\\\\commits\\\\\\\\\"},{\"Position\":44435,\"NumberToRemove\":0,\"ContentToAdd\":\"{id % 100}\\\\\\\\\"},{\"Position\":44447,\"NumberToRemove\":0,\"ContentToAdd\":\"{id / 100}\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Pushes committed changes.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <param name=\\\\\\\"branchToPush\\\\\\\">The branch to push. If empty, pushes all branches.</param>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<bool> Push(string branchToPush = \\\\\\\"\\\\\\\")\\\\r\\\\n        \"},{\"Position\":44789,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n\\\\r\\\\n            if (await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":44857,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                return false;\\\\r\\\\n            }\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":44961,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool allValid = true;\\\\r\\\\n            if (branchToPush == \\\\\\\"\\\\\\\")\\\\r\\\\n            \"},{\"Position\":45203,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                foreach (string path in Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":45277,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":45329,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    if (!await checkValid(path.Remove(0, Path.Length + 19)))\\\\r\\\\n                    \"},{\"Position\":45434,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        break;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":45568,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                await checkValid(branchToPush);\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            async Task<bool> checkValid(string branchCheck)\\\\r\\\\n            \"},{\"Position\":45720,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":45786,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":45816,\"NumberToRemove\":0,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                if (File.Exists($@\\\\\\\"\"},{\"Position\":45874,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":45899,\"NumberToRemove\":0,\"ContentToAdd\":\"{branchCheck}\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":45936,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":46006,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":46031,\"NumberToRemove\":0,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) != branch2)\\\\r\\\\n                    \"},{\"Position\":46172,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        allValid = false;\\\\r\\\\n                        return false;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                return true;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            if (allValid)\\\\r\\\\n            \"},{\"Position\":46403,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                if (branchToPush == \\\\\\\"\\\\\\\")\\\\r\\\\n                \"},{\"Position\":46469,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    foreach (string path in Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":46547,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n                    \"},{\"Position\":46603,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        await PushBranch(path.Remove(0, Path.Length + 19));\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                else\\\\r\\\\n                \"},{\"Position\":46773,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    await PushBranch(branchToPush);\\\\r\\\\n                }\\\\r\\\\n                async Task PushBranch(string branchCheck)\\\\r\\\\n                \"},{\"Position\":46931,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":47001,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":47031,\"NumberToRemove\":0,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    int commonAncestor;\\\\r\\\\n                    if (File.Exists($@\\\\\\\"\"},{\"Position\":47136,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":47161,\"NumberToRemove\":0,\"ContentToAdd\":\"{branchCheck}\\\\\\\"))\\\\r\\\\n                    \"},{\"Position\":47202,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":47276,\"NumberToRemove\":0,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":47301,\"NumberToRemove\":0,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                        commonAncestor = CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2);\\\\r\\\\n                    }\\\\r\\\\n                    else\\\\r\\\\n                    \"},{\"Position\":47501,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        commonAncestor = 0;\\\\r\\\\n                    }\\\\r\\\\n                    int commit = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":47642,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":47672,\"NumberToRemove\":0,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    Dictionary<int, Commit> commits = new Dictionary<int, Commit>();\\\\r\\\\n                    while (commit != commonAncestor)\\\\r\\\\n                    \"},{\"Position\":47858,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        Commit commitInCommitForm = JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":47974,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":47997,\"NumberToRemove\":0,\"ContentToAdd\":\"{commit % 100}\\\\\\\\\"},{\"Position\":48013,\"NumberToRemove\":0,\"ContentToAdd\":\"{commit / 100}\\\\\\\"));\\\\r\\\\n                        commits.Add(commit, commitInCommitForm);\\\\r\\\\n                        commit = commitInCommitForm.Parent;\\\\r\\\\n                    }\\\\r\\\\n                    commits.Reverse();\\\\r\\\\n                    await client.PutAsync($\\\\\\\"\"},{\"Position\":48279,\"NumberToRemove\":0,\"ContentToAdd\":\"{origin}/\"},{\"Position\":48288,\"NumberToRemove\":0,\"ContentToAdd\":\"{branchCheck}\\\\\\\", new StringContent(JsonConvert.SerializeObject(commits), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return allValid;\\\\r\\\\n            //await client.PostAsync(Origin, new StringContent(JsonConvert.SerializeObject(commit), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":48703,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\.pvcignore\\\",\\\"Contents\\\":\\\"R: bin|vs|obj|packages\\\\r\\\\n\\\"},\"},{\"Position\":48767,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient.sln\\\",\\\"Contents\\\":\\\"\\\\r\\\\nMicrosoft Visual Studio Solution File, Format Version 12.00\\\\r\\\\n# Visual Studio 15\\\\r\\\\nVisualStudioVersion = 15.0.27004.2005\\\\r\\\\nMinimumVisualStudioVersion = 10.0.40219.1\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":48990,\"NumberToRemove\":0,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCClient\\\\\\\", \\\\\\\"PVCClient\\\\\\\\PVCClient.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":49084,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":49152,\"NumberToRemove\":0,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCPipeClient\\\\\\\", \\\\\\\"PVCPipeClient\\\\\\\\PVCPipeClient.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":49258,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nGlobal\\\\r\\\\n\\\\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\\\\r\\\\n\\\\t\\\\tDebug|Any CPU = Debug|Any CPU\\\\r\\\\n\\\\t\\\\tRelease|Any CPU = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":49560,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":49646,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":49730,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":49820,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":49908,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":49994,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":50078,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":50168,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(SolutionProperties) = preSolution\\\\r\\\\n\\\\t\\\\tHideSolutionNode = FALSE\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ExtensibilityGlobals) = postSolution\\\\r\\\\n\\\\t\\\\tSolutionGuid = \"},{\"Position\":50456,\"NumberToRemove\":0,\"ContentToAdd\":\"{78911CB1-A8D8-4CCA-BCF1-C4390A8F96AE}\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\nEndGlobal\\\\r\\\\n\\\"}]}\"}]","Parent":335108692,"Message":"Loaded Client into PVCPipe repository.","Author":"Peter","Committer":"Peter"}