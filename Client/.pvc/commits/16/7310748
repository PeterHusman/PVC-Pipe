{"Diffs":"[{\"Position\":6227,\"NumberToRemove\":368,\"ContentToAdd\":\"{\\\\r\\\\n                    [\\\\\\\"clone\\\\\\\"] = async () => await interf.Clone(parameters[1]),\\\\r\\\\n                    [\\\\\\\"pull\\\\\\\"] = async () => Console.WriteLine((await interf.Pull()).ToString().Replace('_', ' ')),\\\\r\\\\n                    [\\\\\\\"checkout\\\\\\\"] = async () => Console.WriteLine(await interf.Checkout(parameters[1])),\\\\r\\\\n                    [\\\\\\\"commit\\\\\\\"] = async () =>\\\\r\\\\n                    \"},{\"Position\":7739,\"NumberToRemove\":312,\"ContentToAdd\":\"{id}.\\\\\\\";\\\\r\\\\n                        }\\\\r\\\\n                        await interf.RevertCommit(message, account.Username, account.Username, DateTime.Now, id);\\\\r\\\\n                        Console.WriteLine(await interf.Checkout(await interf.GetCurrentBranch()));\\\\r\\\\n                    },\\\\r\\\\n                    [\\\\\\\"push\\\\\\\"] = async () => \"},{\"Position\":53573,\"NumberToRemove\":372,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n            string parentFiles = GetUpdatedFiles(commitToUndo.Parent);\\\\r\\\\n            Diff[] undoDiffs = await GetDiffs(MergeDiffs(parentFiles, diffs), parentFiles);\\\\r\\\\n            Commit commitToCommit = new Commit(JsonConvert.SerializeObject(undoDiffs), message, author, committer, head, dateTime);\\\\r\\\\n            int specialHash = await Commit(commitToCommit);\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":54009,\"NumberToRemove\":246,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            File.WriteAllText($@\\\\\\\"\"},{\"Position\":54075,\"NumberToRemove\":96,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":54105,\"NumberToRemove\":247,\"ContentToAdd\":\"{branch}\\\\\\\", specialHash.ToString());\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<Commit[]> Log()\\\\r\\\\n        \"},{\"Position\":54215,\"NumberToRemove\":262,\"ContentToAdd\":\"{\\\\r\\\\n            List<Commit> ret = new List<Commit>();\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            string path2 = Path + \\\\\\\"\\\\\\\\\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n            Commit temp = GetCommit(head, path2);\\\\r\\\\n            while (true)\\\\r\\\\n            \"},{\"Position\":54461,\"NumberToRemove\":96,\"ContentToAdd\":\"{\\\\r\\\\n                ret.Add(temp);\\\\r\\\\n                if (temp.Parent == 0)\\\\r\\\\n                \"},{\"Position\":54557,\"NumberToRemove\":339,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                temp = GetCommit(temp.Parent, path2);\\\\r\\\\n            }\\\\r\\\\n            return ret.ToArray();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<Commit[]> Log(int number)\\\\r\\\\n        \"},{\"Position\":54804,\"NumberToRemove\":64,\"ContentToAdd\":\"{\\\\r\\\\n            Commit[] ret = new Commit[number];\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            string path2 = Path + \\\\\\\"\\\\\\\\\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n            Commit temp = GetCommit(head, path2);\\\\r\\\\n            for (int i = 0; i < number; i++)\\\\r\\\\n            \"},{\"Position\":55066,\"NumberToRemove\":133,\"ContentToAdd\":\"{\\\\r\\\\n                ret[i] = temp;\\\\r\\\\n                if (temp.Parent == 0)\\\\r\\\\n                \"},{\"Position\":55162,\"NumberToRemove\":260,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                temp = GetCommit(temp.Parent, path2);\\\\r\\\\n            }\\\\r\\\\n            return ret;\\\\r\\\\n\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// WIP\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<PullResult> Pull()\\\\r\\\\n        \"},{\"Position\":55501,\"NumberToRemove\":48,\"ContentToAdd\":\"{\\\\r\\\\n            if (await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":55565,\"NumberToRemove\":140,\"ContentToAdd\":\"{\\\\r\\\\n                return PullResult.Uncommitted_Changes;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":55698,\"NumberToRemove\":30,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool allValid = true;\\\\r\\\\n            foreach (string path in Directory.EnumerateDirectories($@\\\\\\\"\"},{\"Position\":55958,\"NumberToRemove\":83,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":56006,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                string branchCheck = path.Remove(0, Path.Length + 19);\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":56146,\"NumberToRemove\":133,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":56176,\"NumberToRemove\":155,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":56259,\"NumberToRemove\":47,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":56284,\"NumberToRemove\":61,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) != branch1)\\\\r\\\\n                \"},{\"Position\":56417,\"NumberToRemove\":61,\"ContentToAdd\":\"{\\\\r\\\\n                    allValid = false;\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            if (allValid)\\\\r\\\\n            \"},{\"Position\":56572,\"NumberToRemove\":24,\"ContentToAdd\":\"{\\\\r\\\\n                Directory.Move(path2, $@\\\\\\\"\"},{\"Position\":56619,\"NumberToRemove\":308,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcTemp\\\\\\\");\\\\r\\\\n                Directory.Delete($@\\\\\\\"\"},{\"Position\":56680,\"NumberToRemove\":102,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\", true);\\\\r\\\\n                Directory.Move($@\\\\\\\"\"},{\"Position\":56741,\"NumberToRemove\":108,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcTemp\\\\\\\", $@\\\\\\\"\"},{\"Position\":56765,\"NumberToRemove\":194,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n                await Checkout(branch);\\\\r\\\\n                return PullResult.Success;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return PullResult.Merge_Conflict;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<Status> GetStatus(string branch)\\\\r\\\\n        \"},{\"Position\":57073,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n            if (branch == await GetCurrentBranch() && await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":57175,\"NumberToRemove\":54,\"ContentToAdd\":\"{\\\\r\\\\n                return Status.Uncommitted_Changes;\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":57283,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n                await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":57477,\"NumberToRemove\":32,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":57507,\"NumberToRemove\":141,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n                if (!File.Exists($@\\\\\\\"\"},{\"Position\":57586,\"NumberToRemove\":215,\"ContentToAdd\":\"{branch}\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":57618,\"NumberToRemove\":134,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Ahead_of_Origin;\\\\r\\\\n                }\\\\r\\\\n                int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":57759,\"NumberToRemove\":135,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":57784,\"NumberToRemove\":155,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n                int ca = CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2);\\\\r\\\\n                Directory.Delete(path2, true);\\\\r\\\\n                if (branch1 == branch2)\\\\r\\\\n                \"},{\"Position\":57999,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Up_to_Date;\\\\r\\\\n                }\\\\r\\\\n                else if (ca == branch1)\\\\r\\\\n                \"},{\"Position\":58133,\"NumberToRemove\":203,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Behind_Origin;\\\\r\\\\n                }\\\\r\\\\n                else//(ca == branch2)\\\\r\\\\n                \"},{\"Position\":58268,\"NumberToRemove\":38,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Ahead_of_Origin;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            //else if (await CanPush(File.ReadAllText($@\\\\\\\"\"},{\"Position\":58423,\"NumberToRemove\":30,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")))\\\\r\\\\n            //\"},{\"Position\":58470,\"NumberToRemove\":58,\"ContentToAdd\":\"{\\\\r\\\\n            //    return Status.Up_to_Date;\\\\r\\\\n            //}\\\\r\\\\n            //return Status.Out_of_Date;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        public async Task<bool> Checkout(string branch)\\\\r\\\\n        \"},{\"Position\":58673,\"NumberToRemove\":109,\"ContentToAdd\":\"{\\\\r\\\\n            if (!File.Exists($@\\\\\\\"\"},{\"Position\":58711,\"NumberToRemove\":102,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":58741,\"NumberToRemove\":80,\"ContentToAdd\":\"{branch}\\\\\\\") || await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":58799,\"NumberToRemove\":199,\"ContentToAdd\":\"{\\\\r\\\\n                return false;\\\\r\\\\n            }\\\\r\\\\n            await Task.Run(async () =>\\\\r\\\\n            \"},{\"Position\":58908,\"NumberToRemove\":106,\"ContentToAdd\":\"{\\\\r\\\\n                foreach (string path in Directory.EnumerateDirectories(Path))\\\\r\\\\n                \"},{\"Position\":59010,\"NumberToRemove\":156,\"ContentToAdd\":\"{\\\\r\\\\n                    if (path != Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n                    \"},{\"Position\":59090,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                        Directory.Delete(path, true);\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                foreach (string path in Directory.EnumerateFiles(Path))\\\\r\\\\n                \"},{\"Position\":59289,\"NumberToRemove\":161,\"ContentToAdd\":\"{\\\\r\\\\n                    File.Delete(path);\\\\r\\\\n                }\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":59395,\"NumberToRemove\":137,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\", branch);\\\\r\\\\n                await SetFiles(JsonConvert.DeserializeObject<Folder>(GetUpdatedFiles(int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":59551,\"NumberToRemove\":163,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":59581,\"NumberToRemove\":139,\"ContentToAdd\":\"{branch}\\\\\\\")))), Path);\\\\r\\\\n            });\\\\r\\\\n            return true;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task SetFiles(Folder folder, string rootPath)\\\\r\\\\n        \"},{\"Position\":59742,\"NumberToRemove\":257,\"ContentToAdd\":\"{\\\\r\\\\n            Directory.CreateDirectory(rootPath + folder.Path);\\\\r\\\\n            foreach (FileObj file in folder.Files)\\\\r\\\\n            \"},{\"Position\":59879,\"NumberToRemove\":54,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllText(rootPath + file.Path, file.Contents);\\\\r\\\\n            }\\\\r\\\\n            foreach (Folder dir in folder.Folders)\\\\r\\\\n            \"},{\"Position\":60042,\"NumberToRemove\":144,\"ContentToAdd\":\"{\\\\r\\\\n                await SetFiles(dir, rootPath);\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<Folder> LoadFiles()\\\\r\\\\n        \"},{\"Position\":60181,\"NumberToRemove\":79,\"ContentToAdd\":\"{\\\\r\\\\n            return await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<Folder> LoadFiles(string path, int charsToRemoveFromPath, string[] excludedDirs, string regex, string rootPath = \\\\\\\"\\\\\\\")\\\\r\\\\n        \"},{\"Position\":60438,\"NumberToRemove\":228,\"ContentToAdd\":\"{\\\\r\\\\n            if (rootPath == \\\\\\\"\\\\\\\")\\\\r\\\\n            \"},{\"Position\":60492,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n                rootPath = path;\\\\r\\\\n            }\\\\r\\\\n            string[] firstCharsRemoved(string[] start, int charsToRem)\\\\r\\\\n            \"},{\"Position\":60636,\"NumberToRemove\":243,\"ContentToAdd\":\"{\\\\r\\\\n                for (int i = 0; i < start.Length; i++)\\\\r\\\\n                \"},{\"Position\":60715,\"NumberToRemove\":78,\"ContentToAdd\":\"{\\\\r\\\\n                    start[i] = start[i].Remove(0, charsToRem);\\\\r\\\\n                }\\\\r\\\\n                return start;\\\\r\\\\n            }\\\\r\\\\n            string[] exceptRegex(string[] array, string regExpression)\\\\r\\\\n            \"},{\"Position\":60943,\"NumberToRemove\":216,\"ContentToAdd\":\"{\\\\r\\\\n                if (regExpression == \\\\\\\"\\\\\\\")\\\\r\\\\n                \"},{\"Position\":61010,\"NumberToRemove\":373,\"ContentToAdd\":\"{\\\\r\\\\n                    return array;\\\\r\\\\n                }\\\\r\\\\n                Regex regexp = new Regex(regExpression);\\\\r\\\\n                var temp = array.ToList();\\\\r\\\\n                for (int i = 0; i < array.Length; i++)\\\\r\\\\n                \"},{\"Position\":61253,\"NumberToRemove\":85,\"ContentToAdd\":\"{\\\\r\\\\n                    if (regexp.IsMatch(array[i]))\\\\r\\\\n                    \"},{\"Position\":61331,\"NumberToRemove\":14,\"ContentToAdd\":\"{\\\\r\\\\n                        temp.Remove(array[i]);\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                return temp.ToArray();\\\\r\\\\n            }\\\\r\\\\n            Folder folder = new Folder()\\\\r\\\\n            \"},{\"Position\":61547,\"NumberToRemove\":389,\"ContentToAdd\":\"{\\\\r\\\\n                Path = path.Remove(0, charsToRemoveFromPath)\\\\r\\\\n            };\\\\r\\\\n            string[] filePaths = exceptRegex(firstCharsRemoved(Directory.GetFiles(path), charsToRemoveFromPath).Except(excludedDirs).ToArray(), regex);\\\\r\\\\n            folder.Files = new FileObj[filePaths.Length];\\\\r\\\\n            for (int i = 0; i < filePaths.Length; i++)\\\\r\\\\n            \"},{\"Position\":61920,\"NumberToRemove\":60,\"ContentToAdd\":\"{\\\\r\\\\n                folder.Files[i] = new FileObj(filePaths[i], File.ReadAllText($\\\\\\\"\"},{\"Position\":62005,\"NumberToRemove\":10,\"ContentToAdd\":\"{rootPath}\\\\\\\\\\\\\\\\\"},{\"Position\":62019,\"NumberToRemove\":206,\"ContentToAdd\":\"{filePaths[i]}\\\\\\\"));\\\\r\\\\n            }\\\\r\\\\n            Regex regextest = new Regex(regex);\\\\r\\\\n            var folderPaths = exceptRegex(firstCharsRemoved(Directory.GetDirectories(path), charsToRemoveFromPath).Except(excludedDirs).ToArray(), regex);\\\\r\\\\n            folder.Folders = new Folder[folderPaths.Length];\\\\r\\\\n\\\\r\\\\n            for (int i = 0; i < folderPaths.Length; i++)\\\\r\\\\n            \"},{\"Position\":62408,\"NumberToRemove\":96,\"ContentToAdd\":\"{\\\\r\\\\n                folder.Folders[i] = await LoadFiles($\\\\\\\"\"},{\"Position\":62468,\"NumberToRemove\":23,\"ContentToAdd\":\"{rootPath}\"},{\"Position\":62478,\"NumberToRemove\":22,\"ContentToAdd\":\"{folderPaths[i]}\\\\\\\", charsToRemoveFromPath, excludedDirs, regex, rootPath);\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            return folder;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        string GetUpdatedFiles(int latestCommit)\\\\r\\\\n        \"},{\"Position\":62684,\"NumberToRemove\":268,\"ContentToAdd\":\"{\\\\r\\\\n            Commit lastCommit = JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":62780,\"NumberToRemove\":73,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":62803,\"NumberToRemove\":30,\"ContentToAdd\":\"{latestCommit % 100}\\\\\\\\\"},{\"Position\":62825,\"NumberToRemove\":22,\"ContentToAdd\":\"{latestCommit / 100}\\\\\\\"));\\\\r\\\\n            return MergeDiffs(lastCommit.Parent == 0 ? \\\\\\\"\\\\\\\" : GetUpdatedFiles(lastCommit.Parent), JsonConvert.DeserializeObject<Diff[]>(lastCommit.Diffs));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task CreateBranch(string name)\\\\r\\\\n        \"},{\"Position\":63093,\"NumberToRemove\":132,\"ContentToAdd\":\"{\\\\r\\\\n            await CreateBranch(name, int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":63166,\"NumberToRemove\":60,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":63196,\"NumberToRemove\":30,\"ContentToAdd\":\"{File.ReadAllText($@\\\\\\\"\"},{\"Position\":63218,\"NumberToRemove\":109,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")}\\\\\\\")));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task CreateBranch(string name, int commitID)\\\\r\\\\n        \"},{\"Position\":63350,\"NumberToRemove\":112,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(() => File.WriteAllText($@\\\\\\\"\"},{\"Position\":63410,\"NumberToRemove\":167,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":63440,\"NumberToRemove\":59,\"ContentToAdd\":\"{name}\\\\\\\", commitID.ToString()));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task Clone(string orig)\\\\r\\\\n        \"},{\"Position\":63549,\"NumberToRemove\":228,\"ContentToAdd\":\"{\\\\r\\\\n            await Clone(Path, orig, true, @\\\\\\\"\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n            await Checkout(File.ReadAllText($@\\\\\\\"\"},{\"Position\":63661,\"NumberToRemove\":67,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task Clone(string path, string orig, bool loadCommits, string dataAdditional = @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n        \"},{\"Position\":63828,\"NumberToRemove\":343,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(async () =>\\\\r\\\\n            \"},{\"Position\":63887,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n                string path2 = path + dataAdditional;\\\\r\\\\n                Directory.CreateDirectory(path2);\\\\r\\\\n                File.WriteAllText(path2 + @\\\\\\\"\\\\\\\\origin\\\\\\\", orig);\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":64115,\"NumberToRemove\":25,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\");\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":64182,\"NumberToRemove\":104,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\");\\\\r\\\\n                var received = await client.GetAsync(Origin + \\\\\\\"/branches\\\\\\\");\\\\r\\\\n                Dictionary<string, int> branches = JsonConvert.DeserializeObject<Dictionary<string, int>>(received.Content.ReadAsStringAsync().Result);\\\\r\\\\n                foreach (string branch in branches.Keys)\\\\r\\\\n                \"},{\"Position\":64525,\"NumberToRemove\":101,\"ContentToAdd\":\"{\\\\r\\\\n                    File.WriteAllText($@\\\\\\\"\"},{\"Position\":64572,\"NumberToRemove\":80,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":64597,\"NumberToRemove\":297,\"ContentToAdd\":\"{branch}\\\\\\\", branches[branch].ToString());\\\\r\\\\n                }\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":64701,\"NumberToRemove\":160,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\HEAD\\\\\\\", branches.Keys.ToArray()[0]);\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":64802,\"NumberToRemove\":61,\"ContentToAdd\":\"{path2}\\\\\\\\commits\\\\\\\");\\\\r\\\\n\\\\r\\\\n                if (loadCommits)\\\\r\\\\n                \"},{\"Position\":64882,\"NumberToRemove\":16,\"ContentToAdd\":\"{\\\\r\\\\n                    await GetAllCommits(path, branches.Keys.ToArray(), dataAdditional);\\\\r\\\\n                }\\\\r\\\\n            });\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async /*Task<Dictionary<int, Commit>>*/ Task GetAllCommits(string path, string[] branches, string extraString = @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n        \"},{\"Position\":65179,\"NumberToRemove\":255,\"ContentToAdd\":\"{\\\\r\\\\n            // Dictionary<int, Commit> allCommits = new Dictionary<int, Commit>();\\\\r\\\\n            for (int i = 0; i < branches.Length; i++)\\\\r\\\\n            \"},{\"Position\":65339,\"NumberToRemove\":44,\"ContentToAdd\":\"{\\\\r\\\\n                var received = await client.GetAsync($\\\\\\\"\"},{\"Position\":65400,\"NumberToRemove\":6,\"ContentToAdd\":\"{Origin}?branch=\"},{\"Position\":65416,\"NumberToRemove\":24,\"ContentToAdd\":\"{branches[i]}\\\\\\\");\\\\r\\\\n                Dictionary<int, Commit> commits = JsonConvert.DeserializeObject<Dictionary<int, Commit>>(received.Content.ReadAsStringAsync().Result);\\\\r\\\\n                for (int j = 0; j < commits.Keys.Count; j++)\\\\r\\\\n                \"},{\"Position\":65671,\"NumberToRemove\":139,\"ContentToAdd\":\"{\\\\r\\\\n                    string path2 = $@\\\\\\\"\"},{\"Position\":65715,\"NumberToRemove\":9,\"ContentToAdd\":\"{path}\"},{\"Position\":65721,\"NumberToRemove\":314,\"ContentToAdd\":\"{extraString}\\\\\\\\commits\\\\\\\\\"},{\"Position\":65745,\"NumberToRemove\":109,\"ContentToAdd\":\"{commits.Keys.ToArray()[j] % 100}\\\\\\\";\\\\r\\\\n                    Directory.CreateDirectory(path2);\\\\r\\\\n                    File.WriteAllText($@\\\\\\\"\"},{\"Position\":65884,\"NumberToRemove\":30,\"ContentToAdd\":\"{path2}\\\\\\\\\"},{\"Position\":65893,\"NumberToRemove\":22,\"ContentToAdd\":\"{commits.Keys.ToArray()[j] / 100}\\\\\\\", JsonConvert.SerializeObject(commits.Values.ToArray()[j]));\\\\r\\\\n                    // allCommits.Add(commits[j].GetHashCode(),commits[j]);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            //return allCommits;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<int> GetHead()\\\\r\\\\n        \"},{\"Position\":66207,\"NumberToRemove\":142,\"ContentToAdd\":\"{\\\\r\\\\n            int result = 0;\\\\r\\\\n            await Task.Run(() => result = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":66316,\"NumberToRemove\":124,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":66346,\"NumberToRemove\":23,\"ContentToAdd\":\"{File.ReadAllText($@\\\\\\\"\"},{\"Position\":66368,\"NumberToRemove\":67,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")}\\\\\\\")));\\\\r\\\\n            return result;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<int> Commit(Commit commit)\\\\r\\\\n        \"},{\"Position\":66510,\"NumberToRemove\":95,\"ContentToAdd\":\"{\\\\r\\\\n            Guid guid = Guid.NewGuid();\\\\r\\\\n            int hash = guid.GetHashCode();\\\\r\\\\n            string path = $@\\\\\\\"\"},{\"Position\":66634,\"NumberToRemove\":8,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":66657,\"NumberToRemove\":254,\"ContentToAdd\":\"{hash % 100}\\\\\\\";\\\\r\\\\n            await Task.Run(() =>\\\\r\\\\n            \"},{\"Position\":66724,\"NumberToRemove\":230,\"ContentToAdd\":\"{\\\\r\\\\n                Directory.CreateDirectory(path);\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":66819,\"NumberToRemove\":54,\"ContentToAdd\":\"{path}\\\\\\\\\"},{\"Position\":66827,\"NumberToRemove\":477,\"ContentToAdd\":\"{hash / 100}\\\\\\\", JsonConvert.SerializeObject(commit));\\\\r\\\\n            });\\\\r\\\\n            return hash;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task Commit(string author, string committer, string diffs, string message, int parentId, DateTime dateTime)\\\\r\\\\n        \"},{\"Position\":67081,\"NumberToRemove\":66,\"ContentToAdd\":\"{\\\\r\\\\n            await Commit(new Commit(diffs, message, author, committer, parentId, dateTime));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task Commit(string message, string author, string committer, DateTime dateTime)\\\\r\\\\n        \"},{\"Position\":67311,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n            if (dateTime == null)\\\\r\\\\n            \"},{\"Position\":67365,\"NumberToRemove\":122,\"ContentToAdd\":\"{\\\\r\\\\n                dateTime = DateTime.Now;\\\\r\\\\n            }\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            Commit commitToCommit = new Commit(JsonConvert.SerializeObject(await GetDiffs(GetUpdatedFiles(head), JsonConvert.SerializeObject(await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex)))), message, author, committer, head, dateTime);\\\\r\\\\n            int specialHash = await Commit(commitToCommit);\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":67842,\"NumberToRemove\":54,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            File.WriteAllText($@\\\\\\\"\"},{\"Position\":67938,\"NumberToRemove\":59,\"ContentToAdd\":\"{branch}\\\\\\\", specialHash.ToString());\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task DeleteBranch(string branch)\\\\r\\\\n        \"},{\"Position\":68060,\"NumberToRemove\":9,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(() => File.Delete($@\\\\\\\"\"},{\"Position\":68114,\"NumberToRemove\":160,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":68144,\"NumberToRemove\":478,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            //await client.DeleteAsync($\\\\\\\"\"},{\"Position\":68203,\"NumberToRemove\":219,\"ContentToAdd\":\"{Origin}/\"},{\"Position\":68212,\"NumberToRemove\":30,\"ContentToAdd\":\"{branch}\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        //TODO: Detect uncommitted changes or out-of-date repo\\\\r\\\\n        async Task<bool> UncommittedChanges()\\\\r\\\\n        \"},{\"Position\":68372,\"NumberToRemove\":74,\"ContentToAdd\":\"{\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            return (await GetDiffs(GetUpdatedFiles(head), JsonConvert.SerializeObject(await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex)))).Length != 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Describes whether or not a branch can be pushed without causing merge conflicts.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        async Task<bool> CanPush(string branch)\\\\r\\\\n        \"},{\"Position\":68850,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool canPush = false;\\\\r\\\\n            int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":69069,\"NumberToRemove\":120,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":69099,\"NumberToRemove\":214,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":69173,\"NumberToRemove\":219,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":69198,\"NumberToRemove\":30,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) == branch2)\\\\r\\\\n            \"},{\"Position\":69318,\"NumberToRemove\":74,\"ContentToAdd\":\"{\\\\r\\\\n                canPush = true;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return canPush;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        async Task<bool> CanPull(string branch)\\\\r\\\\n        \"},{\"Position\":69532,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool canPull = false;\\\\r\\\\n            int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":69751,\"NumberToRemove\":120,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":69781,\"NumberToRemove\":215,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":69855,\"NumberToRemove\":210,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":69880,\"NumberToRemove\":205,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) == branch1)\\\\r\\\\n            \"},{\"Position\":70000,\"NumberToRemove\":141,\"ContentToAdd\":\"{\\\\r\\\\n                canPull = true;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return canPull;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        int CommonAncestor(int commit1, int commit2)\\\\r\\\\n        \"},{\"Position\":70215,\"NumberToRemove\":72,\"ContentToAdd\":\"{\\\\r\\\\n            return CommonAncestor(commit1, commit2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        int CommonAncestor(int commit1, int commit2, string path1, string path2)\\\\r\\\\n        \"},{\"Position\":70425,\"NumberToRemove\":139,\"ContentToAdd\":\"{\\\\r\\\\n            int commit2Start = commit2;\\\\r\\\\n            Commit cmit = GetCommit(commit1, path1);\\\\r\\\\n            Commit cmit2Strt = GetCommit(commit2, path2);\\\\r\\\\n            while (true)\\\\r\\\\n            \"},{\"Position\":70630,\"NumberToRemove\":252,\"ContentToAdd\":\"{\\\\r\\\\n                Commit cmit2 = cmit2Strt;\\\\r\\\\n                commit2 = commit2Start;\\\\r\\\\n                while (true)\\\\r\\\\n                \"},{\"Position\":70771,\"NumberToRemove\":274,\"ContentToAdd\":\"{\\\\r\\\\n                    if (commit2 == commit1)\\\\r\\\\n                    \"},{\"Position\":70843,\"NumberToRemove\":83,\"ContentToAdd\":\"{\\\\r\\\\n                        return commit2;\\\\r\\\\n                    }\\\\r\\\\n                    if (cmit2.Parent == 0)\\\\r\\\\n                    \"},{\"Position\":70982,\"NumberToRemove\":20,\"ContentToAdd\":\"{\\\\r\\\\n                        break;\\\\r\\\\n                    }\\\\r\\\\n                    commit2 = cmit2.Parent;\\\\r\\\\n                    cmit2 = GetCommit(cmit2.Parent, path2);\\\\r\\\\n                }\\\\r\\\\n                if (cmit.Parent == 0)\\\\r\\\\n                \"},{\"Position\":71234,\"NumberToRemove\":12,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                commit1 = cmit.Parent;\\\\r\\\\n                cmit = GetCommit(cmit.Parent, path1);\\\\r\\\\n            }\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        Commit GetCommit(int id, string pvcPath)\\\\r\\\\n        \"},{\"Position\":71508,\"NumberToRemove\":364,\"ContentToAdd\":\"{\\\\r\\\\n            return JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":71591,\"NumberToRemove\":212,\"ContentToAdd\":\"{pvcPath}\\\\\\\\commits\\\\\\\\\"},{\"Position\":71611,\"NumberToRemove\":63,\"ContentToAdd\":\"{id % 100}\\\\\\\\\"},{\"Position\":71623,\"NumberToRemove\":133,\"ContentToAdd\":\"{id / 100}\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Pushes committed changes.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <param name=\\\\\\\"branchToPush\\\\\\\">The branch to push. If empty, pushes all branches.</param>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<Dictionary<string, PushResult>> Push(string branchToPush = \\\\\\\"\\\\\\\")\\\\r\\\\n        \"},{\"Position\":71987,\"NumberToRemove\":242,\"ContentToAdd\":\"{\\\\r\\\\n            var results = new Dictionary<string, PushResult>();\\\\r\\\\n            HttpStatusCode responseCode = HttpStatusCode.InternalServerError;\\\\r\\\\n            if (await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":72199,\"NumberToRemove\":74,\"ContentToAdd\":\"{\\\\r\\\\n                return new Dictionary<string, PushResult> \"},{\"Position\":72262,\"NumberToRemove\":52,\"ContentToAdd\":\"{ [await GetCurrentBranch()] = PushResult.Uncommited_Changes };\\\\r\\\\n            }\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":72395,\"NumberToRemove\":105,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool allValid = true;\\\\r\\\\n            if (branchToPush == \\\\\\\"\\\\\\\")\\\\r\\\\n            \"},{\"Position\":72637,\"NumberToRemove\":134,\"ContentToAdd\":\"{\\\\r\\\\n                foreach (string path in Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":72711,\"NumberToRemove\":152,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":72763,\"NumberToRemove\":66,\"ContentToAdd\":\"{\\\\r\\\\n                    if (!await checkValid(path.Remove(0, Path.Length + 19)))\\\\r\\\\n                    \"},{\"Position\":72868,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                        break;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":73002,\"NumberToRemove\":58,\"ContentToAdd\":\"{\\\\r\\\\n                await checkValid(branchToPush);\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            async Task<bool> checkValid(string branchCheck)\\\\r\\\\n            \"},{\"Position\":73154,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":73220,\"NumberToRemove\":37,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":73250,\"NumberToRemove\":70,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                if (File.Exists($@\\\\\\\"\"},{\"Position\":73333,\"NumberToRemove\":141,\"ContentToAdd\":\"{branchCheck}\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":73370,\"NumberToRemove\":318,\"ContentToAdd\":\"{\\\\r\\\\n                    int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":73440,\"NumberToRemove\":66,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":73465,\"NumberToRemove\":78,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) != branch2)\\\\r\\\\n                    \"},{\"Position\":73606,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n                        allValid = false;\\\\r\\\\n                        results.Add(branchCheck.Remove(0, 1), PushResult.Conflict);\\\\r\\\\n                        return false;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                return true;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            if (allValid)\\\\r\\\\n            \"},{\"Position\":73924,\"NumberToRemove\":170,\"ContentToAdd\":\"{\\\\r\\\\n                if (branchToPush == \\\\\\\"\\\\\\\")\\\\r\\\\n                \"},{\"Position\":73990,\"NumberToRemove\":158,\"ContentToAdd\":\"{\\\\r\\\\n                    foreach (string path in Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":74068,\"NumberToRemove\":70,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n                    \"},{\"Position\":74124,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                        await PushBranch(path.Remove(0, Path.Length + 19));\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                else\\\\r\\\\n                \"},{\"Position\":74294,\"NumberToRemove\":105,\"ContentToAdd\":\"{\\\\r\\\\n                    await PushBranch(branchToPush);\\\\r\\\\n                }\\\\r\\\\n                async Task PushBranch(string branchCheck)\\\\r\\\\n                \"},{\"Position\":74452,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                    int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":74522,\"NumberToRemove\":41,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":74552,\"NumberToRemove\":74,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    int commonAncestor;\\\\r\\\\n                    if (File.Exists($@\\\\\\\"\"},{\"Position\":74682,\"NumberToRemove\":200,\"ContentToAdd\":\"{branchCheck}\\\\\\\"))\\\\r\\\\n                    \"},{\"Position\":74723,\"NumberToRemove\":141,\"ContentToAdd\":\"{\\\\r\\\\n                        int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":74797,\"NumberToRemove\":30,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":74822,\"NumberToRemove\":186,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                        commonAncestor = CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2);\\\\r\\\\n                    }\\\\r\\\\n                    else\\\\r\\\\n                    \"},{\"Position\":75022,\"NumberToRemove\":116,\"ContentToAdd\":\"{\\\\r\\\\n                        commonAncestor = 0;\\\\r\\\\n                    }\\\\r\\\\n                    int commit = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":75163,\"NumberToRemove\":23,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":75193,\"NumberToRemove\":16,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    Dictionary<int, Commit> commits = new Dictionary<int, Commit>();\\\\r\\\\n                    while (commit != commonAncestor)\\\\r\\\\n                    \"},{\"Position\":75379,\"NumberToRemove\":275,\"ContentToAdd\":\"{\\\\r\\\\n                        Commit commitInCommitForm = JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":75495,\"NumberToRemove\":9,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":75518,\"NumberToRemove\":408,\"ContentToAdd\":\"{commit % 100}\\\\\\\\\"},{\"Position\":75534,\"NumberToRemove\":60,\"ContentToAdd\":\"{commit / 100}\\\\\\\"));\\\\r\\\\n                        commits.Add(commit, commitInCommitForm);\\\\r\\\\n                        commit = commitInCommitForm.Parent;\\\\r\\\\n                    }\\\\r\\\\n                    commits.Reverse();\\\\r\\\\n                    var response = client.PutAsync($\\\\\\\"\"},{\"Position\":75809,\"NumberToRemove\":842,\"ContentToAdd\":\"{Origin}/\"},{\"Position\":75818,\"NumberToRemove\":85,\"ContentToAdd\":\"{branchCheck}\\\\\\\", new StringContent(JsonConvert.SerializeObject((User, commits)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n                    results.Add(branchCheck.Remove(0, 1), await FromResponseCode(response.Result.StatusCode));\\\\r\\\\n                    await response;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            async Task<PushResult> FromResponseCode(HttpStatusCode statusCode)\\\\r\\\\n            \"},{\"Position\":76226,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n                switch (statusCode)\\\\r\\\\n                \"},{\"Position\":76286,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n                    case HttpStatusCode.OK:\\\\r\\\\n                        return PushResult.Success;\\\\r\\\\n                    case HttpStatusCode.Unauthorized:\\\\r\\\\n                        return PushResult.Authentication_Error;\\\\r\\\\n                    case HttpStatusCode.BadRequest:\\\\r\\\\n                        return PushResult.Bad_Request;\\\\r\\\\n                    case HttpStatusCode.Accepted:\\\\r\\\\n                        return PushResult.Up_to_Date;\\\\r\\\\n                    default:\\\\r\\\\n                        return PushResult.No_Response_From_Server;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return results;\\\\r\\\\n            //await client.PostAsync(Origin, new StringContent(JsonConvert.SerializeObject(commit), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":77128,\"NumberToRemove\":82,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\RegisterResult.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":77213,\"NumberToRemove\":77,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":77269,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n        public enum RegisterResult\\\\r\\\\n        \"},{\"Position\":77320,\"NumberToRemove\":43,\"ContentToAdd\":\"{\\\\r\\\\n            Success,\\\\r\\\\n            Failure\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":77402,\"NumberToRemove\":171,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Status.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":77479,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":77535,\"NumberToRemove\":219,\"ContentToAdd\":\"{\\\\r\\\\n        public enum Status\\\\r\\\\n        \"},{\"Position\":77578,\"NumberToRemove\":94,\"ContentToAdd\":\"{\\\\r\\\\n            Uncommitted_Changes,\\\\r\\\\n            Ahead_of_Origin,\\\\r\\\\n            Behind_Origin,\\\\r\\\\n            Up_to_Date\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":77749,\"NumberToRemove\":68,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\.pvcignore\\\",\\\"Contents\\\":\\\"R: bin|vs|obj|(packages$)\\\\r\\\\n\\\"},\"},{\"Position\":77816,\"NumberToRemove\":108,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient.sln\\\",\\\"Contents\\\":\\\"Microsoft Visual Studio Solution File, Format Version 12.00\\\\r\\\\n# Visual Studio 15\\\\r\\\\nVisualStudioVersion = 15.0.27004.2005\\\\r\\\\nMinimumVisualStudioVersion = 10.0.40219.1\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":78035,\"NumberToRemove\":68,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCClient\\\\\\\", \\\\\\\"PVCClient\\\\\\\\PVCClient.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":78129,\"NumberToRemove\":109,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":78197,\"NumberToRemove\":302,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCPipeLibrary\\\\\\\", \\\\\\\"PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":78305,\"NumberToRemove\":86,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":78373,\"NumberToRemove\":84,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCCommandLine\\\\\\\", \\\\\\\"PVCCommandLine\\\\\\\\PVCCommandLine.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":78482,\"NumberToRemove\":90,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nGlobal\\\\r\\\\n\\\\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\\\\r\\\\n\\\\t\\\\tDebug|Any CPU = Debug|Any CPU\\\\r\\\\n\\\\t\\\\tRelease|Any CPU = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":78784,\"NumberToRemove\":88,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":78870,\"NumberToRemove\":86,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":78954,\"NumberToRemove\":84,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":79044,\"NumberToRemove\":90,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":79132,\"NumberToRemove\":88,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":79218,\"NumberToRemove\":86,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":79302,\"NumberToRemove\":84,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":79392,\"NumberToRemove\":90,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":79480,\"NumberToRemove\":288,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":79566,\"NumberToRemove\":80,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":79650,\"NumberToRemove\":245,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":79740,\"NumberToRemove\":0,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(SolutionProperties) = preSolution\\\\r\\\\n\\\\t\\\\tHideSolutionNode = FALSE\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ExtensibilityGlobals) = postSolution\\\\r\\\\n\\\\t\\\\tSolutionGuid = \"},{\"Position\":80028,\"NumberToRemove\":0,\"ContentToAdd\":\"{78911CB1-A8D8-4CCA-BCF1-C4390A8F96AE}\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\nEndGlobal\\\\r\\\\n\\\"}]}\"}]","Parent":-25458141,"Message":"Test.","Author":"penguinee232","Committer":"penguinee232","DateAndTime":"2018-12-08T16:19:19.518973-08:00"}