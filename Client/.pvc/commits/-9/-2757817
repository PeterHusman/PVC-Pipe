{"Diffs":"[{\"Position\":9151,\"NumberToRemove\":228,\"ContentToAdd\":\"{\\\\r\\\\n                                Console.WriteLine(\\\\\\\" - \\\\\\\" + s);\\\\r\\\\n                            }\\\\r\\\\n                        }\\\\r\\\\n                    },\\\\r\\\\n                    [\\\\\\\"help\\\\\\\"] = () =>\\\\r\\\\n                    \"},{\"Position\":9916,\"NumberToRemove\":292,\"ContentToAdd\":\"{help[s]}\\\\\\\");\\\\r\\\\n                                }\\\\r\\\\n                            }\\\\r\\\\n                            return Task.CompletedTask;\\\\r\\\\n                        }\\\\r\\\\n                    },\\\\r\\\\n                    [\\\\\\\"status\\\\\\\"] = async () => Console.WriteLine((await interf.GetStatus(parameters.Length > 1 ? parameters[1] : File.ReadAllText($@\\\\\\\"\"},{\"Position\":11756,\"NumberToRemove\":292,\"ContentToAdd\":\"{ ' ' }, StringSplitOptions.RemoveEmptyEntries)),\\\\r\\\\n                    [\\\\\\\"ignoreR\\\\\\\"] = async () => await interf.SetIgnoredRegex(input.Remove(0, 8)),\\\\r\\\\n                    [\\\\\\\"redraw\\\\\\\"] = async () => await RedrawCommand(account, path, cmds2),\\\\r\\\\n                    [\\\\\\\"home\\\\\\\"] = () => \"},{\"Position\":12042,\"NumberToRemove\":90,\"ContentToAdd\":\"{ home = true; return Task.CompletedTask; },\\\\r\\\\n                    [\\\\\\\"login\\\\\\\"] = async () =>\\\\r\\\\n                    \"},{\"Position\":19003,\"NumberToRemove\":532,\"ContentToAdd\":\"{ password = password.Remove(password.Length - 1); }\\\\r\\\\n                            break;\\\\r\\\\n                        case ConsoleKey.Enter: break;\\\\r\\\\n                        default:\\\\r\\\\n                            password += key.KeyChar; break;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            while (key.Key != ConsoleKey.Enter);\\\\r\\\\n            return password;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public static Task ReDraw(string path, Dictionary<string, Func<Task>> cmds, string username)\\\\r\\\\n        \"},{\"Position\":19883,\"NumberToRemove\":105,\"ContentToAdd\":\"{\\\\r\\\\n                Console.WriteLine(\\\\\\\"\\\\\\\\t\\\\\\\" + cmd);\\\\r\\\\n            }\\\\r\\\\n            return Task.CompletedTask;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":26705,\"NumberToRemove\":384,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\Program.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.IO;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Net;\\\\r\\\\nusing System.Security;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing McMaster.Extensions.CommandLineUtils;\\\\r\\\\nusing PVCPipeLibrary;\\\\r\\\\nusing CredentialManagement;\\\\r\\\\nusing System.ComponentModel.DataAnnotations;\\\\r\\\\nusing static PVCPipeLibrary.PVCServerInterface;\\\\r\\\\n\\\\r\\\\nnamespace PVCCommandLine\\\\r\\\\n\"},{\"Position\":27188,\"NumberToRemove\":232,\"ContentToAdd\":\"{\\\\r\\\\n    [Command(\\\\\\\"pvc\\\\\\\")]\\\\r\\\\n    [Subcommand(\\\\\\\"commit\\\\\\\", typeof(CommitCommand))]\\\\r\\\\n    [Subcommand(\\\\\\\"login\\\\\\\", typeof(LogInCommand))]\\\\r\\\\n    [Subcommand(\\\\\\\"logout\\\\\\\", typeof(LogOutCommand))]\\\\r\\\\n    [Subcommand(\\\\\\\"clone\\\\\\\", typeof(CloneCommand))]\\\\r\\\\n    [Subcommand(\\\\\\\"pull\\\\\\\", typeof(PullCommand))]\\\\r\\\\n    [Subcommand(\\\\\\\"push\\\\\\\", typeof(PushCommand))]\\\\r\\\\n    [Subcommand(\\\\\\\"branch\\\\\\\", typeof(BranchCommand))]\\\\r\\\\n    class PVC : PVCCommandBase\\\\r\\\\n    \"},{\"Position\":27630,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n\\\\r\\\\n        //public static IEnumerable<int> items(int param)\\\\r\\\\n        //\"},{\"Position\":27710,\"NumberToRemove\":358,\"ContentToAdd\":\"{\\\\r\\\\n        //   if (param > 42)\\\\r\\\\n        //    \"},{\"Position\":27761,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n        //        throw new InvalidOperationException();\\\\r\\\\n        //    }\\\\r\\\\n\\\\r\\\\n        //    IEnumerable<int> itemsInternal()\\\\r\\\\n        //    \"},{\"Position\":27913,\"NumberToRemove\":80,\"ContentToAdd\":\"{\\\\r\\\\n        //        yield return 42;\\\\r\\\\n        //    }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        //    return itemsInternal();\\\\r\\\\n        //}\\\\r\\\\n\\\\r\\\\n        //static Task ThisThrows(int param)\\\\r\\\\n        //\"},{\"Position\":28100,\"NumberToRemove\":219,\"ContentToAdd\":\"{\\\\r\\\\n        //    if (param > 42)\\\\r\\\\n        //    \"},{\"Position\":28152,\"NumberToRemove\":32,\"ContentToAdd\":\"{\\\\r\\\\n        //        throw new InvalidOperationException(\\\\\\\"Don't call this\\\\\\\");\\\\r\\\\n        //    }\\\\r\\\\n\\\\r\\\\n        //    async Task ThisThrowsInternal()\\\\r\\\\n        //    \"},{\"Position\":28322,\"NumberToRemove\":170,\"ContentToAdd\":\"{\\\\r\\\\n        //        await Task.Delay(500);\\\\r\\\\n        //        await Task.Delay(800);\\\\r\\\\n        //    }\\\\r\\\\n\\\\r\\\\n        //    return ThisThrowsInternal();\\\\r\\\\n        //}\\\\r\\\\n\\\\r\\\\n        //static async Task ThisThrowsAsync(int param)\\\\r\\\\n        //\"},{\"Position\":28571,\"NumberToRemove\":44,\"ContentToAdd\":\"{\\\\r\\\\n        //    if (param > 42)\\\\r\\\\n        //    \"},{\"Position\":28623,\"NumberToRemove\":292,\"ContentToAdd\":\"{\\\\r\\\\n        //        throw new InvalidOperationException(\\\\\\\"Don't call this\\\\\\\");\\\\r\\\\n        //    }\\\\r\\\\n        //    await Task.Delay(500);\\\\r\\\\n        //}\\\\r\\\\n\\\\r\\\\n        static async Task Main(string[] args)\\\\r\\\\n        \"},{\"Position\":28842,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\\r\\\\n            await CommandLineApplication.ExecuteAsync<PVC>(args);\\\\r\\\\n            Console.ReadKey();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        //https://github.com/natemcmaster/CommandLineUtils/blob/master/docs/samples/subcommands/inheritance/Program.cs\\\\r\\\\n        //CredentialCache\\\\r\\\\n        //NetworkCredential\\\\r\\\\n\\\\r\\\\n        public Credential GetCredential()\\\\r\\\\n        \"},{\"Position\":29206,\"NumberToRemove\":141,\"ContentToAdd\":\"{\\\\r\\\\n            Credential credential = new Credential \"},{\"Position\":29262,\"NumberToRemove\":137,\"ContentToAdd\":\"{ Target = \\\\\\\"pvc-pipe\\\\\\\" };\\\\r\\\\n            if (!credential.Load())\\\\r\\\\n            \"},{\"Position\":29343,\"NumberToRemove\":107,\"ContentToAdd\":\"{\\\\r\\\\n                Creds = null;\\\\r\\\\n                return Creds;\\\\r\\\\n            }\\\\r\\\\n            Creds = credential;\\\\r\\\\n            return Creds;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public void DeleteCredential()\\\\r\\\\n        \"},{\"Position\":29562,\"NumberToRemove\":219,\"ContentToAdd\":\"{\\\\r\\\\n            new Credential \"},{\"Position\":29594,\"NumberToRemove\":32,\"ContentToAdd\":\"{ Target = \\\\\\\"pvc-pipe\\\\\\\" }.Delete();\\\\r\\\\n            Creds = null;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public Credential SetCredential(string username, string password)\\\\r\\\\n        \"},{\"Position\":29764,\"NumberToRemove\":82,\"ContentToAdd\":\"{\\\\r\\\\n\\\\r\\\\n            Creds = new Credential \"},{\"Position\":29808,\"NumberToRemove\":223,\"ContentToAdd\":\"{ Target = \\\\\\\"pvc-pipe\\\\\\\", Username = username, Password = password, PersistanceType = PersistanceType.LocalComputer };\\\\r\\\\n            Creds.Save();\\\\r\\\\n            return Creds;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [Option(\\\\\\\"--dir=<path>\\\\\\\")]\\\\r\\\\n        [DirectoryExists]\\\\r\\\\n        public string PVCDir \"},{\"Position\":30100,\"NumberToRemove\":232,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        //public string Command \"},{\"Position\":30153,\"NumberToRemove\":32,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public Credential Creds;\\\\r\\\\n\\\\r\\\\n        public PVCServerInterface CreateInterface()\\\\r\\\\n        \"},{\"Position\":30277,\"NumberToRemove\":82,\"ContentToAdd\":\"{\\\\r\\\\n            return new PVCServerInterface(string.IsNullOrEmpty(PVCDir) ? Directory.GetCurrentDirectory() : PVCDir);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        protected override Task<int> OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":30509,\"NumberToRemove\":222,\"ContentToAdd\":\"{\\\\r\\\\n            app.ShowHelp();\\\\r\\\\n            return Task.FromResult(0);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public override List<string> CreateArgs()\\\\r\\\\n        \"},{\"Position\":30665,\"NumberToRemove\":328,\"ContentToAdd\":\"{\\\\r\\\\n            List<string> args = new List<string>();\\\\r\\\\n            if (PVCDir != null)\\\\r\\\\n            \"},{\"Position\":30772,\"NumberToRemove\":66,\"ContentToAdd\":\"{\\\\r\\\\n                args.Add(\\\\\\\"--dir=\\\\\\\" + PVCDir);\\\\r\\\\n            }\\\\r\\\\n            return args;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    [Command(Description = \\\\\\\"Create a branch\\\\\\\")]\\\\r\\\\n    class BranchCommand : PVCCommandBase\\\\r\\\\n    \"},{\"Position\":30998,\"NumberToRemove\":117,\"ContentToAdd\":\"{\\\\r\\\\n        private PVC Parent \"},{\"Position\":31030,\"NumberToRemove\":112,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        [Required]\\\\r\\\\n        [Option()]\\\\r\\\\n        public string Branch \"},{\"Position\":31124,\"NumberToRemove\":599,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        [Option(\\\\\\\"--id\\\\\\\")]\\\\r\\\\n        public int CommitId \"},{\"Position\":31203,\"NumberToRemove\":67,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public override List<string> CreateArgs()\\\\r\\\\n        \"},{\"Position\":31285,\"NumberToRemove\":78,\"ContentToAdd\":\"{\\\\r\\\\n            var args = Parent.CreateArgs();\\\\r\\\\n            args.Add(\\\\\\\"branch\\\\\\\");\\\\r\\\\n            if(Branch != null)\\\\r\\\\n            \"},{\"Position\":31420,\"NumberToRemove\":48,\"ContentToAdd\":\"{\\\\r\\\\n                args.Add(Branch);\\\\r\\\\n            }\\\\r\\\\n            if(CommitId > 0)\\\\r\\\\n            \"},{\"Position\":31523,\"NumberToRemove\":82,\"ContentToAdd\":\"{\\\\r\\\\n                args.Add(\\\\\\\"--id\\\\\\\");\\\\r\\\\n                args.Add(CommitId.ToString());\\\\r\\\\n            }\\\\r\\\\n            return args;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        protected override async Task<int> OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":31776,\"NumberToRemove\":145,\"ContentToAdd\":\"{\\\\r\\\\n            var interf = Parent.CreateInterface();\\\\r\\\\n            if (CommitId <= 0)\\\\r\\\\n            \"},{\"Position\":31881,\"NumberToRemove\":143,\"ContentToAdd\":\"{\\\\r\\\\n                await interf.CreateBranch(Branch, CommitId);\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":31999,\"NumberToRemove\":221,\"ContentToAdd\":\"{\\\\r\\\\n                await interf.CreateBranch(Branch);\\\\r\\\\n            }\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n    [Command(Description = \\\\\\\"Sign out\\\\\\\")]\\\\r\\\\n    class LogOutCommand : PVCCommandBase\\\\r\\\\n    \"},{\"Position\":32227,\"NumberToRemove\":470,\"ContentToAdd\":\"{\\\\r\\\\n        private PVC Parent \"},{\"Position\":32259,\"NumberToRemove\":183,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public override List<string> CreateArgs()\\\\r\\\\n        \"},{\"Position\":32341,\"NumberToRemove\":66,\"ContentToAdd\":\"{\\\\r\\\\n            List<string> args = Parent.CreateArgs();\\\\r\\\\n            args.Add(\\\\\\\"logout\\\\\\\");\\\\r\\\\n            return args;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        protected override Task<int> OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":32575,\"NumberToRemove\":446,\"ContentToAdd\":\"{\\\\r\\\\n            Parent.DeleteCredential();\\\\r\\\\n            return Task.FromResult(0);\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    [Command(Description = \\\\\\\"Pull the repository\\\\\\\")]\\\\r\\\\n    class PullCommand : PVCCommandBase\\\\r\\\\n    \"},{\"Position\":32792,\"NumberToRemove\":159,\"ContentToAdd\":\"{\\\\r\\\\n        private PVC Parent \"},{\"Position\":32824,\"NumberToRemove\":202,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public override List<string> CreateArgs()\\\\r\\\\n        \"},{\"Position\":32906,\"NumberToRemove\":597,\"ContentToAdd\":\"{\\\\r\\\\n            var args = Parent.CreateArgs();\\\\r\\\\n            args.Add(\\\\\\\"pull\\\\\\\");\\\\r\\\\n            return args;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        protected override async Task<int> OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":33135,\"NumberToRemove\":3276,\"ContentToAdd\":\"{\\\\r\\\\n            var interf = Parent.CreateInterface();\\\\r\\\\n            Console.WriteLine((await interf.Pull()).ToString().Replace('_', ' '));\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    [Command(Description = \\\\\\\"Push the repository\\\\\\\")]\\\\r\\\\n    class PushCommand : PVCCommandBase\\\\r\\\\n    \"},{\"Position\":33433,\"NumberToRemove\":221,\"ContentToAdd\":\"{\\\\r\\\\n        private PVC Parent \"},{\"Position\":33465,\"NumberToRemove\":380,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        [Option(\\\\\\\"-b\\\\\\\")]\\\\r\\\\n        public string Branch \"},{\"Position\":33543,\"NumberToRemove\":37,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public override List<string> CreateArgs()\\\\r\\\\n        \"},{\"Position\":33625,\"NumberToRemove\":60,\"ContentToAdd\":\"{\\\\r\\\\n            var args = Parent.CreateArgs();\\\\r\\\\n            args.Add(\\\\\\\"push\\\\\\\");\\\\r\\\\n            if (Branch != null)\\\\r\\\\n            \"},{\"Position\":33759,\"NumberToRemove\":1607,\"ContentToAdd\":\"{\\\\r\\\\n                args.Add(\\\\\\\"-b\\\\\\\");\\\\r\\\\n                args.Add(Branch);\\\\r\\\\n            }\\\\r\\\\n            return args;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        protected override async Task<int> OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":33997,\"NumberToRemove\":78,\"ContentToAdd\":\"{\\\\r\\\\n            var interf = Parent.CreateInterface();\\\\r\\\\n            Parent.GetCredential();\\\\r\\\\n            if(Parent.Creds == null)\\\\r\\\\n            \"},{\"Position\":34147,\"NumberToRemove\":37,\"ContentToAdd\":\"{\\\\r\\\\n                Console.WriteLine(\\\\\\\"You must log in to push.\\\\\\\");\\\\r\\\\n                return 0;\\\\r\\\\n            }\\\\r\\\\n            Dictionary<string, PushResult> resp;\\\\r\\\\n            interf.User = new Account(Parent.Creds.Username, Parent.Creds.Password);\\\\r\\\\n            if (string.IsNullOrEmpty(Branch))\\\\r\\\\n            \"},{\"Position\":34467,\"NumberToRemove\":143,\"ContentToAdd\":\"{\\\\r\\\\n                resp = await interf.Push();\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":34568,\"NumberToRemove\":107,\"ContentToAdd\":\"{\\\\r\\\\n                resp = await interf.Push(Branch);\\\\r\\\\n            }\\\\r\\\\n            foreach (string s in resp.Keys)\\\\r\\\\n            \"},{\"Position\":34702,\"NumberToRemove\":212,\"ContentToAdd\":\"{\\\\r\\\\n                Console.WriteLine(s + \\\\\\\": \\\\\\\" + resp[s].ToString().Replace(\\\\\\\"_\\\\\\\", \\\\\\\" \\\\\\\"));\\\\r\\\\n            }\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    [Command(Description = \\\\\\\"Sign in. Only authenticates when a command which requires an account is run\\\\\\\")]\\\\r\\\\n    class LogInCommand : PVCCommandBase\\\\r\\\\n    \"},{\"Position\":35027,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n        private PVC Parent \"},{\"Position\":35059,\"NumberToRemove\":33,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public override List<string> CreateArgs()\\\\r\\\\n        \"},{\"Position\":35141,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n            List<string> args = Parent.CreateArgs();\\\\r\\\\n            args.Add(\\\\\\\"login\\\\\\\");\\\\r\\\\n            return args;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        protected override Task<int> OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":35374,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n            Console.Write(\\\\\\\"Username: \\\\\\\");\\\\r\\\\n            string username = Console.ReadLine();\\\\r\\\\n            Console.Write(\\\\\\\"Password: \\\\\\\");\\\\r\\\\n            string password = \\\\\\\"\\\\\\\";\\\\r\\\\n            ConsoleKeyInfo key = new ConsoleKeyInfo('\\\\\\\\x008', ConsoleKey.Backspace, false, false, false);\\\\r\\\\n            do\\\\r\\\\n            \"},{\"Position\":35702,\"NumberToRemove\":50,\"ContentToAdd\":\"{\\\\r\\\\n                if (Console.KeyAvailable)\\\\r\\\\n                \"},{\"Position\":35768,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\\r\\\\n                    key = Console.ReadKey(true);\\\\r\\\\n                    switch (key.Key)\\\\r\\\\n                    \"},{\"Position\":35885,\"NumberToRemove\":57,\"ContentToAdd\":\"{\\\\r\\\\n                        case ConsoleKey.Backspace:\\\\r\\\\n                            if (password.Length > 0) \"},{\"Position\":35997,\"NumberToRemove\":148,\"ContentToAdd\":\"{ password = password.Remove(password.Length - 1); }\\\\r\\\\n                            break;\\\\r\\\\n                        case ConsoleKey.Enter: break;\\\\r\\\\n                        default:\\\\r\\\\n                            password += key.KeyChar; break;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            while (key.Key != ConsoleKey.Enter);\\\\r\\\\n            Console.WriteLine();\\\\r\\\\n            Parent.SetCredential(username, password);\\\\r\\\\n            return Task.FromResult(0);\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    [Command(Description = \\\\\\\"Clone from a repository\\\\\\\")]\\\\r\\\\n    class CloneCommand : PVCCommandBase\\\\r\\\\n    \"},{\"Position\":36630,\"NumberToRemove\":240,\"ContentToAdd\":\"{\\\\r\\\\n        private PVC Parent \"},{\"Position\":36662,\"NumberToRemove\":302,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        [Url]\\\\r\\\\n        [Required]\\\\r\\\\n        [Option()]\\\\r\\\\n        public string Origin \"},{\"Position\":36773,\"NumberToRemove\":81,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public override List<string> CreateArgs()\\\\r\\\\n        \"},{\"Position\":36855,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n            List<string> args = Parent.CreateArgs();\\\\r\\\\n            args.Add(\\\\\\\"clone\\\\\\\");\\\\r\\\\n            if (Origin != null)\\\\r\\\\n            \"},{\"Position\":36999,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n                args.Add(Origin);\\\\r\\\\n            }\\\\r\\\\n            return args;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        protected override async Task<int> OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":37200,\"NumberToRemove\":129,\"ContentToAdd\":\"{\\\\r\\\\n            PVCServerInterface interf = new PVCServerInterface(string.IsNullOrEmpty(Parent.PVCDir) ? Directory.GetCurrentDirectory() : Parent.PVCDir);\\\\r\\\\n            if (string.IsNullOrEmpty(Origin))\\\\r\\\\n            \"},{\"Position\":37420,\"NumberToRemove\":81,\"ContentToAdd\":\"{\\\\r\\\\n                Console.WriteLine(\\\\\\\"The --origin field is required.\\\\\\\");\\\\r\\\\n                return 1;\\\\r\\\\n            }\\\\r\\\\n            await interf.Clone(Origin);\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    [Command(Description = \\\\\\\"Commit changes to a repository\\\\\\\")]\\\\r\\\\n    class CommitCommand : PVCCommandBase\\\\r\\\\n    \"},{\"Position\":37755,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n\\\\r\\\\n        [Option(\\\\\\\"-m\\\\\\\")]\\\\r\\\\n        public string Message \"},{\"Position\":37822,\"NumberToRemove\":47,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        [Option(\\\\\\\"-a\\\\\\\")]\\\\r\\\\n        public string Author \"},{\"Position\":37900,\"NumberToRemove\":254,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        private PVC Parent \"},{\"Position\":37948,\"NumberToRemove\":596,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public override List<string> CreateArgs()\\\\r\\\\n        \"},{\"Position\":38030,\"NumberToRemove\":2660,\"ContentToAdd\":\"{\\\\r\\\\n            List<string> args = Parent.CreateArgs();\\\\r\\\\n            args.Add(\\\\\\\"commit\\\\\\\");\\\\r\\\\n            if (Message != null)\\\\r\\\\n            \"},{\"Position\":38176,\"NumberToRemove\":358,\"ContentToAdd\":\"{\\\\r\\\\n                args.Add(\\\\\\\"-m\\\\\\\");\\\\r\\\\n                args.Add(Message);\\\\r\\\\n            }\\\\r\\\\n            if (Author != null)\\\\r\\\\n            \"},{\"Position\":38320,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n                args.Add(\\\\\\\"-a\\\\\\\");\\\\r\\\\n                args.Add(Author);\\\\r\\\\n            }\\\\r\\\\n            return args;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        protected override async Task<int> OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":38558,\"NumberToRemove\":37,\"ContentToAdd\":\"{\\\\r\\\\n            PVCServerInterface interf = new PVCServerInterface(string.IsNullOrEmpty(Parent.PVCDir) ? Directory.GetCurrentDirectory() : Parent.PVCDir);\\\\r\\\\n            var message = app.Option(\\\\\\\"-m <MESSAGE>\\\\\\\", \\\\\\\"The message\\\\\\\", CommandOptionType.SingleValue);\\\\r\\\\n            var author = app.Option(\\\\\\\"-a <AUTHOR>\\\\\\\", \\\\\\\"The author\\\\\\\", CommandOptionType.SingleValue);\\\\r\\\\n            Parent.GetCredential();\\\\r\\\\n            if (string.IsNullOrEmpty(Message))\\\\r\\\\n            \"},{\"Position\":39029,\"NumberToRemove\":165,\"ContentToAdd\":\"{\\\\r\\\\n                Console.WriteLine(\\\\\\\"A commit must have a message.\\\\\\\");\\\\r\\\\n                return 0;\\\\r\\\\n            }\\\\r\\\\n            if (string.IsNullOrEmpty(Author))\\\\r\\\\n            \"},{\"Position\":39214,\"NumberToRemove\":155,\"ContentToAdd\":\"{\\\\r\\\\n                if (Parent.Creds == null)\\\\r\\\\n                \"},{\"Position\":39280,\"NumberToRemove\":145,\"ContentToAdd\":\"{\\\\r\\\\n                    Console.WriteLine(\\\\\\\"A commit must have an author. This can be specified either by using the -a option or by logging in.\\\\\\\");\\\\r\\\\n                    return 0;\\\\r\\\\n                }\\\\r\\\\n                Author = Parent.Creds.Username;\\\\r\\\\n            }\\\\r\\\\n            await interf.Commit(Message, Author, Author, DateTime.Now);\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    [HelpOption(\\\\\\\"--help\\\\\\\")]\\\\r\\\\n    abstract class PVCCommandBase\\\\r\\\\n    \"},{\"Position\":39753,\"NumberToRemove\":202,\"ContentToAdd\":\"{\\\\r\\\\n        public abstract List<string> CreateArgs();\\\\r\\\\n\\\\r\\\\n        protected virtual Task<int> OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":39906,\"NumberToRemove\":189,\"ContentToAdd\":\"{\\\\r\\\\n            var args = CreateArgs();\\\\r\\\\n\\\\r\\\\n            Console.WriteLine(\\\\\\\"Result = pvc \\\\\\\" + ArgumentEscaper.EscapeAndConcatenate(args));\\\\r\\\\n            return Task.FromResult(0);\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":40125,\"NumberToRemove\":85,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\PVCCommandLine.csproj\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<Project ToolsVersion=\\\\\\\"15.0\\\\\\\" xmlns=\\\\\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\\\\\">\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props\\\\\\\" Condition=\\\\\\\"Exists('$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props')\\\\\\\" />\\\\r\\\\n  <PropertyGroup>\\\\r\\\\n    <Configuration Condition=\\\\\\\" '$(Configuration)' == '' \\\\\\\">Debug</Configuration>\\\\r\\\\n    <Platform Condition=\\\\\\\" '$(Platform)' == '' \\\\\\\">AnyCPU</Platform>\\\\r\\\\n    <ProjectGuid>\"},{\"Position\":40722,\"NumberToRemove\":45,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}</ProjectGuid>\\\\r\\\\n    <OutputType>Exe</OutputType>\\\\r\\\\n    <RootNamespace>PVCCommandLine</RootNamespace>\\\\r\\\\n    <AssemblyName>PVCCommandLine</AssemblyName>\\\\r\\\\n    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>\\\\r\\\\n    <FileAlignment>512</FileAlignment>\\\\r\\\\n    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>\\\\r\\\\n    <Deterministic>true</Deterministic>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \\\\\\\">\\\\r\\\\n    <PlatformTarget>AnyCPU</PlatformTarget>\\\\r\\\\n    <DebugSymbols>true</DebugSymbols>\\\\r\\\\n    <DebugType>full</DebugType>\\\\r\\\\n    <Optimize>false</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Debug\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n    <LangVersion>7.3</LangVersion>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \\\\\\\">\\\\r\\\\n    <PlatformTarget>AnyCPU</PlatformTarget>\\\\r\\\\n    <DebugType>pdbonly</DebugType>\\\\r\\\\n    <Optimize>true</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Release\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Reference Include=\\\\\\\"CredentialManagement, Version=1.0.2.0, Culture=neutral, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\CredentialManagement.1.0.2\\\\\\\\lib\\\\\\\\net35\\\\\\\\CredentialManagement.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"McMaster.Extensions.CommandLineUtils, Version=2.2.5.0, Culture=neutral, PublicKeyToken=6f71cb76b82f055d, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\McMaster.Extensions.CommandLineUtils.2.2.5\\\\\\\\lib\\\\\\\\net45\\\\\\\\McMaster.Extensions.CommandLineUtils.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\Newtonsoft.Json.12.0.1\\\\\\\\lib\\\\\\\\net45\\\\\\\\Newtonsoft.Json.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ComponentModel.DataAnnotations\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Core\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\System.ValueTuple.4.5.0\\\\\\\\lib\\\\\\\\net461\\\\\\\\System.ValueTuple.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml.Linq\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data.DataSetExtensions\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"Microsoft.CSharp\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Net.Http\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Compile Include=\\\\\\\"Program.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Properties\\\\\\\\AssemblyInfo.cs\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <None Include=\\\\\\\"App.config\\\\\\\" />\\\\r\\\\n    <None Include=\\\\\\\"packages.config\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <ProjectReference Include=\\\\\\\"..\\\\\\\\PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\\\\\">\\\\r\\\\n      <Project>\"},{\"Position\":43998,\"NumberToRemove\":113,\"ContentToAdd\":\"{3671d7ca-1c5e-469d-9266-8e3617330b7b}</Project>\\\\r\\\\n      <Name>PVCPipeLibrary</Name>\\\\r\\\\n    </ProjectReference>\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildToolsPath)\\\\\\\\Microsoft.CSharp.targets\\\\\\\" />\\\\r\\\\n</Project>\\\"},\"},{\"Position\":44219,\"NumberToRemove\":62,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\PVCCommandLine.csproj.user\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<Project ToolsVersion=\\\\\\\"15.0\\\\\\\" xmlns=\\\\\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\\\\\">\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\"'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'\\\\\\\">\\\\r\\\\n    <StartArguments>--help</StartArguments>\\\\r\\\\n    <RemoteDebugEnabled>false</RemoteDebugEnabled>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n</Project>\\\"}]},\"},{\"Position\":44651,\"NumberToRemove\":111,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\",\\\"Folders\\\":[\"},{\"Position\":44688,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Properties\\\",\\\"Folders\\\":[],\\\"Files\\\":[\"},{\"Position\":44748,\"NumberToRemove\":185,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Properties\\\\\\\\AssemblyInfo.cs\\\",\\\"Contents\\\":\\\"using System.Reflection;\\\\r\\\\nusing System.Runtime.CompilerServices;\\\\r\\\\nusing System.Runtime.InteropServices;\\\\r\\\\n\\\\r\\\\n// General Information about an assembly is controlled through the following\\\\r\\\\n// set of attributes. Change these attribute values to modify the information\\\\r\\\\n// associated with an assembly.\\\\r\\\\n[assembly: AssemblyTitle(\\\\\\\"PVCPipeClient\\\\\\\")]\\\\r\\\\n[assembly: AssemblyDescription(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyConfiguration(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCompany(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyProduct(\\\\\\\"PVCPipeClient\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCopyright(\\\\\\\"Copyright ©  2018\\\\\\\")]\\\\r\\\\n[assembly: AssemblyTrademark(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCulture(\\\\\\\"\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Setting ComVisible to false makes the types in this assembly not visible\\\\r\\\\n// to COM components.  If you need to access a type in this assembly from\\\\r\\\\n// COM, set the ComVisible attribute to true on that type.\\\\r\\\\n[assembly: ComVisible(false)]\\\\r\\\\n\\\\r\\\\n// The following GUID is for the ID of the typelib if this project is exposed to COM\\\\r\\\\n[assembly: Guid(\\\\\\\"3671d7ca-1c5e-469d-9266-8e3617330b7b\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Version information for an assembly consists of the following four values:\\\\r\\\\n//\\\\r\\\\n//      Major Version\\\\r\\\\n//      Minor Version\\\\r\\\\n//      Build Number\\\\r\\\\n//      Revision\\\\r\\\\n//\\\\r\\\\n// You can specify all the values or you can default the Build and Revision Numbers\\\\r\\\\n// by using the '*' as shown below:\\\\r\\\\n// [assembly: AssemblyVersion(\\\\\\\"1.0.*\\\\\\\")]\\\\r\\\\n[assembly: AssemblyVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n[assembly: AssemblyFileVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":46355,\"NumberToRemove\":105,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Account.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":46433,\"NumberToRemove\":290,\"ContentToAdd\":\"{\\\\r\\\\n    public class Account\\\\r\\\\n    \"},{\"Position\":46470,\"NumberToRemove\":59,\"ContentToAdd\":\"{\\\\r\\\\n        public string Username;\\\\r\\\\n        public string Password;\\\\r\\\\n        public Account(string username, string password)\\\\r\\\\n        \"},{\"Position\":46613,\"NumberToRemove\":86,\"ContentToAdd\":\"{\\\\r\\\\n            Username = username;\\\\r\\\\n            Password = password;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":46720,\"NumberToRemove\":41,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Commit.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\n\\\\r\\\\nnamespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":46932,\"NumberToRemove\":122,\"ContentToAdd\":\"{\\\\r\\\\n    public class Commit\\\\r\\\\n    \"},{\"Position\":46968,\"NumberToRemove\":42,\"ContentToAdd\":\"{\\\\r\\\\n        public string Diffs \"},{\"Position\":47001,\"NumberToRemove\":229,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public int Parent \"},{\"Position\":47048,\"NumberToRemove\":244,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Message \"},{\"Position\":47099,\"NumberToRemove\":77,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Author \"},{\"Position\":47149,\"NumberToRemove\":277,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Committer \"},{\"Position\":47202,\"NumberToRemove\":218,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public DateTime DateAndTime \"},{\"Position\":47259,\"NumberToRemove\":315,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public Commit(string diffs, string message, string author, string committer, int parent, DateTime dateTime)\\\\r\\\\n        \"},{\"Position\":47407,\"NumberToRemove\":144,\"ContentToAdd\":\"{\\\\r\\\\n            Diffs = diffs;\\\\r\\\\n            Message = message;\\\\r\\\\n            Author = author;\\\\r\\\\n            Committer = committer;\\\\r\\\\n            Parent = parent;\\\\r\\\\n            DateAndTime = dateTime;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":47647,\"NumberToRemove\":282,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\packages.config\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<packages>\\\\r\\\\n  <package id=\\\\\\\"Newtonsoft.Json\\\\\\\" version=\\\\\\\"12.0.1\\\\\\\" targetFramework=\\\\\\\"net461\\\\\\\" />\\\\r\\\\n  <package id=\\\\\\\"System.ValueTuple\\\\\\\" version=\\\\\\\"4.5.0\\\\\\\" targetFramework=\\\\\\\"net461\\\\\\\" />\\\\r\\\\n</packages>\\\"},\"},{\"Position\":47949,\"NumberToRemove\":71,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PullResult.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":48030,\"NumberToRemove\":239,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":48086,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n        public enum PullResult\\\\r\\\\n        \"},{\"Position\":48133,\"NumberToRemove\":49,\"ContentToAdd\":\"{\\\\r\\\\n            Success = 0,\\\\r\\\\n            Uncommitted_Changes,\\\\r\\\\n            Merge_Conflict\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":48262,\"NumberToRemove\":89,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PushResult.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":48343,\"NumberToRemove\":69,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":48399,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n        public enum PushResult\\\\r\\\\n        \"},{\"Position\":48446,\"NumberToRemove\":42,\"ContentToAdd\":\"{\\\\r\\\\n            Success = 0,\\\\r\\\\n            Uncommited_Changes,\\\\r\\\\n            Conflict,\\\\r\\\\n            Authentication_Error,\\\\r\\\\n            Bad_Request,\\\\r\\\\n            No_Response_From_Server,\\\\r\\\\n            Up_to_Date\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":48700,\"NumberToRemove\":42,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<Project ToolsVersion=\\\\\\\"15.0\\\\\\\" xmlns=\\\\\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\\\\\">\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props\\\\\\\" Condition=\\\\\\\"Exists('$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props')\\\\\\\" />\\\\r\\\\n  <PropertyGroup>\\\\r\\\\n    <Configuration Condition=\\\\\\\" '$(Configuration)' == '' \\\\\\\">Debug</Configuration>\\\\r\\\\n    <Platform Condition=\\\\\\\" '$(Platform)' == '' \\\\\\\">AnyCPU</Platform>\\\\r\\\\n    <ProjectGuid>\"},{\"Position\":49296,\"NumberToRemove\":45,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}</ProjectGuid>\\\\r\\\\n    <OutputType>Library</OutputType>\\\\r\\\\n    <AppDesignerFolder>Properties</AppDesignerFolder>\\\\r\\\\n    <RootNamespace>PVCPipeClient</RootNamespace>\\\\r\\\\n    <AssemblyName>PVCPipeClient</AssemblyName>\\\\r\\\\n    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>\\\\r\\\\n    <FileAlignment>512</FileAlignment>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \\\\\\\">\\\\r\\\\n    <DebugSymbols>true</DebugSymbols>\\\\r\\\\n    <DebugType>full</DebugType>\\\\r\\\\n    <Optimize>false</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Debug\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \\\\\\\">\\\\r\\\\n    <DebugType>pdbonly</DebugType>\\\\r\\\\n    <Optimize>true</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Release\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Reference Include=\\\\\\\"Newtonsoft.Json, Version=12.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\Newtonsoft.Json.12.0.1\\\\\\\\lib\\\\\\\\net45\\\\\\\\Newtonsoft.Json.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Core\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\System.ValueTuple.4.5.0\\\\\\\\lib\\\\\\\\net461\\\\\\\\System.ValueTuple.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml.Linq\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data.DataSetExtensions\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"Microsoft.CSharp\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Net.Http\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Compile Include=\\\\\\\"Account.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Commit.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Properties\\\\\\\\AssemblyInfo.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"PullResult.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"PushResult.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"PVCServerInterface.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"RegisterResult.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Status.cs\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <None Include=\\\\\\\"packages.config\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildToolsPath)\\\\\\\\Microsoft.CSharp.targets\\\\\\\" />\\\\r\\\\n</Project>\\\"},\"},{\"Position\":51956,\"NumberToRemove\":98,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PVCServerInterface.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.IO;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Net;\\\\r\\\\nusing System.Net.Http;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Text.RegularExpressions;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing Newtonsoft.Json;\\\\r\\\\n\\\\r\\\\nnamespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":52314,\"NumberToRemove\":307,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":52370,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n        class Folder\\\\r\\\\n        \"},{\"Position\":52407,\"NumberToRemove\":246,\"ContentToAdd\":\"{\\\\r\\\\n            public string Path;\\\\r\\\\n            public Folder[] Folders;\\\\r\\\\n            public FileObj[] Files;\\\\r\\\\n        }\\\\r\\\\n        class FileObj\\\\r\\\\n        \"},{\"Position\":52572,\"NumberToRemove\":100,\"ContentToAdd\":\"{\\\\r\\\\n            public string Path;\\\\r\\\\n            public string Contents;\\\\r\\\\n\\\\r\\\\n            public FileObj(string path, string contents)\\\\r\\\\n            \"},{\"Position\":52727,\"NumberToRemove\":61,\"ContentToAdd\":\"{\\\\r\\\\n                Path = path;\\\\r\\\\n                Contents = contents;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        class Diff\\\\r\\\\n        \"},{\"Position\":52872,\"NumberToRemove\":121,\"ContentToAdd\":\"{\\\\r\\\\n            public int Position;\\\\r\\\\n            public int NumberToRemove;\\\\r\\\\n            public string ContentToAdd;\\\\r\\\\n            public Diff(int pos, int numToRem, string toAdd)\\\\r\\\\n            \"},{\"Position\":53074,\"NumberToRemove\":111,\"ContentToAdd\":\"{\\\\r\\\\n                Position = pos;\\\\r\\\\n                NumberToRemove = numToRem;\\\\r\\\\n                ContentToAdd = toAdd;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public Account User \"},{\"Position\":53263,\"NumberToRemove\":38,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public Task<string> GetCurrentBranch()\\\\r\\\\n        \"},{\"Position\":53342,\"NumberToRemove\":43,\"ContentToAdd\":\"{\\\\r\\\\n            var result = File.ReadAllText($@\\\\\\\"\"},{\"Position\":53393,\"NumberToRemove\":146,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            return Task.FromResult(result);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public Task<string[]> GetAllBranches()\\\\r\\\\n        \"},{\"Position\":53547,\"NumberToRemove\":216,\"ContentToAdd\":\"{\\\\r\\\\n            string[] temp = Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":53609,\"NumberToRemove\":120,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\").ToArray();\\\\r\\\\n            for (int i = 0; i < temp.Length; i++)\\\\r\\\\n            \"},{\"Position\":53720,\"NumberToRemove\":41,\"ContentToAdd\":\"{\\\\r\\\\n                temp[i] = temp[i].Remove(0, $@\\\\\\\"\"},{\"Position\":53773,\"NumberToRemove\":131,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\\\\\\\".Length);\\\\r\\\\n            }\\\\r\\\\n            return Task.FromResult(temp);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        Task<Diff[]> GetDiffs(string left, string right)\\\\r\\\\n        \"},{\"Position\":53969,\"NumberToRemove\":37,\"ContentToAdd\":\"{\\\\r\\\\n            List<Diff> diffs = new List<Diff>();\\\\r\\\\n            //await Task.Run(() =>\\\\r\\\\n            //\"},{\"Position\":54078,\"NumberToRemove\":38,\"ContentToAdd\":\"{\\\\r\\\\n                //Try checking each character of right against left until there is a mismatch. Then maybe recursive call on shortened file?\\\\r\\\\n                //New strat: For now, trying out comparing lines. Check line against line\\\\r\\\\n                string[] leftLines = left.Split('\"},{\"Position\":54368,\"NumberToRemove\":44,\"ContentToAdd\":\"{');\\\\r\\\\n                string[] rightLines = right.Split('\"},{\"Position\":54427,\"NumberToRemove\":44,\"ContentToAdd\":\"{');\\\\r\\\\n                for (int i = 1; i < leftLines.Length; i++)\\\\r\\\\n                \"},{\"Position\":54513,\"NumberToRemove\":136,\"ContentToAdd\":\"{\\\\r\\\\n                    leftLines[i] = '\"},{\"Position\":54554,\"NumberToRemove\":74,\"ContentToAdd\":\"{' + leftLines[i];\\\\r\\\\n                }\\\\r\\\\n                for (int i = 1; i < rightLines.Length; i++)\\\\r\\\\n                \"},{\"Position\":54676,\"NumberToRemove\":46,\"ContentToAdd\":\"{\\\\r\\\\n                    rightLines[i] = '\"},{\"Position\":54718,\"NumberToRemove\":52,\"ContentToAdd\":\"{' + rightLines[i];\\\\r\\\\n                }\\\\r\\\\n                int loopLength = leftLines.Length > rightLines.Length ? leftLines.Length : rightLines.Length;\\\\r\\\\n                for (int i = 0; i < loopLength; i++)\\\\r\\\\n                \"},{\"Position\":54947,\"NumberToRemove\":99,\"ContentToAdd\":\"{\\\\r\\\\n                    string strLeft = i < leftLines.Length ? leftLines[i] : null;\\\\r\\\\n                    string strRight = i < rightLines.Length ? rightLines[i] : null;\\\\r\\\\n                    if (strLeft != strRight)\\\\r\\\\n                    \"},{\"Position\":55191,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n                        if (strLeft == null)\\\\r\\\\n                        \"},{\"Position\":55268,\"NumberToRemove\":148,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, leftLines.Length) + cumulativeLength(rightLines, i, leftLines.Length), 0, strRight));\\\\r\\\\n                        }\\\\r\\\\n                        else if (strRight == null)\\\\r\\\\n                        \"},{\"Position\":55545,\"NumberToRemove\":585,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, rightLines.Length), leftLines[i].Length, \\\\\\\"\\\\\\\"));\\\\r\\\\n                        }\\\\r\\\\n                        else\\\\r\\\\n                        \"},{\"Position\":55763,\"NumberToRemove\":431,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, i), leftLines[i].Length, strRight));\\\\r\\\\n                        }\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                int cumulativeLength(string[] array, int endingIndexPlusOne, int startingIndex = 0)\\\\r\\\\n                \"},{\"Position\":56078,\"NumberToRemove\":432,\"ContentToAdd\":\"{\\\\r\\\\n                    int cumLen = 0;\\\\r\\\\n                    for (int i = startingIndex; i < endingIndexPlusOne; i++)\\\\r\\\\n                    \"},{\"Position\":56222,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n                        cumLen += array[i].Length;\\\\r\\\\n                    }\\\\r\\\\n                    return cumLen;\\\\r\\\\n                }\\\\r\\\\n            //});\\\\r\\\\n            return Task.FromResult(diffs.ToArray());\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        string MergeDiffs(string left, Diff[] diffs)\\\\r\\\\n        \"},{\"Position\":56523,\"NumberToRemove\":18,\"ContentToAdd\":\"{\\\\r\\\\n            for (int i = 0; i < diffs.Length; i++)\\\\r\\\\n            \"},{\"Position\":56594,\"NumberToRemove\":255,\"ContentToAdd\":\"{\\\\r\\\\n                left = left.Remove(diffs[i].Position, diffs[i].NumberToRemove).Insert(diffs[i].Position, diffs[i].ContentToAdd);\\\\r\\\\n            }\\\\r\\\\n            return left;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public string Origin\\\\r\\\\n        \"},{\"Position\":56833,\"NumberToRemove\":566,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":56869,\"NumberToRemove\":94,\"ContentToAdd\":\"{\\\\r\\\\n                return File.ReadAllText($@\\\\\\\"\"},{\"Position\":56918,\"NumberToRemove\":116,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\origin\\\\\\\");\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public string Path \"},{\"Position\":57007,\"NumberToRemove\":172,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string[] IgnoredPaths\\\\r\\\\n        \"},{\"Position\":57076,\"NumberToRemove\":436,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":57112,\"NumberToRemove\":66,\"ContentToAdd\":\"{\\\\r\\\\n                if (!File.Exists($@\\\\\\\"\"},{\"Position\":57154,\"NumberToRemove\":30,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":57196,\"NumberToRemove\":110,\"ContentToAdd\":\"{\\\\r\\\\n                    return new string[] \"},{\"Position\":57241,\"NumberToRemove\":246,\"ContentToAdd\":\"{ @\\\\\\\"\\\\\\\\.pvc\\\\\\\" };\\\\r\\\\n                }\\\\r\\\\n                string[] igPaths = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":57339,\"NumberToRemove\":96,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n                string[] igPaths2 = new string[igPaths.Length + 1];\\\\r\\\\n                igPaths.CopyTo(igPaths2, 1);\\\\r\\\\n                igPaths2[0] = @\\\\\\\"\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n                return igPaths2;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public string IgnoredRegex\\\\r\\\\n        \"},{\"Position\":57646,\"NumberToRemove\":247,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":57682,\"NumberToRemove\":262,\"ContentToAdd\":\"{\\\\r\\\\n                return IgnoredPaths.Length > 1 ? (IgnoredPaths[1].StartsWith(\\\\\\\"R: \\\\\\\") ? IgnoredPaths[1].Remove(0, 3) : \\\\\\\"\\\\\\\") : \\\\\\\"\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        public Task SetIgnoredRegex(string regexToIgnore)\\\\r\\\\n        \"},{\"Position\":57922,\"NumberToRemove\":96,\"ContentToAdd\":\"{\\\\r\\\\n            if (IgnoredPaths.Length > 1 && IgnoredPaths[1].StartsWith(\\\\\\\"R: \\\\\\\"))\\\\r\\\\n            \"},{\"Position\":58022,\"NumberToRemove\":339,\"ContentToAdd\":\"{\\\\r\\\\n                string[] linesa = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":58083,\"NumberToRemove\":64,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n                linesa[0] = \\\\\\\"R: \\\\\\\" + regexToIgnore;\\\\r\\\\n                File.WriteAllLines($@\\\\\\\"\"},{\"Position\":58204,\"NumberToRemove\":133,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", linesa);\\\\r\\\\n                return Task.CompletedTask;\\\\r\\\\n            }\\\\r\\\\n            if (!File.Exists($@\\\\\\\"\"},{\"Position\":58334,\"NumberToRemove\":260,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":58372,\"NumberToRemove\":48,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":58415,\"NumberToRemove\":140,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", \\\\\\\"R: \\\\\\\" + regexToIgnore);\\\\r\\\\n                return Task.CompletedTask;\\\\r\\\\n            }\\\\r\\\\n            string[] lines = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":58580,\"NumberToRemove\":30,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n            string[] lines2 = new string[lines.Length + 1];\\\\r\\\\n            lines.CopyTo(lines2, 1);\\\\r\\\\n            lines2[0] = \\\\\\\"R: \\\\\\\" + regexToIgnore;\\\\r\\\\n            File.WriteAllLines($@\\\\\\\"\"},{\"Position\":58796,\"NumberToRemove\":83,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", lines2);\\\\r\\\\n            return Task.CompletedTask;\\\\r\\\\n        }\\\\r\\\\n        public Task IgnorePaths(string[] pathsToIgnore)\\\\r\\\\n        \"},{\"Position\":58952,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n            File.AppendAllLines($@\\\\\\\"\"},{\"Position\":58993,\"NumberToRemove\":133,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", pathsToIgnore);\\\\r\\\\n            return Task.CompletedTask;\\\\r\\\\n        }\\\\r\\\\n        public Task UnignorePaths(string[] pathsToUnignore)\\\\r\\\\n        \"},{\"Position\":59160,\"NumberToRemove\":155,\"ContentToAdd\":\"{\\\\r\\\\n            if (File.Exists($@\\\\\\\"\"},{\"Position\":59197,\"NumberToRemove\":47,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":59235,\"NumberToRemove\":61,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllLines($@\\\\\\\"\"},{\"Position\":59279,\"NumberToRemove\":61,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", File.ReadAllLines($@\\\\\\\"\"},{\"Position\":59323,\"NumberToRemove\":24,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\").Except(pathsToUnignore));\\\\r\\\\n            }\\\\r\\\\n            return Task.CompletedTask;\\\\r\\\\n        }\\\\r\\\\n        //public Func<string, string, string> GetDiffs \"},{\"Position\":59501,\"NumberToRemove\":308,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Func<string, string, string> MergeDiffs \"},{\"Position\":59575,\"NumberToRemove\":102,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Commit Head \"},{\"Position\":59621,\"NumberToRemove\":108,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Commit[] Branches \"},{\"Position\":59673,\"NumberToRemove\":194,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        HttpClient client;\\\\r\\\\n\\\\r\\\\n        public HttpClient HttpClient\\\\r\\\\n        \"},{\"Position\":59772,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":59808,\"NumberToRemove\":54,\"ContentToAdd\":\"{\\\\r\\\\n                return client;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public PVCServerInterface(/*Commit head,*/ string path)\\\\r\\\\n        \"},{\"Position\":59956,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n            client = new HttpClient();\\\\r\\\\n            //Head = head;\\\\r\\\\n            Path = path;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Registers the account specified in the User property of this client-server interface at the specified URL and with the specified recovery email.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <param name=\\\\\\\"registerURL\\\\\\\"></param>\\\\r\\\\n        /// <param name=\\\\\\\"recoveryEmail\\\\\\\"></param>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<RegisterResult> RegisterAccount(string registerURL, string recoveryEmail)\\\\r\\\\n        \"},{\"Position\":60541,\"NumberToRemove\":32,\"ContentToAdd\":\"{\\\\r\\\\n            var registered = await client.PostAsync(registerURL, new StringContent(JsonConvert.SerializeObject((User, recoveryEmail)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return registered.IsSuccessStatusCode ? RegisterResult.Success : RegisterResult.Failure;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<RegisterResult> RegisterAccount(string registerURL, Account account, string recoveryEmail)\\\\r\\\\n        \"},{\"Position\":60972,\"NumberToRemove\":141,\"ContentToAdd\":\"{\\\\r\\\\n            User = account;\\\\r\\\\n            var registered = await client.PostAsync(registerURL, new StringContent(JsonConvert.SerializeObject((User, recoveryEmail)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return registered.IsSuccessStatusCode ? RegisterResult.Success : RegisterResult.Failure;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<bool> ResetPassword(string generalResetURL, string username)\\\\r\\\\n        \"},{\"Position\":61404,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n            var result = await client.PostAsync($\\\\\\\"\"},{\"Position\":61460,\"NumberToRemove\":215,\"ContentToAdd\":\"{generalResetURL}/\"},{\"Position\":61478,\"NumberToRemove\":134,\"ContentToAdd\":\"{username}\\\\\\\", new StringContent(username, Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return result.IsSuccessStatusCode;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<bool> ChangePassword(string passwordChangeURL, string newPassword)\\\\r\\\\n        \"},{\"Position\":61733,\"NumberToRemove\":135,\"ContentToAdd\":\"{\\\\r\\\\n            var result = await client.PostAsync(passwordChangeURL, new StringContent(JsonConvert.SerializeObject((User, newPassword)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return result.IsSuccessStatusCode;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Creates and commits a commit which undoes the changes of the specified commit.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task RevertCommit(string message, string author, string committer, DateTime dateTime, int idToUndo = -1)\\\\r\\\\n        \"},{\"Position\":62299,\"NumberToRemove\":155,\"ContentToAdd\":\"{\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            if(idToUndo == -1)\\\\r\\\\n            \"},{\"Position\":62393,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n                idToUndo = head;\\\\r\\\\n            }\\\\r\\\\n            Commit commitToUndo = GetCommit(idToUndo, $@\\\\\\\"\"},{\"Position\":62509,\"NumberToRemove\":203,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n            Diff[] diffs = JsonConvert.DeserializeObject<Diff[]>(commitToUndo.Diffs);\\\\r\\\\n            Commit parent = GetCommit(commitToUndo.Parent, $@\\\\\\\"\"},{\"Position\":62681,\"NumberToRemove\":38,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n            string parentFiles = GetUpdatedFiles(commitToUndo.Parent);\\\\r\\\\n            Diff[] undoDiffs = await GetDiffs(MergeDiffs(parentFiles, diffs), parentFiles);\\\\r\\\\n            Commit commitToCommit = new Commit(JsonConvert.SerializeObject(undoDiffs), message, author, committer, head, dateTime);\\\\r\\\\n            int specialHash = await Commit(commitToCommit);\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":63117,\"NumberToRemove\":30,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            File.WriteAllText($@\\\\\\\"\"},{\"Position\":63183,\"NumberToRemove\":58,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":63213,\"NumberToRemove\":109,\"ContentToAdd\":\"{branch}\\\\\\\", specialHash.ToString());\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<Commit[]> Log()\\\\r\\\\n        \"},{\"Position\":63323,\"NumberToRemove\":102,\"ContentToAdd\":\"{\\\\r\\\\n            List<Commit> ret = new List<Commit>();\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            string path2 = Path + \\\\\\\"\\\\\\\\\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n            Commit temp = GetCommit(head, path2);\\\\r\\\\n            while (true)\\\\r\\\\n            \"},{\"Position\":63569,\"NumberToRemove\":80,\"ContentToAdd\":\"{\\\\r\\\\n                ret.Add(temp);\\\\r\\\\n                if (temp.Parent == 0)\\\\r\\\\n                \"},{\"Position\":63665,\"NumberToRemove\":199,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                temp = GetCommit(temp.Parent, path2);\\\\r\\\\n            }\\\\r\\\\n            return ret.ToArray();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<Commit[]> Log(int number)\\\\r\\\\n        \"},{\"Position\":63912,\"NumberToRemove\":106,\"ContentToAdd\":\"{\\\\r\\\\n            Commit[] ret = new Commit[number];\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            string path2 = Path + \\\\\\\"\\\\\\\\\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n            Commit temp = GetCommit(head, path2);\\\\r\\\\n            for (int i = 0; i < number; i++)\\\\r\\\\n            \"},{\"Position\":64174,\"NumberToRemove\":156,\"ContentToAdd\":\"{\\\\r\\\\n                ret[i] = temp;\\\\r\\\\n                if (temp.Parent == 0)\\\\r\\\\n                \"},{\"Position\":64270,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                temp = GetCommit(temp.Parent, path2);\\\\r\\\\n            }\\\\r\\\\n            return ret;\\\\r\\\\n\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// WIP\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<PullResult> Pull()\\\\r\\\\n        \"},{\"Position\":64609,\"NumberToRemove\":161,\"ContentToAdd\":\"{\\\\r\\\\n            if (await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":64673,\"NumberToRemove\":137,\"ContentToAdd\":\"{\\\\r\\\\n                return PullResult.Uncommitted_Changes;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":64806,\"NumberToRemove\":163,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool allValid = true;\\\\r\\\\n            foreach (string path in Directory.EnumerateDirectories($@\\\\\\\"\"},{\"Position\":65066,\"NumberToRemove\":139,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":65114,\"NumberToRemove\":257,\"ContentToAdd\":\"{\\\\r\\\\n                string branchCheck = path.Remove(0, Path.Length + 19);\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":65254,\"NumberToRemove\":54,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":65284,\"NumberToRemove\":144,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":65367,\"NumberToRemove\":79,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":65392,\"NumberToRemove\":228,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) != branch1)\\\\r\\\\n                \"},{\"Position\":65525,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n                    allValid = false;\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            if (allValid)\\\\r\\\\n            \"},{\"Position\":65680,\"NumberToRemove\":243,\"ContentToAdd\":\"{\\\\r\\\\n                Directory.Move(path2, $@\\\\\\\"\"},{\"Position\":65727,\"NumberToRemove\":78,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcTemp\\\\\\\");\\\\r\\\\n                Directory.Delete($@\\\\\\\"\"},{\"Position\":65788,\"NumberToRemove\":216,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\", true);\\\\r\\\\n                Directory.Move($@\\\\\\\"\"},{\"Position\":65849,\"NumberToRemove\":373,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcTemp\\\\\\\", $@\\\\\\\"\"},{\"Position\":65873,\"NumberToRemove\":85,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n                await Checkout(branch);\\\\r\\\\n                return PullResult.Success;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return PullResult.Merge_Conflict;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<Status> GetStatus(string branch)\\\\r\\\\n        \"},{\"Position\":66181,\"NumberToRemove\":14,\"ContentToAdd\":\"{\\\\r\\\\n            if (branch == await GetCurrentBranch() && await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":66283,\"NumberToRemove\":389,\"ContentToAdd\":\"{\\\\r\\\\n                return Status.Uncommitted_Changes;\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":66391,\"NumberToRemove\":60,\"ContentToAdd\":\"{\\\\r\\\\n                string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n                await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":66585,\"NumberToRemove\":10,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":66615,\"NumberToRemove\":206,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n                if (!File.Exists($@\\\\\\\"\"},{\"Position\":66669,\"NumberToRemove\":96,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":66694,\"NumberToRemove\":23,\"ContentToAdd\":\"{branch}\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":66726,\"NumberToRemove\":22,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Ahead_of_Origin;\\\\r\\\\n                }\\\\r\\\\n                int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":66867,\"NumberToRemove\":268,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":66892,\"NumberToRemove\":73,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n                int ca = CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2);\\\\r\\\\n                Directory.Delete(path2, true);\\\\r\\\\n                if (branch1 == branch2)\\\\r\\\\n                \"},{\"Position\":67107,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Up_to_Date;\\\\r\\\\n                }\\\\r\\\\n                else if (ca == branch1)\\\\r\\\\n                \"},{\"Position\":67241,\"NumberToRemove\":22,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Behind_Origin;\\\\r\\\\n                }\\\\r\\\\n                else//(ca == branch2)\\\\r\\\\n                \"},{\"Position\":67376,\"NumberToRemove\":132,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Ahead_of_Origin;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            //else if (await CanPush(File.ReadAllText($@\\\\\\\"\"},{\"Position\":67531,\"NumberToRemove\":60,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")))\\\\r\\\\n            //\"},{\"Position\":67578,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n            //    return Status.Up_to_Date;\\\\r\\\\n            //}\\\\r\\\\n            //return Status.Out_of_Date;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        public async Task<bool> Checkout(string branch)\\\\r\\\\n        \"},{\"Position\":67781,\"NumberToRemove\":109,\"ContentToAdd\":\"{\\\\r\\\\n            if (!File.Exists($@\\\\\\\"\"},{\"Position\":67819,\"NumberToRemove\":112,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":67849,\"NumberToRemove\":167,\"ContentToAdd\":\"{branch}\\\\\\\") || await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":67907,\"NumberToRemove\":59,\"ContentToAdd\":\"{\\\\r\\\\n                return false;\\\\r\\\\n            }\\\\r\\\\n            await Task.Run(async () =>\\\\r\\\\n            \"},{\"Position\":68016,\"NumberToRemove\":228,\"ContentToAdd\":\"{\\\\r\\\\n                foreach (string path in Directory.EnumerateDirectories(Path))\\\\r\\\\n                \"},{\"Position\":68118,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n                    if (path != Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n                    \"},{\"Position\":68198,\"NumberToRemove\":343,\"ContentToAdd\":\"{\\\\r\\\\n                        Directory.Delete(path, true);\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                foreach (string path in Directory.EnumerateFiles(Path))\\\\r\\\\n                \"},{\"Position\":68397,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n                    File.Delete(path);\\\\r\\\\n                }\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":68503,\"NumberToRemove\":25,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\", branch);\\\\r\\\\n                await SetFiles(JsonConvert.DeserializeObject<Folder>(GetUpdatedFiles(int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":68659,\"NumberToRemove\":104,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":68689,\"NumberToRemove\":101,\"ContentToAdd\":\"{branch}\\\\\\\")))), Path);\\\\r\\\\n            });\\\\r\\\\n            return true;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task SetFiles(Folder folder, string rootPath)\\\\r\\\\n        \"},{\"Position\":68850,\"NumberToRemove\":80,\"ContentToAdd\":\"{\\\\r\\\\n            Directory.CreateDirectory(rootPath + folder.Path);\\\\r\\\\n            foreach (FileObj file in folder.Files)\\\\r\\\\n            \"},{\"Position\":68987,\"NumberToRemove\":297,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllText(rootPath + file.Path, file.Contents);\\\\r\\\\n            }\\\\r\\\\n            foreach (Folder dir in folder.Folders)\\\\r\\\\n            \"},{\"Position\":69150,\"NumberToRemove\":160,\"ContentToAdd\":\"{\\\\r\\\\n                await SetFiles(dir, rootPath);\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<Folder> LoadFiles()\\\\r\\\\n        \"},{\"Position\":69289,\"NumberToRemove\":61,\"ContentToAdd\":\"{\\\\r\\\\n            return await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<Folder> LoadFiles(string path, int charsToRemoveFromPath, string[] excludedDirs, string regex, string rootPath = \\\\\\\"\\\\\\\")\\\\r\\\\n        \"},{\"Position\":69546,\"NumberToRemove\":16,\"ContentToAdd\":\"{\\\\r\\\\n            if (rootPath == \\\\\\\"\\\\\\\")\\\\r\\\\n            \"},{\"Position\":69600,\"NumberToRemove\":255,\"ContentToAdd\":\"{\\\\r\\\\n                rootPath = path;\\\\r\\\\n            }\\\\r\\\\n            string[] firstCharsRemoved(string[] start, int charsToRem)\\\\r\\\\n            \"},{\"Position\":69744,\"NumberToRemove\":44,\"ContentToAdd\":\"{\\\\r\\\\n                for (int i = 0; i < start.Length; i++)\\\\r\\\\n                \"},{\"Position\":69823,\"NumberToRemove\":6,\"ContentToAdd\":\"{\\\\r\\\\n                    start[i] = start[i].Remove(0, charsToRem);\\\\r\\\\n                }\\\\r\\\\n                return start;\\\\r\\\\n            }\\\\r\\\\n            string[] exceptRegex(string[] array, string regExpression)\\\\r\\\\n            \"},{\"Position\":70051,\"NumberToRemove\":24,\"ContentToAdd\":\"{\\\\r\\\\n                if (regExpression == \\\\\\\"\\\\\\\")\\\\r\\\\n                \"},{\"Position\":70118,\"NumberToRemove\":139,\"ContentToAdd\":\"{\\\\r\\\\n                    return array;\\\\r\\\\n                }\\\\r\\\\n                Regex regexp = new Regex(regExpression);\\\\r\\\\n                var temp = array.ToList();\\\\r\\\\n                for (int i = 0; i < array.Length; i++)\\\\r\\\\n                \"},{\"Position\":70361,\"NumberToRemove\":9,\"ContentToAdd\":\"{\\\\r\\\\n                    if (regexp.IsMatch(array[i]))\\\\r\\\\n                    \"},{\"Position\":70439,\"NumberToRemove\":314,\"ContentToAdd\":\"{\\\\r\\\\n                        temp.Remove(array[i]);\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                return temp.ToArray();\\\\r\\\\n            }\\\\r\\\\n            Folder folder = new Folder()\\\\r\\\\n            \"},{\"Position\":70655,\"NumberToRemove\":109,\"ContentToAdd\":\"{\\\\r\\\\n                Path = path.Remove(0, charsToRemoveFromPath)\\\\r\\\\n            };\\\\r\\\\n            string[] filePaths = exceptRegex(firstCharsRemoved(Directory.GetFiles(path), charsToRemoveFromPath).Except(excludedDirs).ToArray(), regex);\\\\r\\\\n            folder.Files = new FileObj[filePaths.Length];\\\\r\\\\n            for (int i = 0; i < filePaths.Length; i++)\\\\r\\\\n            \"},{\"Position\":71028,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                folder.Files[i] = new FileObj(filePaths[i], File.ReadAllText($\\\\\\\"\"},{\"Position\":71113,\"NumberToRemove\":22,\"ContentToAdd\":\"{rootPath}\\\\\\\\\\\\\\\\\"},{\"Position\":71127,\"NumberToRemove\":142,\"ContentToAdd\":\"{filePaths[i]}\\\\\\\"));\\\\r\\\\n            }\\\\r\\\\n            Regex regextest = new Regex(regex);\\\\r\\\\n            var folderPaths = exceptRegex(firstCharsRemoved(Directory.GetDirectories(path), charsToRemoveFromPath).Except(excludedDirs).ToArray(), regex);\\\\r\\\\n            folder.Folders = new Folder[folderPaths.Length];\\\\r\\\\n\\\\r\\\\n            for (int i = 0; i < folderPaths.Length; i++)\\\\r\\\\n            \"},{\"Position\":71516,\"NumberToRemove\":124,\"ContentToAdd\":\"{\\\\r\\\\n                folder.Folders[i] = await LoadFiles($\\\\\\\"\"},{\"Position\":71576,\"NumberToRemove\":23,\"ContentToAdd\":\"{rootPath}\"},{\"Position\":71586,\"NumberToRemove\":67,\"ContentToAdd\":\"{folderPaths[i]}\\\\\\\", charsToRemoveFromPath, excludedDirs, regex, rootPath);\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            return folder;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        string GetUpdatedFiles(int latestCommit)\\\\r\\\\n        \"},{\"Position\":71792,\"NumberToRemove\":95,\"ContentToAdd\":\"{\\\\r\\\\n            Commit lastCommit = JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":71888,\"NumberToRemove\":8,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":71911,\"NumberToRemove\":254,\"ContentToAdd\":\"{latestCommit % 100}\\\\\\\\\"},{\"Position\":71933,\"NumberToRemove\":230,\"ContentToAdd\":\"{latestCommit / 100}\\\\\\\"));\\\\r\\\\n            return MergeDiffs(lastCommit.Parent == 0 ? \\\\\\\"\\\\\\\" : GetUpdatedFiles(lastCommit.Parent), JsonConvert.DeserializeObject<Diff[]>(lastCommit.Diffs));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task CreateBranch(string name)\\\\r\\\\n        \"},{\"Position\":72201,\"NumberToRemove\":54,\"ContentToAdd\":\"{\\\\r\\\\n            await CreateBranch(name, int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":72274,\"NumberToRemove\":477,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":72304,\"NumberToRemove\":66,\"ContentToAdd\":\"{File.ReadAllText($@\\\\\\\"\"},{\"Position\":72326,\"NumberToRemove\":30,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")}\\\\\\\")));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task CreateBranch(string name, int commitID)\\\\r\\\\n        \"},{\"Position\":72458,\"NumberToRemove\":122,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(() => File.WriteAllText($@\\\\\\\"\"},{\"Position\":72518,\"NumberToRemove\":54,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":72548,\"NumberToRemove\":30,\"ContentToAdd\":\"{name}\\\\\\\", commitID.ToString()));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task Clone(string orig)\\\\r\\\\n        \"},{\"Position\":72657,\"NumberToRemove\":59,\"ContentToAdd\":\"{\\\\r\\\\n            await Clone(Path, orig, true, @\\\\\\\"\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n            await Checkout(File.ReadAllText($@\\\\\\\"\"},{\"Position\":72769,\"NumberToRemove\":9,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task Clone(string path, string orig, bool loadCommits, string dataAdditional = @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n        \"},{\"Position\":72936,\"NumberToRemove\":160,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(async () =>\\\\r\\\\n            \"},{\"Position\":72995,\"NumberToRemove\":478,\"ContentToAdd\":\"{\\\\r\\\\n                string path2 = path + dataAdditional;\\\\r\\\\n                Directory.CreateDirectory(path2);\\\\r\\\\n                File.WriteAllText(path2 + @\\\\\\\"\\\\\\\\origin\\\\\\\", orig);\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":73223,\"NumberToRemove\":219,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\");\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":73290,\"NumberToRemove\":30,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\");\\\\r\\\\n                var received = await client.GetAsync(Origin + \\\\\\\"/branches\\\\\\\");\\\\r\\\\n                Dictionary<string, int> branches = JsonConvert.DeserializeObject<Dictionary<string, int>>(received.Content.ReadAsStringAsync().Result);\\\\r\\\\n                foreach (string branch in branches.Keys)\\\\r\\\\n                \"},{\"Position\":73633,\"NumberToRemove\":74,\"ContentToAdd\":\"{\\\\r\\\\n                    File.WriteAllText($@\\\\\\\"\"},{\"Position\":73705,\"NumberToRemove\":120,\"ContentToAdd\":\"{branch}\\\\\\\", branches[branch].ToString());\\\\r\\\\n                }\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":73809,\"NumberToRemove\":214,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\HEAD\\\\\\\", branches.Keys.ToArray()[0]);\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":73910,\"NumberToRemove\":219,\"ContentToAdd\":\"{path2}\\\\\\\\commits\\\\\\\");\\\\r\\\\n\\\\r\\\\n                if (loadCommits)\\\\r\\\\n                \"},{\"Position\":73990,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                    await GetAllCommits(path, branches.Keys.ToArray(), dataAdditional);\\\\r\\\\n                }\\\\r\\\\n            });\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async /*Task<Dictionary<int, Commit>>*/ Task GetAllCommits(string path, string[] branches, string extraString = @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n        \"},{\"Position\":74287,\"NumberToRemove\":74,\"ContentToAdd\":\"{\\\\r\\\\n            // Dictionary<int, Commit> allCommits = new Dictionary<int, Commit>();\\\\r\\\\n            for (int i = 0; i < branches.Length; i++)\\\\r\\\\n            \"},{\"Position\":74447,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                var received = await client.GetAsync($\\\\\\\"\"},{\"Position\":74508,\"NumberToRemove\":120,\"ContentToAdd\":\"{Origin}?branch=\"},{\"Position\":74524,\"NumberToRemove\":215,\"ContentToAdd\":\"{branches[i]}\\\\\\\");\\\\r\\\\n                Dictionary<int, Commit> commits = JsonConvert.DeserializeObject<Dictionary<int, Commit>>(received.Content.ReadAsStringAsync().Result);\\\\r\\\\n                for (int j = 0; j < commits.Keys.Count; j++)\\\\r\\\\n                \"},{\"Position\":74779,\"NumberToRemove\":210,\"ContentToAdd\":\"{\\\\r\\\\n                    string path2 = $@\\\\\\\"\"},{\"Position\":74823,\"NumberToRemove\":205,\"ContentToAdd\":\"{path}\"},{\"Position\":74829,\"NumberToRemove\":141,\"ContentToAdd\":\"{extraString}\\\\\\\\commits\\\\\\\\\"},{\"Position\":74853,\"NumberToRemove\":72,\"ContentToAdd\":\"{commits.Keys.ToArray()[j] % 100}\\\\\\\";\\\\r\\\\n                    Directory.CreateDirectory(path2);\\\\r\\\\n                    File.WriteAllText($@\\\\\\\"\"},{\"Position\":74992,\"NumberToRemove\":139,\"ContentToAdd\":\"{path2}\\\\\\\\\"},{\"Position\":75001,\"NumberToRemove\":252,\"ContentToAdd\":\"{commits.Keys.ToArray()[j] / 100}\\\\\\\", JsonConvert.SerializeObject(commits.Values.ToArray()[j]));\\\\r\\\\n                    // allCommits.Add(commits[j].GetHashCode(),commits[j]);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            //return allCommits;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<int> GetHead()\\\\r\\\\n        \"},{\"Position\":75315,\"NumberToRemove\":274,\"ContentToAdd\":\"{\\\\r\\\\n            int result = 0;\\\\r\\\\n            await Task.Run(() => result = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":75424,\"NumberToRemove\":83,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":75454,\"NumberToRemove\":20,\"ContentToAdd\":\"{File.ReadAllText($@\\\\\\\"\"},{\"Position\":75476,\"NumberToRemove\":12,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")}\\\\\\\")));\\\\r\\\\n            return result;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<int> Commit(Commit commit)\\\\r\\\\n        \"},{\"Position\":75618,\"NumberToRemove\":364,\"ContentToAdd\":\"{\\\\r\\\\n            Guid guid = Guid.NewGuid();\\\\r\\\\n            int hash = guid.GetHashCode();\\\\r\\\\n            string path = $@\\\\\\\"\"},{\"Position\":75742,\"NumberToRemove\":212,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":75765,\"NumberToRemove\":63,\"ContentToAdd\":\"{hash % 100}\\\\\\\";\\\\r\\\\n            await Task.Run(() =>\\\\r\\\\n            \"},{\"Position\":75832,\"NumberToRemove\":133,\"ContentToAdd\":\"{\\\\r\\\\n                Directory.CreateDirectory(path);\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":75927,\"NumberToRemove\":242,\"ContentToAdd\":\"{path}\\\\\\\\\"},{\"Position\":75935,\"NumberToRemove\":74,\"ContentToAdd\":\"{hash / 100}\\\\\\\", JsonConvert.SerializeObject(commit));\\\\r\\\\n            });\\\\r\\\\n            return hash;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task Commit(string author, string committer, string diffs, string message, int parentId, DateTime dateTime)\\\\r\\\\n        \"},{\"Position\":76189,\"NumberToRemove\":52,\"ContentToAdd\":\"{\\\\r\\\\n            await Commit(new Commit(diffs, message, author, committer, parentId, dateTime));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task Commit(string message, string author, string committer, DateTime dateTime)\\\\r\\\\n        \"},{\"Position\":76419,\"NumberToRemove\":105,\"ContentToAdd\":\"{\\\\r\\\\n            if (dateTime == null)\\\\r\\\\n            \"},{\"Position\":76473,\"NumberToRemove\":134,\"ContentToAdd\":\"{\\\\r\\\\n                dateTime = DateTime.Now;\\\\r\\\\n            }\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            Commit commitToCommit = new Commit(JsonConvert.SerializeObject(await GetDiffs(GetUpdatedFiles(head), JsonConvert.SerializeObject(await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex)))), message, author, committer, head, dateTime);\\\\r\\\\n            int specialHash = await Commit(commitToCommit);\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":76950,\"NumberToRemove\":152,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            File.WriteAllText($@\\\\\\\"\"},{\"Position\":77016,\"NumberToRemove\":66,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":77046,\"NumberToRemove\":30,\"ContentToAdd\":\"{branch}\\\\\\\", specialHash.ToString());\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task DeleteBranch(string branch)\\\\r\\\\n        \"},{\"Position\":77168,\"NumberToRemove\":58,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(() => File.Delete($@\\\\\\\"\"},{\"Position\":77222,\"NumberToRemove\":25,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":77252,\"NumberToRemove\":37,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            //await client.DeleteAsync($\\\\\\\"\"},{\"Position\":77311,\"NumberToRemove\":70,\"ContentToAdd\":\"{Origin}/\"},{\"Position\":77320,\"NumberToRemove\":25,\"ContentToAdd\":\"{branch}\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        //TODO: Detect uncommitted changes or out-of-date repo\\\\r\\\\n        async Task<bool> UncommittedChanges()\\\\r\\\\n        \"},{\"Position\":77480,\"NumberToRemove\":141,\"ContentToAdd\":\"{\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            return (await GetDiffs(GetUpdatedFiles(head), JsonConvert.SerializeObject(await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex)))).Length != 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Describes whether or not a branch can be pushed without causing merge conflicts.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        async Task<bool> CanPush(string branch)\\\\r\\\\n        \"},{\"Position\":77958,\"NumberToRemove\":318,\"ContentToAdd\":\"{\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool canPush = false;\\\\r\\\\n            int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":78177,\"NumberToRemove\":66,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":78207,\"NumberToRemove\":78,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":78281,\"NumberToRemove\":56,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":78306,\"NumberToRemove\":170,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) == branch2)\\\\r\\\\n            \"},{\"Position\":78426,\"NumberToRemove\":158,\"ContentToAdd\":\"{\\\\r\\\\n                canPush = true;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return canPush;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        async Task<bool> CanPull(string branch)\\\\r\\\\n        \"},{\"Position\":78640,\"NumberToRemove\":70,\"ContentToAdd\":\"{\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool canPull = false;\\\\r\\\\n            int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":78889,\"NumberToRemove\":105,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":78988,\"NumberToRemove\":41,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) == branch1)\\\\r\\\\n            \"},{\"Position\":79108,\"NumberToRemove\":74,\"ContentToAdd\":\"{\\\\r\\\\n                canPull = true;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return canPull;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        int CommonAncestor(int commit1, int commit2)\\\\r\\\\n        \"},{\"Position\":79323,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n            return CommonAncestor(commit1, commit2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        int CommonAncestor(int commit1, int commit2, string path1, string path2)\\\\r\\\\n        \"},{\"Position\":79533,\"NumberToRemove\":200,\"ContentToAdd\":\"{\\\\r\\\\n            int commit2Start = commit2;\\\\r\\\\n            Commit cmit = GetCommit(commit1, path1);\\\\r\\\\n            Commit cmit2Strt = GetCommit(commit2, path2);\\\\r\\\\n            while (true)\\\\r\\\\n            \"},{\"Position\":79738,\"NumberToRemove\":141,\"ContentToAdd\":\"{\\\\r\\\\n                Commit cmit2 = cmit2Strt;\\\\r\\\\n                commit2 = commit2Start;\\\\r\\\\n                while (true)\\\\r\\\\n                \"},{\"Position\":79879,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                    if (commit2 == commit1)\\\\r\\\\n                    \"},{\"Position\":79951,\"NumberToRemove\":186,\"ContentToAdd\":\"{\\\\r\\\\n                        return commit2;\\\\r\\\\n                    }\\\\r\\\\n                    if (cmit2.Parent == 0)\\\\r\\\\n                    \"},{\"Position\":80090,\"NumberToRemove\":116,\"ContentToAdd\":\"{\\\\r\\\\n                        break;\\\\r\\\\n                    }\\\\r\\\\n                    commit2 = cmit2.Parent;\\\\r\\\\n                    cmit2 = GetCommit(cmit2.Parent, path2);\\\\r\\\\n                }\\\\r\\\\n                if (cmit.Parent == 0)\\\\r\\\\n                \"},{\"Position\":80342,\"NumberToRemove\":23,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                commit1 = cmit.Parent;\\\\r\\\\n                cmit = GetCommit(cmit.Parent, path1);\\\\r\\\\n            }\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        Commit GetCommit(int id, string pvcPath)\\\\r\\\\n        \"},{\"Position\":80616,\"NumberToRemove\":16,\"ContentToAdd\":\"{\\\\r\\\\n            return JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":80699,\"NumberToRemove\":275,\"ContentToAdd\":\"{pvcPath}\\\\\\\\commits\\\\\\\\\"},{\"Position\":80719,\"NumberToRemove\":9,\"ContentToAdd\":\"{id % 100}\\\\\\\\\"},{\"Position\":80731,\"NumberToRemove\":408,\"ContentToAdd\":\"{id / 100}\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Pushes committed changes.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <param name=\\\\\\\"branchToPush\\\\\\\">The branch to push. If empty, pushes all branches.</param>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<Dictionary<string, PushResult>> Push(string branchToPush = \\\\\\\"\\\\\\\")\\\\r\\\\n        \"},{\"Position\":81095,\"NumberToRemove\":60,\"ContentToAdd\":\"{\\\\r\\\\n            var results = new Dictionary<string, PushResult>();\\\\r\\\\n            //HttpStatusCode responseCode = HttpStatusCode.InternalServerError;\\\\r\\\\n            if (await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":81309,\"NumberToRemove\":842,\"ContentToAdd\":\"{\\\\r\\\\n                return new Dictionary<string, PushResult> \"},{\"Position\":81372,\"NumberToRemove\":85,\"ContentToAdd\":\"{ [await GetCurrentBranch()] = PushResult.Uncommited_Changes };\\\\r\\\\n            }\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":81505,\"NumberToRemove\":56,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool allValid = true;\\\\r\\\\n            if (branchToPush == \\\\\\\"\\\\\\\")\\\\r\\\\n            \"},{\"Position\":81747,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n                foreach (string path in Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":81821,\"NumberToRemove\":82,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":81873,\"NumberToRemove\":77,\"ContentToAdd\":\"{\\\\r\\\\n                    if (!await checkValid(path.Remove(0, Path.Length + 19)))\\\\r\\\\n                    \"},{\"Position\":81978,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n                        break;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":82112,\"NumberToRemove\":43,\"ContentToAdd\":\"{\\\\r\\\\n                await checkValid(branchToPush);\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            Task<bool> checkValid(string branchCheck)\\\\r\\\\n            \"},{\"Position\":82258,\"NumberToRemove\":171,\"ContentToAdd\":\"{\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":82324,\"NumberToRemove\":67,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":82354,\"NumberToRemove\":219,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                if (File.Exists($@\\\\\\\"\"},{\"Position\":82412,\"NumberToRemove\":94,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":82437,\"NumberToRemove\":68,\"ContentToAdd\":\"{branchCheck}\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":82474,\"NumberToRemove\":108,\"ContentToAdd\":\"{\\\\r\\\\n                    int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":82544,\"NumberToRemove\":68,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":82569,\"NumberToRemove\":109,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) != branch2)\\\\r\\\\n                    \"},{\"Position\":82710,\"NumberToRemove\":302,\"ContentToAdd\":\"{\\\\r\\\\n                        allValid = false;\\\\r\\\\n                        results.Add(branchCheck.Remove(0, 1), PushResult.Conflict);\\\\r\\\\n                        return Task.FromResult(false);\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                return Task.FromResult(true);\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            if (allValid)\\\\r\\\\n            \"},{\"Position\":83062,\"NumberToRemove\":86,\"ContentToAdd\":\"{\\\\r\\\\n                if (branchToPush == \\\\\\\"\\\\\\\")\\\\r\\\\n                \"},{\"Position\":83128,\"NumberToRemove\":84,\"ContentToAdd\":\"{\\\\r\\\\n                    foreach (string path in Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":83206,\"NumberToRemove\":90,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n                    \"},{\"Position\":83262,\"NumberToRemove\":88,\"ContentToAdd\":\"{\\\\r\\\\n                        await PushBranch(path.Remove(0, Path.Length + 19));\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                else\\\\r\\\\n                \"},{\"Position\":83432,\"NumberToRemove\":86,\"ContentToAdd\":\"{\\\\r\\\\n                    await PushBranch(branchToPush);\\\\r\\\\n                }\\\\r\\\\n                async Task PushBranch(string branchCheck)\\\\r\\\\n                \"},{\"Position\":83590,\"NumberToRemove\":84,\"ContentToAdd\":\"{\\\\r\\\\n                    int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":83660,\"NumberToRemove\":90,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":83690,\"NumberToRemove\":88,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    int commonAncestor;\\\\r\\\\n                    if (File.Exists($@\\\\\\\"\"},{\"Position\":83795,\"NumberToRemove\":86,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":83820,\"NumberToRemove\":84,\"ContentToAdd\":\"{branchCheck}\\\\\\\"))\\\\r\\\\n                    \"},{\"Position\":83861,\"NumberToRemove\":90,\"ContentToAdd\":\"{\\\\r\\\\n                        int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":83935,\"NumberToRemove\":288,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":83960,\"NumberToRemove\":81,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                        commonAncestor = CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2);\\\\r\\\\n                    }\\\\r\\\\n                    else\\\\r\\\\n                    \"},{\"Position\":84160,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        commonAncestor = 0;\\\\r\\\\n                    }\\\\r\\\\n                    int commit = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":84301,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":84331,\"NumberToRemove\":0,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    Dictionary<int, Commit> commits = new Dictionary<int, Commit>();\\\\r\\\\n                    while (commit != commonAncestor)\\\\r\\\\n                    \"},{\"Position\":84517,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                        Commit commitInCommitForm = JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":84633,\"NumberToRemove\":0,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":84656,\"NumberToRemove\":0,\"ContentToAdd\":\"{commit % 100}\\\\\\\\\"},{\"Position\":84672,\"NumberToRemove\":0,\"ContentToAdd\":\"{commit / 100}\\\\\\\"));\\\\r\\\\n                        commits.Add(commit, commitInCommitForm);\\\\r\\\\n                        commit = commitInCommitForm.Parent;\\\\r\\\\n                    }\\\\r\\\\n                    commits.Reverse();\\\\r\\\\n                    var response = client.PutAsync($\\\\\\\"\"},{\"Position\":84947,\"NumberToRemove\":0,\"ContentToAdd\":\"{Origin}/\"},{\"Position\":84956,\"NumberToRemove\":0,\"ContentToAdd\":\"{branchCheck}\\\\\\\", new StringContent(JsonConvert.SerializeObject((User, commits)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n                    results.Add(branchCheck.Remove(0, 1), await FromResponseCode(response.Result.StatusCode));\\\\r\\\\n                    await response;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            Task<PushResult> FromResponseCode(HttpStatusCode statusCode)\\\\r\\\\n            \"},{\"Position\":85358,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                switch (statusCode)\\\\r\\\\n                \"},{\"Position\":85418,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                    case HttpStatusCode.OK:\\\\r\\\\n                        return Task.FromResult(PushResult.Success);\\\\r\\\\n                    case HttpStatusCode.Unauthorized:\\\\r\\\\n                        return Task.FromResult(PushResult.Authentication_Error);\\\\r\\\\n                    case HttpStatusCode.BadRequest:\\\\r\\\\n                        return Task.FromResult(PushResult.Bad_Request);\\\\r\\\\n                    case HttpStatusCode.Accepted:\\\\r\\\\n                        return Task.FromResult(PushResult.Up_to_Date);\\\\r\\\\n                    default:\\\\r\\\\n                        return Task.FromResult(PushResult.No_Response_From_Server);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return results;\\\\r\\\\n            //await client.PostAsync(Origin, new StringContent(JsonConvert.SerializeObject(commit), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":86345,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\RegisterResult.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":86430,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":86486,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n        public enum RegisterResult\\\\r\\\\n        \"},{\"Position\":86537,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            Success,\\\\r\\\\n            Failure\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":86619,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Status.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":86696,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":86752,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n        public enum Status\\\\r\\\\n        \"},{\"Position\":86795,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            Uncommitted_Changes,\\\\r\\\\n            Ahead_of_Origin,\\\\r\\\\n            Behind_Origin,\\\\r\\\\n            Up_to_Date\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":86966,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\.pvcignore\\\",\\\"Contents\\\":\\\"R: bin|vs|obj|(packages$)\\\\r\\\\n\\\"},\"},{\"Position\":87033,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient.sln\\\",\\\"Contents\\\":\\\"Microsoft Visual Studio Solution File, Format Version 12.00\\\\r\\\\n# Visual Studio 15\\\\r\\\\nVisualStudioVersion = 15.0.27004.2005\\\\r\\\\nMinimumVisualStudioVersion = 10.0.40219.1\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":87252,\"NumberToRemove\":0,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCClient\\\\\\\", \\\\\\\"PVCClient\\\\\\\\PVCClient.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":87346,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":87414,\"NumberToRemove\":0,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCPipeLibrary\\\\\\\", \\\\\\\"PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":87522,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":87590,\"NumberToRemove\":0,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCCommandLine\\\\\\\", \\\\\\\"PVCCommandLine\\\\\\\\PVCCommandLine.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":87699,\"NumberToRemove\":0,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nGlobal\\\\r\\\\n\\\\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\\\\r\\\\n\\\\t\\\\tDebug|Any CPU = Debug|Any CPU\\\\r\\\\n\\\\t\\\\tRelease|Any CPU = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":88001,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":88087,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":88171,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":88261,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":88349,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":88435,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":88519,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":88609,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":88697,\"NumberToRemove\":0,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":88783,\"NumberToRemove\":0,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":88867,\"NumberToRemove\":0,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":88957,\"NumberToRemove\":0,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(SolutionProperties) = preSolution\\\\r\\\\n\\\\t\\\\tHideSolutionNode = FALSE\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ExtensibilityGlobals) = postSolution\\\\r\\\\n\\\\t\\\\tSolutionGuid = \"},{\"Position\":89245,\"NumberToRemove\":0,\"ContentToAdd\":\"{78911CB1-A8D8-4CCA-BCF1-C4390A8F96AE}\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\nEndGlobal\\\\r\\\\n\\\"}]}\"}]","Parent":1752446973,"Message":"Fixed async warnings and implemented much more in the way of commandline tool. Laying this project to rest for now, going to focus on learning C++.","Author":"penguinee232","Committer":"penguinee232","DateAndTime":"2018-12-15T16:17:48.1133609-08:00"}