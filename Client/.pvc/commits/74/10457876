{"Diffs":"[{\"Position\":24991,\"NumberToRemove\":303,\"ContentToAdd\":\"{\\\\r\\\\n            CredentialCache cache = new CredentialCache();\\\\r\\\\n            Credential = cache.GetCredential(new Uri(\\\\\\\"http://pvc-pipe.com\\\\\\\"), \\\\\\\"\\\\\\\");\\\\r\\\\n            return Credential;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public NetworkCredential SetCredential(string username, string password)\\\\r\\\\n        \"},{\"Position\":25290,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\\r\\\\n            CredentialCache cache = new CredentialCache();\\\\r\\\\n            NetworkCredential cred = new NetworkCredential(username, password);\\\\r\\\\n            Credential = cred;\\\\r\\\\n            cache.Add(new Uri(\\\\\\\"http://pvc-pipe.com\\\\\\\"), \\\\\\\"\\\\\\\", cred);\\\\r\\\\n            return Credential;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [Option(\\\\\\\"--dir=<path>\\\\\\\")]\\\\r\\\\n        [DirectoryExists]\\\\r\\\\n        public string PVCDir \"},{\"Position\":25693,\"NumberToRemove\":153,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        //public string Command \"},{\"Position\":25746,\"NumberToRemove\":137,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public NetworkCredential Credential;\\\\r\\\\n\\\\r\\\\n        public async Task OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":25899,\"NumberToRemove\":107,\"ContentToAdd\":\"{\\\\r\\\\n            app.ShowHelp();\\\\r\\\\n            return;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public override List<string> CreateArgs()\\\\r\\\\n        \"},{\"Position\":26036,\"NumberToRemove\":241,\"ContentToAdd\":\"{\\\\r\\\\n            List<string> args = new List<string>();\\\\r\\\\n            if (PVCDir != null)\\\\r\\\\n            \"},{\"Position\":26143,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n                args.Add(\\\\\\\"--dir=\\\\\\\" + PVCDir);\\\\r\\\\n            }\\\\r\\\\n            return args;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    [Command(Description = \\\\\\\"Sign in. Only authenticates when a command which requires an account is run\\\\\\\")]\\\\r\\\\n    class LogInCommand : PVCCommandBase\\\\r\\\\n    \"},{\"Position\":26428,\"NumberToRemove\":78,\"ContentToAdd\":\"{\\\\r\\\\n        private PVC Parent \"},{\"Position\":26460,\"NumberToRemove\":48,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public override List<string> CreateArgs()\\\\r\\\\n        \"},{\"Position\":26542,\"NumberToRemove\":82,\"ContentToAdd\":\"{\\\\r\\\\n            List<string> args = Parent.CreateArgs();\\\\r\\\\n            args.Add(\\\\\\\"login\\\\\\\");\\\\r\\\\n            return args;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    [Command(Description = \\\\\\\"Commit changes to a repository\\\\\\\")]\\\\r\\\\n    class CommitCommand : PVCCommandBase\\\\r\\\\n    \"},{\"Position\":26808,\"NumberToRemove\":145,\"ContentToAdd\":\"{\\\\r\\\\n\\\\r\\\\n        [Option(\\\\\\\"-m\\\\\\\")]\\\\r\\\\n        public string Message \"},{\"Position\":26875,\"NumberToRemove\":143,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        [Option(\\\\\\\"-a\\\\\\\")]\\\\r\\\\n        public string Author \"},{\"Position\":26953,\"NumberToRemove\":221,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        private PVC Parent \"},{\"Position\":27001,\"NumberToRemove\":470,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public override List<string> CreateArgs()\\\\r\\\\n        \"},{\"Position\":27083,\"NumberToRemove\":211,\"ContentToAdd\":\"{\\\\r\\\\n            List<string> args = Parent.CreateArgs();\\\\r\\\\n            args.Add(\\\\\\\"commit\\\\\\\");\\\\r\\\\n            if(Message != null)\\\\r\\\\n            \"},{\"Position\":27228,\"NumberToRemove\":252,\"ContentToAdd\":\"{\\\\r\\\\n                args.Add(\\\\\\\"-m\\\\\\\");\\\\r\\\\n                args.Add(Message);\\\\r\\\\n            }\\\\r\\\\n            if(Author != null)\\\\r\\\\n            \"},{\"Position\":27371,\"NumberToRemove\":252,\"ContentToAdd\":\"{\\\\r\\\\n                args.Add(\\\\\\\"-a\\\\\\\");\\\\r\\\\n                args.Add(Author);\\\\r\\\\n            }\\\\r\\\\n            return args;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":27592,\"NumberToRemove\":159,\"ContentToAdd\":\"{\\\\r\\\\n            PVCServerInterface interf = new PVCServerInterface(string.IsNullOrEmpty(Parent.PVCDir) ? Directory.GetCurrentDirectory() : Parent.PVCDir);\\\\r\\\\n            var message = app.Option(\\\\\\\"-m <MESSAGE>\\\\\\\", \\\\\\\"The message\\\\\\\", CommandOptionType.SingleValue);\\\\r\\\\n            var author = app.Option(\\\\\\\"-a <AUTHOR>\\\\\\\", \\\\\\\"The author\\\\\\\", CommandOptionType.SingleValue);\\\\r\\\\n            Parent.GetCredential();\\\\r\\\\n            if(string.IsNullOrEmpty(Message))\\\\r\\\\n            \"},{\"Position\":28062,\"NumberToRemove\":202,\"ContentToAdd\":\"{\\\\r\\\\n                Console.WriteLine(\\\\\\\"A commit must have a message.\\\\\\\");\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            if (string.IsNullOrEmpty(Author))\\\\r\\\\n            \"},{\"Position\":28245,\"NumberToRemove\":597,\"ContentToAdd\":\"{\\\\r\\\\n                if (Parent.Credential == null)\\\\r\\\\n                \"},{\"Position\":28316,\"NumberToRemove\":2770,\"ContentToAdd\":\"{\\\\r\\\\n                    Console.WriteLine(\\\\\\\"A commit must have an author. This can be specified either by using the -a option or by logging in.\\\\\\\");\\\\r\\\\n                    return;\\\\r\\\\n                }\\\\r\\\\n                Author = Parent.Credential.UserName;\\\\r\\\\n            }\\\\r\\\\n            await interf.Commit(Message, Author, Author, DateTime.Now);\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    [HelpOption(\\\\\\\"--help\\\\\\\")]\\\\r\\\\n    abstract class PVCCommandBase\\\\r\\\\n    \"},{\"Position\":28767,\"NumberToRemove\":221,\"ContentToAdd\":\"{\\\\r\\\\n        public abstract List<string> CreateArgs();\\\\r\\\\n\\\\r\\\\n        protected virtual async Task<int> OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":28926,\"NumberToRemove\":395,\"ContentToAdd\":\"{\\\\r\\\\n            var args = CreateArgs();\\\\r\\\\n\\\\r\\\\n            Console.WriteLine(\\\\\\\"Result = pvc \\\\\\\" + ArgumentEscaper.EscapeAndConcatenate(args));\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":29128,\"NumberToRemove\":37,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\PVCCommandLine.csproj\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<Project ToolsVersion=\\\\\\\"15.0\\\\\\\" xmlns=\\\\\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\\\\\">\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props\\\\\\\" Condition=\\\\\\\"Exists('$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props')\\\\\\\" />\\\\r\\\\n  <PropertyGroup>\\\\r\\\\n    <Configuration Condition=\\\\\\\" '$(Configuration)' == '' \\\\\\\">Debug</Configuration>\\\\r\\\\n    <Platform Condition=\\\\\\\" '$(Platform)' == '' \\\\\\\">AnyCPU</Platform>\\\\r\\\\n    <ProjectGuid>\"},{\"Position\":29725,\"NumberToRemove\":60,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}</ProjectGuid>\\\\r\\\\n    <OutputType>Exe</OutputType>\\\\r\\\\n    <RootNamespace>PVCCommandLine</RootNamespace>\\\\r\\\\n    <AssemblyName>PVCCommandLine</AssemblyName>\\\\r\\\\n    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>\\\\r\\\\n    <FileAlignment>512</FileAlignment>\\\\r\\\\n    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>\\\\r\\\\n    <Deterministic>true</Deterministic>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \\\\\\\">\\\\r\\\\n    <PlatformTarget>AnyCPU</PlatformTarget>\\\\r\\\\n    <DebugSymbols>true</DebugSymbols>\\\\r\\\\n    <DebugType>full</DebugType>\\\\r\\\\n    <Optimize>false</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Debug\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n    <LangVersion>7.3</LangVersion>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \\\\\\\">\\\\r\\\\n    <PlatformTarget>AnyCPU</PlatformTarget>\\\\r\\\\n    <DebugType>pdbonly</DebugType>\\\\r\\\\n    <Optimize>true</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Release\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Reference Include=\\\\\\\"McMaster.Extensions.CommandLineUtils, Version=2.2.5.0, Culture=neutral, PublicKeyToken=6f71cb76b82f055d, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\McMaster.Extensions.CommandLineUtils.2.2.5\\\\\\\\lib\\\\\\\\net45\\\\\\\\McMaster.Extensions.CommandLineUtils.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ComponentModel.DataAnnotations\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Core\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ValueTuple, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\System.ValueTuple.4.4.0\\\\\\\\lib\\\\\\\\net461\\\\\\\\System.ValueTuple.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml.Linq\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data.DataSetExtensions\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"Microsoft.CSharp\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Net.Http\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Compile Include=\\\\\\\"Program.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Properties\\\\\\\\AssemblyInfo.cs\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <None Include=\\\\\\\"App.config\\\\\\\" />\\\\r\\\\n    <None Include=\\\\\\\"packages.config\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <ProjectReference Include=\\\\\\\"..\\\\\\\\PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\\\\\">\\\\r\\\\n      <Project>\"},{\"Position\":32495,\"NumberToRemove\":1607,\"ContentToAdd\":\"{3671d7ca-1c5e-469d-9266-8e3617330b7b}</Project>\\\\r\\\\n      <Name>PVCPipeLibrary</Name>\\\\r\\\\n    </ProjectReference>\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildToolsPath)\\\\\\\\Microsoft.CSharp.targets\\\\\\\" />\\\\r\\\\n</Project>\\\"},\"},{\"Position\":32716,\"NumberToRemove\":78,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\PVCCommandLine.csproj.user\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<Project ToolsVersion=\\\\\\\"15.0\\\\\\\" xmlns=\\\\\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\\\\\">\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\"'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'\\\\\\\">\\\\r\\\\n    <StartArguments>--help</StartArguments>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n</Project>\\\"}]},\"},{\"Position\":33094,\"NumberToRemove\":37,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\",\\\"Folders\\\":[\"},{\"Position\":33131,\"NumberToRemove\":143,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Properties\\\",\\\"Folders\\\":[],\\\"Files\\\":[\"},{\"Position\":33191,\"NumberToRemove\":107,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Properties\\\\\\\\AssemblyInfo.cs\\\",\\\"Contents\\\":\\\"using System.Reflection;\\\\r\\\\nusing System.Runtime.CompilerServices;\\\\r\\\\nusing System.Runtime.InteropServices;\\\\r\\\\n\\\\r\\\\n// General Information about an assembly is controlled through the following\\\\r\\\\n// set of attributes. Change these attribute values to modify the information\\\\r\\\\n// associated with an assembly.\\\\r\\\\n[assembly: AssemblyTitle(\\\\\\\"PVCPipeClient\\\\\\\")]\\\\r\\\\n[assembly: AssemblyDescription(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyConfiguration(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCompany(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyProduct(\\\\\\\"PVCPipeClient\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCopyright(\\\\\\\"Copyright ©  2018\\\\\\\")]\\\\r\\\\n[assembly: AssemblyTrademark(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCulture(\\\\\\\"\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Setting ComVisible to false makes the types in this assembly not visible\\\\r\\\\n// to COM components.  If you need to access a type in this assembly from\\\\r\\\\n// COM, set the ComVisible attribute to true on that type.\\\\r\\\\n[assembly: ComVisible(false)]\\\\r\\\\n\\\\r\\\\n// The following GUID is for the ID of the typelib if this project is exposed to COM\\\\r\\\\n[assembly: Guid(\\\\\\\"3671d7ca-1c5e-469d-9266-8e3617330b7b\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Version information for an assembly consists of the following four values:\\\\r\\\\n//\\\\r\\\\n//      Major Version\\\\r\\\\n//      Minor Version\\\\r\\\\n//      Build Number\\\\r\\\\n//      Revision\\\\r\\\\n//\\\\r\\\\n// You can specify all the values or you can default the Build and Revision Numbers\\\\r\\\\n// by using the '*' as shown below:\\\\r\\\\n// [assembly: AssemblyVersion(\\\\\\\"1.0.*\\\\\\\")]\\\\r\\\\n[assembly: AssemblyVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n[assembly: AssemblyFileVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":34798,\"NumberToRemove\":212,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Account.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":34876,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n    public class Account\\\\r\\\\n    \"},{\"Position\":34913,\"NumberToRemove\":33,\"ContentToAdd\":\"{\\\\r\\\\n        public string Username;\\\\r\\\\n        public string Password;\\\\r\\\\n        public Account(string username, string password)\\\\r\\\\n        \"},{\"Position\":35056,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n            Username = username;\\\\r\\\\n            Password = password;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":35163,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Commit.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\n\\\\r\\\\nnamespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":35375,\"NumberToRemove\":50,\"ContentToAdd\":\"{\\\\r\\\\n    public class Commit\\\\r\\\\n    \"},{\"Position\":35411,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\\r\\\\n        public string Diffs \"},{\"Position\":35444,\"NumberToRemove\":57,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public int Parent \"},{\"Position\":35491,\"NumberToRemove\":148,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Message \"},{\"Position\":35542,\"NumberToRemove\":240,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Author \"},{\"Position\":35592,\"NumberToRemove\":81,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Committer \"},{\"Position\":35645,\"NumberToRemove\":56,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public DateTime DateAndTime \"},{\"Position\":35702,\"NumberToRemove\":47,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public Commit(string diffs, string message, string author, string committer, int parent, DateTime dateTime)\\\\r\\\\n        \"},{\"Position\":35850,\"NumberToRemove\":129,\"ContentToAdd\":\"{\\\\r\\\\n            Diffs = diffs;\\\\r\\\\n            Message = message;\\\\r\\\\n            Author = author;\\\\r\\\\n            Committer = committer;\\\\r\\\\n            Parent = parent;\\\\r\\\\n            DateAndTime = dateTime;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":36090,\"NumberToRemove\":81,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PullResult.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":36227,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n        public enum PullResult\\\\r\\\\n        \"},{\"Position\":36274,\"NumberToRemove\":227,\"ContentToAdd\":\"{\\\\r\\\\n            Success = 0,\\\\r\\\\n            Uncommitted_Changes,\\\\r\\\\n            Merge_Conflict\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":36403,\"NumberToRemove\":596,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PushResult.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":36484,\"NumberToRemove\":2660,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":36540,\"NumberToRemove\":358,\"ContentToAdd\":\"{\\\\r\\\\n        public enum PushResult\\\\r\\\\n        \"},{\"Position\":36587,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n            Success = 0,\\\\r\\\\n            Uncommited_Changes,\\\\r\\\\n            Conflict,\\\\r\\\\n            Authentication_Error,\\\\r\\\\n            Bad_Request,\\\\r\\\\n            No_Response_From_Server\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":36814,\"NumberToRemove\":45,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<Project ToolsVersion=\\\\\\\"15.0\\\\\\\" xmlns=\\\\\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\\\\\">\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props\\\\\\\" Condition=\\\\\\\"Exists('$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props')\\\\\\\" />\\\\r\\\\n  <PropertyGroup>\\\\r\\\\n    <Configuration Condition=\\\\\\\" '$(Configuration)' == '' \\\\\\\">Debug</Configuration>\\\\r\\\\n    <Platform Condition=\\\\\\\" '$(Platform)' == '' \\\\\\\">AnyCPU</Platform>\\\\r\\\\n    <ProjectGuid>\"},{\"Position\":37410,\"NumberToRemove\":165,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}</ProjectGuid>\\\\r\\\\n    <OutputType>Library</OutputType>\\\\r\\\\n    <AppDesignerFolder>Properties</AppDesignerFolder>\\\\r\\\\n    <RootNamespace>PVCPipeClient</RootNamespace>\\\\r\\\\n    <AssemblyName>PVCPipeClient</AssemblyName>\\\\r\\\\n    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>\\\\r\\\\n    <FileAlignment>512</FileAlignment>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \\\\\\\">\\\\r\\\\n    <DebugSymbols>true</DebugSymbols>\\\\r\\\\n    <DebugType>full</DebugType>\\\\r\\\\n    <Optimize>false</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Debug\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \\\\\\\">\\\\r\\\\n    <DebugType>pdbonly</DebugType>\\\\r\\\\n    <Optimize>true</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Release\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Reference Include=\\\\\\\"Newtonsoft.Json, Version=11.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\Newtonsoft.Json.11.0.2\\\\\\\\lib\\\\\\\\net45\\\\\\\\Newtonsoft.Json.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Core\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\System.ValueTuple.4.5.0\\\\\\\\lib\\\\\\\\net461\\\\\\\\System.ValueTuple.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml.Linq\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data.DataSetExtensions\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"Microsoft.CSharp\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Net.Http\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Compile Include=\\\\\\\"Account.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Commit.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Properties\\\\\\\\AssemblyInfo.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"PullResult.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"PushResult.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"PVCServerInterface.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"RegisterResult.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Status.cs\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <None Include=\\\\\\\"packages.config\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildToolsPath)\\\\\\\\Microsoft.CSharp.targets\\\\\\\" />\\\\r\\\\n</Project>\\\"},\"},{\"Position\":40070,\"NumberToRemove\":155,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PVCServerInterface.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.IO;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Net;\\\\r\\\\nusing System.Net.Http;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Text.RegularExpressions;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing Newtonsoft.Json;\\\\r\\\\n\\\\r\\\\nnamespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":40428,\"NumberToRemove\":145,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":40484,\"NumberToRemove\":202,\"ContentToAdd\":\"{        \\\\r\\\\n        class Folder\\\\r\\\\n        \"},{\"Position\":40529,\"NumberToRemove\":189,\"ContentToAdd\":\"{\\\\r\\\\n            public string Path;\\\\r\\\\n            public Folder[] Folders;\\\\r\\\\n            public FileObj[] Files;\\\\r\\\\n        }\\\\r\\\\n        class FileObj\\\\r\\\\n        \"},{\"Position\":40694,\"NumberToRemove\":85,\"ContentToAdd\":\"{\\\\r\\\\n            public string Path;\\\\r\\\\n            public string Contents;\\\\r\\\\n\\\\r\\\\n            public FileObj(string path, string contents)\\\\r\\\\n            \"},{\"Position\":40849,\"NumberToRemove\":45,\"ContentToAdd\":\"{\\\\r\\\\n                Path = path;\\\\r\\\\n                Contents = contents;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        class Diff\\\\r\\\\n        \"},{\"Position\":40994,\"NumberToRemove\":113,\"ContentToAdd\":\"{\\\\r\\\\n            public int Position;\\\\r\\\\n            public int NumberToRemove;\\\\r\\\\n            public string ContentToAdd;\\\\r\\\\n            public Diff(int pos, int numToRem, string toAdd)\\\\r\\\\n            \"},{\"Position\":41196,\"NumberToRemove\":62,\"ContentToAdd\":\"{\\\\r\\\\n                Position = pos;\\\\r\\\\n                NumberToRemove = numToRem;\\\\r\\\\n                ContentToAdd = toAdd;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public Account User \"},{\"Position\":41385,\"NumberToRemove\":111,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public async Task<string> GetCurrentBranch()\\\\r\\\\n        \"},{\"Position\":41470,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\\r\\\\n            return File.ReadAllText($@\\\\\\\"\"},{\"Position\":41515,\"NumberToRemove\":185,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<string[]> GetAllBranches()\\\\r\\\\n        \"},{\"Position\":41628,\"NumberToRemove\":105,\"ContentToAdd\":\"{\\\\r\\\\n            string[] temp = Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":41690,\"NumberToRemove\":290,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\").ToArray();\\\\r\\\\n            for (int i = 0; i < temp.Length; i++)\\\\r\\\\n            \"},{\"Position\":41801,\"NumberToRemove\":59,\"ContentToAdd\":\"{\\\\r\\\\n                temp[i] = temp[i].Remove(0, $@\\\\\\\"\"},{\"Position\":41854,\"NumberToRemove\":86,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\\\\\\\".Length);\\\\r\\\\n            }\\\\r\\\\n            return temp;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        async Task<Diff[]> GetDiffs(string left, string right)\\\\r\\\\n        \"},{\"Position\":42039,\"NumberToRemove\":41,\"ContentToAdd\":\"{\\\\r\\\\n            List<Diff> diffs = new List<Diff>();\\\\r\\\\n            await Task.Run(() =>\\\\r\\\\n            \"},{\"Position\":42144,\"NumberToRemove\":122,\"ContentToAdd\":\"{\\\\r\\\\n                //Try checking each character of right against left until there is a mismatch. Then maybe recursive call on shortened file?\\\\r\\\\n                //New strat: For now, trying out comparing lines. Check line against line\\\\r\\\\n                string[] leftLines = left.Split('\"},{\"Position\":42434,\"NumberToRemove\":42,\"ContentToAdd\":\"{');\\\\r\\\\n                string[] rightLines = right.Split('\"},{\"Position\":42493,\"NumberToRemove\":229,\"ContentToAdd\":\"{');\\\\r\\\\n                for (int i = 1; i < leftLines.Length; i++)\\\\r\\\\n                \"},{\"Position\":42579,\"NumberToRemove\":244,\"ContentToAdd\":\"{\\\\r\\\\n                    leftLines[i] = '\"},{\"Position\":42620,\"NumberToRemove\":77,\"ContentToAdd\":\"{' + leftLines[i];\\\\r\\\\n                }\\\\r\\\\n                for (int i = 1; i < rightLines.Length; i++)\\\\r\\\\n                \"},{\"Position\":42742,\"NumberToRemove\":277,\"ContentToAdd\":\"{\\\\r\\\\n                    rightLines[i] = '\"},{\"Position\":42784,\"NumberToRemove\":218,\"ContentToAdd\":\"{' + rightLines[i];\\\\r\\\\n                }\\\\r\\\\n                int loopLength = leftLines.Length > rightLines.Length ? leftLines.Length : rightLines.Length;\\\\r\\\\n                for (int i = 0; i < loopLength; i++)\\\\r\\\\n                \"},{\"Position\":43013,\"NumberToRemove\":315,\"ContentToAdd\":\"{\\\\r\\\\n                    string strLeft = i < leftLines.Length ? leftLines[i] : null;\\\\r\\\\n                    string strRight = i < rightLines.Length ? rightLines[i] : null;\\\\r\\\\n                    if (strLeft != strRight)\\\\r\\\\n                    \"},{\"Position\":43257,\"NumberToRemove\":144,\"ContentToAdd\":\"{\\\\r\\\\n                        if (strLeft == null)\\\\r\\\\n                        \"},{\"Position\":43334,\"NumberToRemove\":282,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, leftLines.Length) + cumulativeLength(rightLines, i, leftLines.Length), 0, strRight));\\\\r\\\\n                        }\\\\r\\\\n                        else if (strRight == null)\\\\r\\\\n                        \"},{\"Position\":43611,\"NumberToRemove\":71,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, rightLines.Length), leftLines[i].Length, \\\\\\\"\\\\\\\"));\\\\r\\\\n                        }\\\\r\\\\n                        else\\\\r\\\\n                        \"},{\"Position\":43829,\"NumberToRemove\":239,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, i), leftLines[i].Length, strRight));\\\\r\\\\n                        }\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                int cumulativeLength(string[] array, int endingIndexPlusOne, int startingIndex = 0)\\\\r\\\\n                \"},{\"Position\":44144,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n                    int cumLen = 0;\\\\r\\\\n                    for (int i = startingIndex; i < endingIndexPlusOne; i++)\\\\r\\\\n                    \"},{\"Position\":44288,\"NumberToRemove\":49,\"ContentToAdd\":\"{\\\\r\\\\n                        cumLen += array[i].Length;\\\\r\\\\n                    }\\\\r\\\\n                    return cumLen;\\\\r\\\\n                }\\\\r\\\\n            });\\\\r\\\\n            return diffs.ToArray();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        string MergeDiffs(string left, Diff[] diffs)\\\\r\\\\n        \"},{\"Position\":44570,\"NumberToRemove\":89,\"ContentToAdd\":\"{\\\\r\\\\n            for (int i = 0; i < diffs.Length; i++)\\\\r\\\\n            \"},{\"Position\":44641,\"NumberToRemove\":69,\"ContentToAdd\":\"{\\\\r\\\\n                left = left.Remove(diffs[i].Position, diffs[i].NumberToRemove).Insert(diffs[i].Position, diffs[i].ContentToAdd);\\\\r\\\\n            }\\\\r\\\\n            return left;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public string Origin\\\\r\\\\n        \"},{\"Position\":44916,\"NumberToRemove\":42,\"ContentToAdd\":\"{\\\\r\\\\n                return File.ReadAllText($@\\\\\\\"\"},{\"Position\":44965,\"NumberToRemove\":42,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\origin\\\\\\\");\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public string Path \"},{\"Position\":45054,\"NumberToRemove\":45,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string[] IgnoredPaths\\\\r\\\\n        \"},{\"Position\":45123,\"NumberToRemove\":98,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":45159,\"NumberToRemove\":307,\"ContentToAdd\":\"{\\\\r\\\\n                if (!File.Exists($@\\\\\\\"\"},{\"Position\":45201,\"NumberToRemove\":36,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":45243,\"NumberToRemove\":246,\"ContentToAdd\":\"{\\\\r\\\\n                    return new string[] \"},{\"Position\":45288,\"NumberToRemove\":100,\"ContentToAdd\":\"{ @\\\\\\\"\\\\\\\\.pvc\\\\\\\" };\\\\r\\\\n                }\\\\r\\\\n                string[] igPaths = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":45386,\"NumberToRemove\":61,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n                string[] igPaths2 = new string[igPaths.Length + 1];\\\\r\\\\n                igPaths.CopyTo(igPaths2, 1);\\\\r\\\\n                igPaths2[0] = @\\\\\\\"\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n                return igPaths2;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public string IgnoredRegex\\\\r\\\\n        \"},{\"Position\":45693,\"NumberToRemove\":121,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":45729,\"NumberToRemove\":111,\"ContentToAdd\":\"{\\\\r\\\\n                return IgnoredPaths.Length > 1 ? (IgnoredPaths[1].StartsWith(\\\\\\\"R: \\\\\\\") ? IgnoredPaths[1].Remove(0, 3) : \\\\\\\"\\\\\\\") : \\\\\\\"\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        public async Task SetIgnoredRegex(string regexToIgnore)\\\\r\\\\n        \"},{\"Position\":45975,\"NumberToRemove\":38,\"ContentToAdd\":\"{\\\\r\\\\n            if (IgnoredPaths.Length > 1 && IgnoredPaths[1].StartsWith(\\\\\\\"R: \\\\\\\"))\\\\r\\\\n            \"},{\"Position\":46075,\"NumberToRemove\":43,\"ContentToAdd\":\"{\\\\r\\\\n                string[] linesa = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":46136,\"NumberToRemove\":146,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n                linesa[0] = \\\\\\\"R: \\\\\\\" + regexToIgnore;\\\\r\\\\n                File.WriteAllLines($@\\\\\\\"\"},{\"Position\":46257,\"NumberToRemove\":216,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", linesa);\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            if (!File.Exists($@\\\\\\\"\"},{\"Position\":46368,\"NumberToRemove\":120,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":46406,\"NumberToRemove\":41,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":46449,\"NumberToRemove\":131,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", \\\\\\\"R: \\\\\\\" + regexToIgnore);\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            string[] lines = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":46595,\"NumberToRemove\":37,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n            string[] lines2 = new string[lines.Length + 1];\\\\r\\\\n            lines.CopyTo(lines2, 1);\\\\r\\\\n            lines2[0] = \\\\\\\"R: \\\\\\\" + regexToIgnore;\\\\r\\\\n            File.WriteAllLines($@\\\\\\\"\"},{\"Position\":46811,\"NumberToRemove\":38,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", lines2);\\\\r\\\\n        }\\\\r\\\\n        public async Task IgnorePaths(string[] pathsToIgnore)\\\\r\\\\n        \"},{\"Position\":46931,\"NumberToRemove\":44,\"ContentToAdd\":\"{\\\\r\\\\n            File.AppendAllLines($@\\\\\\\"\"},{\"Position\":46972,\"NumberToRemove\":44,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", pathsToIgnore);\\\\r\\\\n        }\\\\r\\\\n        public async Task UnignorePaths(string[] pathsToUnignore)\\\\r\\\\n        \"},{\"Position\":47103,\"NumberToRemove\":136,\"ContentToAdd\":\"{\\\\r\\\\n            if (File.Exists($@\\\\\\\"\"},{\"Position\":47140,\"NumberToRemove\":74,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":47178,\"NumberToRemove\":46,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllLines($@\\\\\\\"\"},{\"Position\":47222,\"NumberToRemove\":52,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", File.ReadAllLines($@\\\\\\\"\"},{\"Position\":47266,\"NumberToRemove\":99,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\").Except(pathsToUnignore));\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        //public Func<string, string, string> GetDiffs \"},{\"Position\":47402,\"NumberToRemove\":36,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Func<string, string, string> MergeDiffs \"},{\"Position\":47476,\"NumberToRemove\":148,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Commit Head \"},{\"Position\":47522,\"NumberToRemove\":585,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Commit[] Branches \"},{\"Position\":47574,\"NumberToRemove\":431,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        HttpClient client;\\\\r\\\\n\\\\r\\\\n        public HttpClient HttpClient\\\\r\\\\n        \"},{\"Position\":47673,\"NumberToRemove\":432,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":47709,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n                return client;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public PVCServerInterface(/*Commit head,*/ string path)\\\\r\\\\n        \"},{\"Position\":47857,\"NumberToRemove\":18,\"ContentToAdd\":\"{\\\\r\\\\n            client = new HttpClient();\\\\r\\\\n            //Head = head;\\\\r\\\\n            Path = path;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Registers the account specified in the User property of this client-server interface at the specified URL and with the specified recovery email.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <param name=\\\\\\\"registerURL\\\\\\\"></param>\\\\r\\\\n        /// <param name=\\\\\\\"recoveryEmail\\\\\\\"></param>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<RegisterResult> RegisterAccount(string registerURL, string recoveryEmail)\\\\r\\\\n        \"},{\"Position\":48442,\"NumberToRemove\":255,\"ContentToAdd\":\"{\\\\r\\\\n            var registered = await client.PostAsync(registerURL, new StringContent(JsonConvert.SerializeObject((User, recoveryEmail)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return registered.IsSuccessStatusCode ? RegisterResult.Success : RegisterResult.Failure;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<RegisterResult> RegisterAccount(string registerURL, Account account, string recoveryEmail)\\\\r\\\\n        \"},{\"Position\":48873,\"NumberToRemove\":302,\"ContentToAdd\":\"{\\\\r\\\\n            User = account;\\\\r\\\\n            var registered = await client.PostAsync(registerURL, new StringContent(JsonConvert.SerializeObject((User, recoveryEmail)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return registered.IsSuccessStatusCode ? RegisterResult.Success : RegisterResult.Failure;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<bool> ResetPassword(string generalResetURL, string username)\\\\r\\\\n        \"},{\"Position\":49305,\"NumberToRemove\":246,\"ContentToAdd\":\"{\\\\r\\\\n            var result = await client.PostAsync($\\\\\\\"\"},{\"Position\":49361,\"NumberToRemove\":104,\"ContentToAdd\":\"{generalResetURL}/\"},{\"Position\":49379,\"NumberToRemove\":247,\"ContentToAdd\":\"{username}\\\\\\\", new StringContent(username, Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return result.IsSuccessStatusCode;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<bool> ChangePassword(string passwordChangeURL, string newPassword)\\\\r\\\\n        \"},{\"Position\":49634,\"NumberToRemove\":262,\"ContentToAdd\":\"{\\\\r\\\\n            var result = await client.PostAsync(passwordChangeURL, new StringContent(JsonConvert.SerializeObject((User, newPassword)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return result.IsSuccessStatusCode;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<string[]> Log()\\\\r\\\\n        \"},{\"Position\":49936,\"NumberToRemove\":104,\"ContentToAdd\":\"{\\\\r\\\\n            List<string> ret = new List<string>();\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            string path2 = Path + \\\\\\\"\\\\\\\\\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n            Commit temp = GetCommit(head, path2);\\\\r\\\\n            while (true)\\\\r\\\\n            \"},{\"Position\":50182,\"NumberToRemove\":339,\"ContentToAdd\":\"{\\\\r\\\\n                ret.Add(temp.Message);\\\\r\\\\n                if (temp.Parent == 0)\\\\r\\\\n                \"},{\"Position\":50286,\"NumberToRemove\":64,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                temp = GetCommit(temp.Parent, path2);\\\\r\\\\n            }\\\\r\\\\n            return ret.ToArray();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<string[]> Log(int number)\\\\r\\\\n        \"},{\"Position\":50533,\"NumberToRemove\":133,\"ContentToAdd\":\"{\\\\r\\\\n            string[] ret = new string[number];\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            string path2 = Path + \\\\\\\"\\\\\\\\\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n            Commit temp = GetCommit(head, path2);\\\\r\\\\n            for (int i = 0; i < number; i++)\\\\r\\\\n            \"},{\"Position\":50795,\"NumberToRemove\":260,\"ContentToAdd\":\"{\\\\r\\\\n                ret[i] = temp.Message;\\\\r\\\\n                if (temp.Parent == 0)\\\\r\\\\n                \"},{\"Position\":50899,\"NumberToRemove\":48,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                temp = GetCommit(temp.Parent, path2);\\\\r\\\\n            }\\\\r\\\\n            return ret;\\\\r\\\\n\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// WIP\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<PullResult> Pull()\\\\r\\\\n        \"},{\"Position\":51238,\"NumberToRemove\":140,\"ContentToAdd\":\"{\\\\r\\\\n            if (await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":51302,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                return PullResult.Uncommitted_Changes;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":51435,\"NumberToRemove\":83,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool allValid = true;\\\\r\\\\n            foreach (string path in Directory.EnumerateDirectories($@\\\\\\\"\"},{\"Position\":51695,\"NumberToRemove\":25,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":51743,\"NumberToRemove\":133,\"ContentToAdd\":\"{\\\\r\\\\n                string branchCheck = path.Remove(0, Path.Length + 19);\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":51883,\"NumberToRemove\":155,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":51913,\"NumberToRemove\":47,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":51996,\"NumberToRemove\":61,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":52021,\"NumberToRemove\":61,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) != branch1)\\\\r\\\\n                \"},{\"Position\":52154,\"NumberToRemove\":24,\"ContentToAdd\":\"{\\\\r\\\\n                    allValid = false;\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            if (allValid)\\\\r\\\\n            \"},{\"Position\":52309,\"NumberToRemove\":308,\"ContentToAdd\":\"{\\\\r\\\\n                Directory.Move(path2, $@\\\\\\\"\"},{\"Position\":52356,\"NumberToRemove\":64,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcTemp\\\\\\\");\\\\r\\\\n                Directory.Delete($@\\\\\\\"\"},{\"Position\":52417,\"NumberToRemove\":108,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\", true);\\\\r\\\\n                Directory.Move($@\\\\\\\"\"},{\"Position\":52478,\"NumberToRemove\":194,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcTemp\\\\\\\", $@\\\\\\\"\"},{\"Position\":52502,\"NumberToRemove\":30,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n                await Checkout(branch);\\\\r\\\\n                return PullResult.Success;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return PullResult.Merge_Conflict;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<Status> GetStatus(string branch)\\\\r\\\\n        \"},{\"Position\":52810,\"NumberToRemove\":54,\"ContentToAdd\":\"{\\\\r\\\\n            if (await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":52874,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                return Status.Uncommitted_Changes;\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":52982,\"NumberToRemove\":32,\"ContentToAdd\":\"{\\\\r\\\\n                string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n                await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":53176,\"NumberToRemove\":141,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":53206,\"NumberToRemove\":25,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n                if (!File.Exists($@\\\\\\\"\"},{\"Position\":53260,\"NumberToRemove\":215,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":53285,\"NumberToRemove\":134,\"ContentToAdd\":\"{branch}\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":53317,\"NumberToRemove\":135,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Ahead_of_Origin;\\\\r\\\\n                }\\\\r\\\\n                int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":53458,\"NumberToRemove\":155,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":53483,\"NumberToRemove\":47,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n                int ca = CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2);\\\\r\\\\n                Directory.Delete(path2, true);\\\\r\\\\n                if (branch1 == branch2)\\\\r\\\\n                \"},{\"Position\":53698,\"NumberToRemove\":203,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Up_to_Date;\\\\r\\\\n                }\\\\r\\\\n                else if (ca == branch1)\\\\r\\\\n                \"},{\"Position\":53832,\"NumberToRemove\":38,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Behind_Origin;\\\\r\\\\n                }\\\\r\\\\n                else//(ca == branch2)\\\\r\\\\n                \"},{\"Position\":53967,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Ahead_of_Origin;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            //else if (await CanPush(File.ReadAllText($@\\\\\\\"\"},{\"Position\":54122,\"NumberToRemove\":58,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")))\\\\r\\\\n            //\"},{\"Position\":54169,\"NumberToRemove\":109,\"ContentToAdd\":\"{\\\\r\\\\n            //    return Status.Up_to_Date;\\\\r\\\\n            //}\\\\r\\\\n            //return Status.Out_of_Date;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        public async Task<bool> Checkout(string branch)\\\\r\\\\n        \"},{\"Position\":54372,\"NumberToRemove\":102,\"ContentToAdd\":\"{\\\\r\\\\n            if (!File.Exists($@\\\\\\\"\"},{\"Position\":54410,\"NumberToRemove\":80,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":54440,\"NumberToRemove\":199,\"ContentToAdd\":\"{branch}\\\\\\\") || await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":54498,\"NumberToRemove\":106,\"ContentToAdd\":\"{\\\\r\\\\n                return false;\\\\r\\\\n            }\\\\r\\\\n            await Task.Run(async () =>\\\\r\\\\n            \"},{\"Position\":54607,\"NumberToRemove\":156,\"ContentToAdd\":\"{\\\\r\\\\n                foreach (string path in Directory.EnumerateDirectories(Path))\\\\r\\\\n                \"},{\"Position\":54709,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                    if (path != Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n                    \"},{\"Position\":54789,\"NumberToRemove\":161,\"ContentToAdd\":\"{\\\\r\\\\n                        Directory.Delete(path, true);\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                foreach (string path in Directory.EnumerateFiles(Path))\\\\r\\\\n                \"},{\"Position\":54988,\"NumberToRemove\":137,\"ContentToAdd\":\"{\\\\r\\\\n                    File.Delete(path);\\\\r\\\\n                }\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":55094,\"NumberToRemove\":163,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\", branch);\\\\r\\\\n                await SetFiles(JsonConvert.DeserializeObject<Folder>(GetUpdatedFiles(int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":55250,\"NumberToRemove\":139,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":55280,\"NumberToRemove\":257,\"ContentToAdd\":\"{branch}\\\\\\\")))), Path);\\\\r\\\\n            });\\\\r\\\\n            return true;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task SetFiles(Folder folder, string rootPath)\\\\r\\\\n        \"},{\"Position\":55441,\"NumberToRemove\":54,\"ContentToAdd\":\"{\\\\r\\\\n            Directory.CreateDirectory(rootPath + folder.Path);\\\\r\\\\n            foreach (FileObj file in folder.Files)\\\\r\\\\n            \"},{\"Position\":55578,\"NumberToRemove\":144,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllText(rootPath + file.Path, file.Contents);\\\\r\\\\n            }\\\\r\\\\n            foreach (Folder dir in folder.Folders)\\\\r\\\\n            \"},{\"Position\":55741,\"NumberToRemove\":79,\"ContentToAdd\":\"{\\\\r\\\\n                await SetFiles(dir, rootPath);\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<Folder> LoadFiles()\\\\r\\\\n        \"},{\"Position\":55880,\"NumberToRemove\":228,\"ContentToAdd\":\"{\\\\r\\\\n            return await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<Folder> LoadFiles(string path, int charsToRemoveFromPath, string[] excludedDirs, string regex, string rootPath = \\\\\\\"\\\\\\\")\\\\r\\\\n        \"},{\"Position\":56137,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n            if (rootPath == \\\\\\\"\\\\\\\")\\\\r\\\\n            \"},{\"Position\":56191,\"NumberToRemove\":243,\"ContentToAdd\":\"{\\\\r\\\\n                rootPath = path;\\\\r\\\\n            }\\\\r\\\\n            string[] firstCharsRemoved(string[] start, int charsToRem)\\\\r\\\\n            \"},{\"Position\":56335,\"NumberToRemove\":78,\"ContentToAdd\":\"{\\\\r\\\\n                for (int i = 0; i < start.Length; i++)\\\\r\\\\n                \"},{\"Position\":56414,\"NumberToRemove\":216,\"ContentToAdd\":\"{\\\\r\\\\n                    start[i] = start[i].Remove(0, charsToRem);\\\\r\\\\n                }\\\\r\\\\n                return start;\\\\r\\\\n            }\\\\r\\\\n            string[] exceptRegex(string[] array, string regExpression)\\\\r\\\\n            \"},{\"Position\":56642,\"NumberToRemove\":373,\"ContentToAdd\":\"{\\\\r\\\\n                if (regExpression == \\\\\\\"\\\\\\\")\\\\r\\\\n                \"},{\"Position\":56709,\"NumberToRemove\":85,\"ContentToAdd\":\"{\\\\r\\\\n                    return array;\\\\r\\\\n                }\\\\r\\\\n                Regex regexp = new Regex(regExpression);\\\\r\\\\n                var temp = array.ToList();\\\\r\\\\n                for (int i = 0; i < array.Length; i++)\\\\r\\\\n                \"},{\"Position\":56952,\"NumberToRemove\":14,\"ContentToAdd\":\"{\\\\r\\\\n                    if (regexp.IsMatch(array[i]))\\\\r\\\\n                    \"},{\"Position\":57030,\"NumberToRemove\":389,\"ContentToAdd\":\"{\\\\r\\\\n                        temp.Remove(array[i]);\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                return temp.ToArray();\\\\r\\\\n            }\\\\r\\\\n            Folder folder = new Folder()\\\\r\\\\n            \"},{\"Position\":57246,\"NumberToRemove\":60,\"ContentToAdd\":\"{\\\\r\\\\n                Path = path.Remove(0, charsToRemoveFromPath)\\\\r\\\\n            };\\\\r\\\\n            string[] filePaths = exceptRegex(firstCharsRemoved(Directory.GetFiles(path), charsToRemoveFromPath).Except(excludedDirs).ToArray(), regex);\\\\r\\\\n            folder.Files = new FileObj[filePaths.Length];\\\\r\\\\n            for (int i = 0; i < filePaths.Length; i++)\\\\r\\\\n            \"},{\"Position\":57619,\"NumberToRemove\":10,\"ContentToAdd\":\"{\\\\r\\\\n                folder.Files[i] = new FileObj(filePaths[i], File.ReadAllText($\\\\\\\"\"},{\"Position\":57704,\"NumberToRemove\":206,\"ContentToAdd\":\"{rootPath}\\\\\\\\\\\\\\\\\"},{\"Position\":57718,\"NumberToRemove\":96,\"ContentToAdd\":\"{filePaths[i]}\\\\\\\"));\\\\r\\\\n            }\\\\r\\\\n            Regex regextest = new Regex(regex);\\\\r\\\\n            var folderPaths = exceptRegex(firstCharsRemoved(Directory.GetDirectories(path), charsToRemoveFromPath).Except(excludedDirs).ToArray(), regex);\\\\r\\\\n            folder.Folders = new Folder[folderPaths.Length];\\\\r\\\\n\\\\r\\\\n            for (int i = 0; i < folderPaths.Length; i++)\\\\r\\\\n            \"},{\"Position\":58107,\"NumberToRemove\":23,\"ContentToAdd\":\"{\\\\r\\\\n                folder.Folders[i] = await LoadFiles($\\\\\\\"\"},{\"Position\":58167,\"NumberToRemove\":22,\"ContentToAdd\":\"{rootPath}\"},{\"Position\":58177,\"NumberToRemove\":268,\"ContentToAdd\":\"{folderPaths[i]}\\\\\\\", charsToRemoveFromPath, excludedDirs, regex, rootPath);\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            return folder;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        string GetUpdatedFiles(int latestCommit)\\\\r\\\\n        \"},{\"Position\":58383,\"NumberToRemove\":73,\"ContentToAdd\":\"{\\\\r\\\\n            Commit lastCommit = JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":58479,\"NumberToRemove\":30,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":58502,\"NumberToRemove\":22,\"ContentToAdd\":\"{latestCommit % 100}\\\\\\\\\"},{\"Position\":58524,\"NumberToRemove\":132,\"ContentToAdd\":\"{latestCommit / 100}\\\\\\\"));\\\\r\\\\n            return MergeDiffs(lastCommit.Parent == 0 ? \\\\\\\"\\\\\\\" : GetUpdatedFiles(lastCommit.Parent), JsonConvert.DeserializeObject<Diff[]>(lastCommit.Diffs));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task CreateBranch(string name)\\\\r\\\\n        \"},{\"Position\":58792,\"NumberToRemove\":60,\"ContentToAdd\":\"{\\\\r\\\\n            await CreateBranch(name, int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":58895,\"NumberToRemove\":109,\"ContentToAdd\":\"{File.ReadAllText($@\\\\\\\"\"},{\"Position\":58917,\"NumberToRemove\":112,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")}\\\\\\\")));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task CreateBranch(string name, int commitID)\\\\r\\\\n        \"},{\"Position\":59049,\"NumberToRemove\":167,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(() => File.WriteAllText($@\\\\\\\"\"},{\"Position\":59109,\"NumberToRemove\":59,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":59139,\"NumberToRemove\":228,\"ContentToAdd\":\"{name}\\\\\\\", commitID.ToString()));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task Clone(string orig)\\\\r\\\\n        \"},{\"Position\":59248,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n            await Clone(Path, orig, true, @\\\\\\\"\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n            await Checkout(File.ReadAllText($@\\\\\\\"\"},{\"Position\":59360,\"NumberToRemove\":343,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task Clone(string path, string orig, bool loadCommits, string dataAdditional = @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n        \"},{\"Position\":59527,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(async () =>\\\\r\\\\n            \"},{\"Position\":59586,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                string path2 = path + dataAdditional;\\\\r\\\\n                Directory.CreateDirectory(path2);\\\\r\\\\n                File.WriteAllText(path2 + @\\\\\\\"\\\\\\\\origin\\\\\\\", orig);\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":59814,\"NumberToRemove\":104,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\");\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":59881,\"NumberToRemove\":101,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\");\\\\r\\\\n                var received = await client.GetAsync(Origin + \\\\\\\"/branches\\\\\\\");\\\\r\\\\n                Dictionary<string, int> branches = JsonConvert.DeserializeObject<Dictionary<string, int>>(received.Content.ReadAsStringAsync().Result);\\\\r\\\\n                foreach (string branch in branches.Keys)\\\\r\\\\n                \"},{\"Position\":60224,\"NumberToRemove\":80,\"ContentToAdd\":\"{\\\\r\\\\n                    File.WriteAllText($@\\\\\\\"\"},{\"Position\":60271,\"NumberToRemove\":297,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":60296,\"NumberToRemove\":160,\"ContentToAdd\":\"{branch}\\\\\\\", branches[branch].ToString());\\\\r\\\\n                }\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":60400,\"NumberToRemove\":61,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\HEAD\\\\\\\", branches.Keys.ToArray()[0]);\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":60501,\"NumberToRemove\":16,\"ContentToAdd\":\"{path2}\\\\\\\\commits\\\\\\\");\\\\r\\\\n\\\\r\\\\n                if (loadCommits)\\\\r\\\\n                \"},{\"Position\":60581,\"NumberToRemove\":255,\"ContentToAdd\":\"{\\\\r\\\\n                    await GetAllCommits(path, branches.Keys.ToArray(), dataAdditional);\\\\r\\\\n                }\\\\r\\\\n            });\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async /*Task<Dictionary<int, Commit>>*/ Task GetAllCommits(string path, string[] branches, string extraString = @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n        \"},{\"Position\":60878,\"NumberToRemove\":44,\"ContentToAdd\":\"{\\\\r\\\\n            // Dictionary<int, Commit> allCommits = new Dictionary<int, Commit>();\\\\r\\\\n            for (int i = 0; i < branches.Length; i++)\\\\r\\\\n            \"},{\"Position\":61038,\"NumberToRemove\":6,\"ContentToAdd\":\"{\\\\r\\\\n                var received = await client.GetAsync($\\\\\\\"\"},{\"Position\":61099,\"NumberToRemove\":24,\"ContentToAdd\":\"{Origin}?branch=\"},{\"Position\":61115,\"NumberToRemove\":139,\"ContentToAdd\":\"{branches[i]}\\\\\\\");\\\\r\\\\n                Dictionary<int, Commit> commits = JsonConvert.DeserializeObject<Dictionary<int, Commit>>(received.Content.ReadAsStringAsync().Result);\\\\r\\\\n                for (int j = 0; j < commits.Keys.Count; j++)\\\\r\\\\n                \"},{\"Position\":61370,\"NumberToRemove\":9,\"ContentToAdd\":\"{\\\\r\\\\n                    string path2 = $@\\\\\\\"\"},{\"Position\":61414,\"NumberToRemove\":314,\"ContentToAdd\":\"{path}\"},{\"Position\":61420,\"NumberToRemove\":109,\"ContentToAdd\":\"{extraString}\\\\\\\\commits\\\\\\\\\"},{\"Position\":61444,\"NumberToRemove\":30,\"ContentToAdd\":\"{commits.Keys.ToArray()[j] % 100}\\\\\\\";\\\\r\\\\n                    Directory.CreateDirectory(path2);\\\\r\\\\n                    File.WriteAllText($@\\\\\\\"\"},{\"Position\":61583,\"NumberToRemove\":22,\"ContentToAdd\":\"{path2}\\\\\\\\\"},{\"Position\":61592,\"NumberToRemove\":142,\"ContentToAdd\":\"{commits.Keys.ToArray()[j] / 100}\\\\\\\", JsonConvert.SerializeObject(commits.Values.ToArray()[j]));\\\\r\\\\n                    // allCommits.Add(commits[j].GetHashCode(),commits[j]);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            //return allCommits;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<int> GetHead()\\\\r\\\\n        \"},{\"Position\":61906,\"NumberToRemove\":124,\"ContentToAdd\":\"{\\\\r\\\\n            int result = 0;\\\\r\\\\n            await Task.Run(() => result = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":62015,\"NumberToRemove\":23,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":62045,\"NumberToRemove\":67,\"ContentToAdd\":\"{File.ReadAllText($@\\\\\\\"\"},{\"Position\":62067,\"NumberToRemove\":95,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")}\\\\\\\")));\\\\r\\\\n            return result;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<int> Commit(Commit commit)\\\\r\\\\n        \"},{\"Position\":62209,\"NumberToRemove\":8,\"ContentToAdd\":\"{\\\\r\\\\n            Guid guid = Guid.NewGuid();\\\\r\\\\n            int hash = guid.GetHashCode();\\\\r\\\\n            string path = $@\\\\\\\"\"},{\"Position\":62333,\"NumberToRemove\":254,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":62356,\"NumberToRemove\":230,\"ContentToAdd\":\"{hash % 100}\\\\\\\";\\\\r\\\\n            await Task.Run(() =>\\\\r\\\\n            \"},{\"Position\":62423,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\\r\\\\n                Directory.CreateDirectory(path);\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":62518,\"NumberToRemove\":477,\"ContentToAdd\":\"{path}\\\\\\\\\"},{\"Position\":62526,\"NumberToRemove\":66,\"ContentToAdd\":\"{hash / 100}\\\\\\\", JsonConvert.SerializeObject(commit));\\\\r\\\\n            });\\\\r\\\\n            return hash;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task Commit(string author, string committer, string diffs, string message, int parentId, DateTime dateTime)\\\\r\\\\n        \"},{\"Position\":62780,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n            await Commit(new Commit(diffs, message, author, committer, parentId, dateTime));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task Commit(string message, string author, string committer, DateTime dateTime)\\\\r\\\\n        \"},{\"Position\":63010,\"NumberToRemove\":122,\"ContentToAdd\":\"{\\\\r\\\\n            if(dateTime == null)\\\\r\\\\n            \"},{\"Position\":63063,\"NumberToRemove\":54,\"ContentToAdd\":\"{\\\\r\\\\n                dateTime = DateTime.Now;\\\\r\\\\n            }\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            Commit commitToCommit = new Commit(JsonConvert.SerializeObject(await GetDiffs(GetUpdatedFiles(head), JsonConvert.SerializeObject(await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex)))), message, author, committer, head, dateTime);\\\\r\\\\n            int specialHash = await Commit(commitToCommit);\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":63540,\"NumberToRemove\":30,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            File.WriteAllText($@\\\\\\\"\"},{\"Position\":63606,\"NumberToRemove\":59,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":63636,\"NumberToRemove\":9,\"ContentToAdd\":\"{branch}\\\\\\\", specialHash.ToString());\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task DeleteBranch(string branch)\\\\r\\\\n        \"},{\"Position\":63758,\"NumberToRemove\":160,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(() => File.Delete($@\\\\\\\"\"},{\"Position\":63812,\"NumberToRemove\":478,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":63842,\"NumberToRemove\":219,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            //await client.DeleteAsync($\\\\\\\"\"},{\"Position\":63901,\"NumberToRemove\":30,\"ContentToAdd\":\"{Origin}/\"},{\"Position\":63910,\"NumberToRemove\":74,\"ContentToAdd\":\"{branch}\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        //TODO: Detect uncommitted changes or out-of-date repo\\\\r\\\\n        async Task<bool> UncommittedChanges()\\\\r\\\\n        \"},{\"Position\":64070,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            return (await GetDiffs(GetUpdatedFiles(head), JsonConvert.SerializeObject(await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex)))).Length != 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Describes whether or not a branch can be pushed without causing merge conflicts.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        async Task<bool> CanPush(string branch)\\\\r\\\\n        \"},{\"Position\":64548,\"NumberToRemove\":120,\"ContentToAdd\":\"{\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool canPush = false;\\\\r\\\\n            int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":64767,\"NumberToRemove\":214,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":64797,\"NumberToRemove\":219,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":64871,\"NumberToRemove\":30,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":64896,\"NumberToRemove\":74,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) == branch2)\\\\r\\\\n            \"},{\"Position\":65016,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                canPush = true;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return canPush;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        async Task<bool> CanPull(string branch)\\\\r\\\\n        \"},{\"Position\":65230,\"NumberToRemove\":120,\"ContentToAdd\":\"{\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool canPull = false;\\\\r\\\\n            int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":65449,\"NumberToRemove\":215,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":65479,\"NumberToRemove\":210,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":65553,\"NumberToRemove\":205,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":65578,\"NumberToRemove\":141,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) == branch1)\\\\r\\\\n            \"},{\"Position\":65698,\"NumberToRemove\":72,\"ContentToAdd\":\"{\\\\r\\\\n                canPull = true;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return canPull;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        int CommonAncestor(int commit1, int commit2)\\\\r\\\\n        \"},{\"Position\":65913,\"NumberToRemove\":139,\"ContentToAdd\":\"{\\\\r\\\\n            return CommonAncestor(commit1, commit2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        int CommonAncestor(int commit1, int commit2, string path1, string path2)\\\\r\\\\n        \"},{\"Position\":66123,\"NumberToRemove\":252,\"ContentToAdd\":\"{\\\\r\\\\n            int commit2Start = commit2;\\\\r\\\\n            Commit cmit = GetCommit(commit1, path1);\\\\r\\\\n            Commit cmit2Strt = GetCommit(commit2, path2);\\\\r\\\\n            while (true)\\\\r\\\\n            \"},{\"Position\":66328,\"NumberToRemove\":274,\"ContentToAdd\":\"{\\\\r\\\\n                Commit cmit2 = cmit2Strt;\\\\r\\\\n                commit2 = commit2Start;\\\\r\\\\n                while (true)\\\\r\\\\n                \"},{\"Position\":66469,\"NumberToRemove\":83,\"ContentToAdd\":\"{\\\\r\\\\n                    if (commit2 == commit1)\\\\r\\\\n                    \"},{\"Position\":66541,\"NumberToRemove\":20,\"ContentToAdd\":\"{\\\\r\\\\n                        return commit2;\\\\r\\\\n                    }\\\\r\\\\n                    if (cmit2.Parent == 0)\\\\r\\\\n                    \"},{\"Position\":66680,\"NumberToRemove\":12,\"ContentToAdd\":\"{\\\\r\\\\n                        break;\\\\r\\\\n                    }\\\\r\\\\n                    commit2 = cmit2.Parent;\\\\r\\\\n                    cmit2 = GetCommit(cmit2.Parent, path2);\\\\r\\\\n                }\\\\r\\\\n                if (cmit.Parent == 0)\\\\r\\\\n                \"},{\"Position\":66932,\"NumberToRemove\":344,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                commit1 = cmit.Parent;\\\\r\\\\n                cmit = GetCommit(cmit.Parent, path1);\\\\r\\\\n            }\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        Commit GetCommit(int id, string pvcPath)\\\\r\\\\n        \"},{\"Position\":67206,\"NumberToRemove\":145,\"ContentToAdd\":\"{\\\\r\\\\n            return JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":67289,\"NumberToRemove\":128,\"ContentToAdd\":\"{pvcPath}\\\\\\\\commits\\\\\\\\\"},{\"Position\":67309,\"NumberToRemove\":242,\"ContentToAdd\":\"{id % 100}\\\\\\\\\"},{\"Position\":67321,\"NumberToRemove\":74,\"ContentToAdd\":\"{id / 100}\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Pushes committed changes.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <param name=\\\\\\\"branchToPush\\\\\\\">The branch to push. If empty, pushes all branches.</param>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<PushResult> Push(string branchToPush = \\\\\\\"\\\\\\\")\\\\r\\\\n        \"},{\"Position\":67665,\"NumberToRemove\":52,\"ContentToAdd\":\"{\\\\r\\\\n            HttpStatusCode responseCode = HttpStatusCode.InternalServerError;\\\\r\\\\n            if (await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":67810,\"NumberToRemove\":105,\"ContentToAdd\":\"{\\\\r\\\\n                return PushResult.Uncommited_Changes;\\\\r\\\\n            }\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":67938,\"NumberToRemove\":134,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool allValid = true;\\\\r\\\\n            if (branchToPush == \\\\\\\"\\\\\\\")\\\\r\\\\n            \"},{\"Position\":68180,\"NumberToRemove\":152,\"ContentToAdd\":\"{\\\\r\\\\n                foreach (string path in Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":68254,\"NumberToRemove\":66,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":68306,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                    if (!await checkValid(path.Remove(0, Path.Length + 19)))\\\\r\\\\n                    \"},{\"Position\":68411,\"NumberToRemove\":58,\"ContentToAdd\":\"{\\\\r\\\\n                        break;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":68545,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                await checkValid(branchToPush);\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            async Task<bool> checkValid(string branchCheck)\\\\r\\\\n            \"},{\"Position\":68697,\"NumberToRemove\":37,\"ContentToAdd\":\"{\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":68763,\"NumberToRemove\":70,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":68793,\"NumberToRemove\":25,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                if (File.Exists($@\\\\\\\"\"},{\"Position\":68851,\"NumberToRemove\":141,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":68876,\"NumberToRemove\":231,\"ContentToAdd\":\"{branchCheck}\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":68913,\"NumberToRemove\":66,\"ContentToAdd\":\"{\\\\r\\\\n                    int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":68983,\"NumberToRemove\":78,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":69008,\"NumberToRemove\":56,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) != branch2)\\\\r\\\\n                    \"},{\"Position\":69149,\"NumberToRemove\":170,\"ContentToAdd\":\"{\\\\r\\\\n                        allValid = false;\\\\r\\\\n                        return false;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                return true;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            if (allValid)\\\\r\\\\n            \"},{\"Position\":69380,\"NumberToRemove\":158,\"ContentToAdd\":\"{\\\\r\\\\n                if (branchToPush == \\\\\\\"\\\\\\\")\\\\r\\\\n                \"},{\"Position\":69446,\"NumberToRemove\":70,\"ContentToAdd\":\"{\\\\r\\\\n                    foreach (string path in Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":69524,\"NumberToRemove\":30,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n                    \"},{\"Position\":69580,\"NumberToRemove\":105,\"ContentToAdd\":\"{\\\\r\\\\n                        await PushBranch(path.Remove(0, Path.Length + 19));\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                else\\\\r\\\\n                \"},{\"Position\":69750,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                    await PushBranch(branchToPush);\\\\r\\\\n                }\\\\r\\\\n                async Task PushBranch(string branchCheck)\\\\r\\\\n                \"},{\"Position\":69908,\"NumberToRemove\":41,\"ContentToAdd\":\"{\\\\r\\\\n                    int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":69978,\"NumberToRemove\":74,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":70008,\"NumberToRemove\":25,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    int commonAncestor;\\\\r\\\\n                    if (File.Exists($@\\\\\\\"\"},{\"Position\":70113,\"NumberToRemove\":200,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":70138,\"NumberToRemove\":141,\"ContentToAdd\":\"{branchCheck}\\\\\\\"))\\\\r\\\\n                    \"},{\"Position\":70179,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                        int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":70253,\"NumberToRemove\":186,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":70278,\"NumberToRemove\":116,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                        commonAncestor = CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2);\\\\r\\\\n                    }\\\\r\\\\n                    else\\\\r\\\\n                    \"},{\"Position\":70478,\"NumberToRemove\":23,\"ContentToAdd\":\"{\\\\r\\\\n                        commonAncestor = 0;\\\\r\\\\n                    }\\\\r\\\\n                    int commit = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":70619,\"NumberToRemove\":16,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":70649,\"NumberToRemove\":275,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    Dictionary<int, Commit> commits = new Dictionary<int, Commit>();\\\\r\\\\n                    while (commit != commonAncestor)\\\\r\\\\n                    \"},{\"Position\":70835,\"NumberToRemove\":9,\"ContentToAdd\":\"{\\\\r\\\\n                        Commit commitInCommitForm = JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":70951,\"NumberToRemove\":353,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":70974,\"NumberToRemove\":62,\"ContentToAdd\":\"{commit % 100}\\\\\\\\\"},{\"Position\":70990,\"NumberToRemove\":515,\"ContentToAdd\":\"{commit / 100}\\\\\\\"));\\\\r\\\\n                        commits.Add(commit, commitInCommitForm);\\\\r\\\\n                        commit = commitInCommitForm.Parent;\\\\r\\\\n                    }\\\\r\\\\n                    commits.Reverse();\\\\r\\\\n                    var response = client.PutAsync($\\\\\\\"\"},{\"Position\":71265,\"NumberToRemove\":241,\"ContentToAdd\":\"{Origin}/\"},{\"Position\":71274,\"NumberToRemove\":85,\"ContentToAdd\":\"{branchCheck}\\\\\\\", new StringContent(JsonConvert.SerializeObject((User, commits)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n                    responseCode = response.Result.StatusCode;\\\\r\\\\n                    await response;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            if (allValid)\\\\r\\\\n            \"},{\"Position\":71627,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n                switch (responseCode)\\\\r\\\\n                \"},{\"Position\":71689,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n                    case HttpStatusCode.OK:\\\\r\\\\n                        return PushResult.Success;\\\\r\\\\n                    case HttpStatusCode.Unauthorized:\\\\r\\\\n                        return PushResult.Authentication_Error;\\\\r\\\\n                    case HttpStatusCode.BadRequest:\\\\r\\\\n                        return PushResult.Bad_Request;\\\\r\\\\n                    default:\\\\r\\\\n                        return PushResult.No_Response_From_Server;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":72204,\"NumberToRemove\":82,\"ContentToAdd\":\"{\\\\r\\\\n                return PushResult.Conflict;\\\\r\\\\n            }\\\\r\\\\n            //await client.PostAsync(Origin, new StringContent(JsonConvert.SerializeObject(commit), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":72445,\"NumberToRemove\":77,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\RegisterResult.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":72586,\"NumberToRemove\":43,\"ContentToAdd\":\"{\\\\r\\\\n        public enum RegisterResult\\\\r\\\\n        \"},{\"Position\":72637,\"NumberToRemove\":171,\"ContentToAdd\":\"{\\\\r\\\\n            Success,\\\\r\\\\n            Failure\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":72719,\"NumberToRemove\":64,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Status.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeLibrary\\\\r\\\\n\"},{\"Position\":72796,\"NumberToRemove\":219,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":72852,\"NumberToRemove\":94,\"ContentToAdd\":\"{\\\\r\\\\n        public enum Status\\\\r\\\\n        \"},{\"Position\":72895,\"NumberToRemove\":68,\"ContentToAdd\":\"{\\\\r\\\\n            Uncommitted_Changes,\\\\r\\\\n            Ahead_of_Origin,\\\\r\\\\n            Behind_Origin,\\\\r\\\\n            Up_to_Date\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":73066,\"NumberToRemove\":108,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\.pvcignore\\\",\\\"Contents\\\":\\\"R: bin|vs|obj|packages\\\\r\\\\n\\\"},\"},{\"Position\":73130,\"NumberToRemove\":68,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient.sln\\\",\\\"Contents\\\":\\\"Microsoft Visual Studio Solution File, Format Version 12.00\\\\r\\\\n# Visual Studio 15\\\\r\\\\nVisualStudioVersion = 15.0.27004.2005\\\\r\\\\nMinimumVisualStudioVersion = 10.0.40219.1\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":73349,\"NumberToRemove\":109,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCClient\\\\\\\", \\\\\\\"PVCClient\\\\\\\\PVCClient.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":73443,\"NumberToRemove\":302,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":73511,\"NumberToRemove\":86,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCPipeLibrary\\\\\\\", \\\\\\\"PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":73619,\"NumberToRemove\":84,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":73687,\"NumberToRemove\":90,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCCommandLine\\\\\\\", \\\\\\\"PVCCommandLine\\\\\\\\PVCCommandLine.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":73796,\"NumberToRemove\":88,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nGlobal\\\\r\\\\n\\\\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\\\\r\\\\n\\\\t\\\\tDebug|Any CPU = Debug|Any CPU\\\\r\\\\n\\\\t\\\\tRelease|Any CPU = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":74098,\"NumberToRemove\":86,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":74184,\"NumberToRemove\":84,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":74268,\"NumberToRemove\":90,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":74358,\"NumberToRemove\":88,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":74446,\"NumberToRemove\":86,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":74532,\"NumberToRemove\":84,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":74616,\"NumberToRemove\":90,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":74706,\"NumberToRemove\":288,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":74794,\"NumberToRemove\":80,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":74880,\"NumberToRemove\":38,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":74964,\"NumberToRemove\":0,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":75054,\"NumberToRemove\":0,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(SolutionProperties) = preSolution\\\\r\\\\n\\\\t\\\\tHideSolutionNode = FALSE\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ExtensibilityGlobals) = postSolution\\\\r\\\\n\\\\t\\\\tSolutionGuid = \"},{\"Position\":75342,\"NumberToRemove\":0,\"ContentToAdd\":\"{78911CB1-A8D8-4CCA-BCF1-C4390A8F96AE}\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\nEndGlobal\\\\r\\\\n\\\"},\"},{\"Position\":75422,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Uh-oh.txt\\\",\\\"Contents\\\":\\\"\\\"}]}\"}]","Parent":24818296,"Message":"Worked on command line tool. Taught Dylan some async and webAPI stuff. Commandline tool can now log in. Next, continue to test and implement push, pull, logout, and others.","Author":"penguinee232","Committer":"penguinee232","DateAndTime":"2018-11-25T16:40:30.3783037-08:00"}