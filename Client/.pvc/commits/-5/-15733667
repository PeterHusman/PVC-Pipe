{"Diffs":"[{\"Position\":1706,\"NumberToRemove\":255,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient\\\\\\\\App.config\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<configuration>\\\\r\\\\n    <startup> \\\\r\\\\n        <supportedRuntime version=\\\\\\\"v4.0\\\\\\\" sku=\\\\\\\".NETFramework,Version=v4.7.1\\\\\\\" />\\\\r\\\\n    </startup>\\\\r\\\\n  <runtime>\\\\r\\\\n    <assemblyBinding xmlns=\\\\\\\"urn:schemas-microsoft-com:asm.v1\\\\\\\">\\\\r\\\\n      <dependentAssembly>\\\\r\\\\n        <assemblyIdentity name=\\\\\\\"System.ValueTuple\\\\\\\" publicKeyToken=\\\\\\\"cc7b13ffcd2ddd51\\\\\\\" culture=\\\\\\\"neutral\\\\\\\" />\\\\r\\\\n        <bindingRedirect oldVersion=\\\\\\\"0.0.0.0-4.0.3.0\\\\\\\" newVersion=\\\\\\\"4.0.3.0\\\\\\\" />\\\\r\\\\n      </dependentAssembly>\\\\r\\\\n    </assemblyBinding>\\\\r\\\\n  </runtime>\\\\r\\\\n</configuration>\\\\r\\\\n\\\"},\"},{\"Position\":2764,\"NumberToRemove\":119,\"ContentToAdd\":\"{\\\\r\\\\n            //pvc ARG -arg\\\\r\\\\n            //Directory.GetCurrentDirectory()\\\\r\\\\n\\\\r\\\\n            Account account = null;\\\\r\\\\n            bool exit = false;\\\\r\\\\n            while (!exit)\\\\r\\\\n            \"},{\"Position\":12724,\"NumberToRemove\":139,\"ContentToAdd\":\"{\\\\r\\\\n                    Console.WriteLine(\\\\\\\"\\\\\\\\t\\\\\\\" + cmd);\\\\r\\\\n                }\\\\r\\\\n\\\\r\\\\n                while (true)\\\\r\\\\n                \"},{\"Position\":18896,\"NumberToRemove\":2621,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}</ProjectGuid>\\\\r\\\\n    <OutputType>Exe</OutputType>\\\\r\\\\n    <RootNamespace>PVCClient</RootNamespace>\\\\r\\\\n    <AssemblyName>PVCClient</AssemblyName>\\\\r\\\\n    <TargetFrameworkVersion>v4.7.1</TargetFrameworkVersion>\\\\r\\\\n    <FileAlignment>512</FileAlignment>\\\\r\\\\n    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>\\\\r\\\\n    <TargetFrameworkProfile />\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \\\\\\\">\\\\r\\\\n    <PlatformTarget>AnyCPU</PlatformTarget>\\\\r\\\\n    <DebugSymbols>true</DebugSymbols>\\\\r\\\\n    <DebugType>full</DebugType>\\\\r\\\\n    <Optimize>false</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Debug\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n    <LangVersion>latest</LangVersion>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \\\\\\\">\\\\r\\\\n    <PlatformTarget>AnyCPU</PlatformTarget>\\\\r\\\\n    <DebugType>pdbonly</DebugType>\\\\r\\\\n    <Optimize>true</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Release\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Reference Include=\\\\\\\"McMaster.Extensions.CommandLineUtils, Version=2.2.5.0, Culture=neutral, PublicKeyToken=6f71cb76b82f055d, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\McMaster.Extensions.CommandLineUtils.2.2.5\\\\\\\\lib\\\\\\\\net45\\\\\\\\McMaster.Extensions.CommandLineUtils.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"Newtonsoft.Json, Version=11.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\Newtonsoft.Json.11.0.2\\\\\\\\lib\\\\\\\\net45\\\\\\\\Newtonsoft.Json.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ComponentModel.DataAnnotations\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Core\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\System.ValueTuple.4.5.0\\\\\\\\lib\\\\\\\\net47\\\\\\\\System.ValueTuple.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml.Linq\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data.DataSetExtensions\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"Microsoft.CSharp\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Net.Http\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Compile Include=\\\\\\\"Program.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Properties\\\\\\\\AssemblyInfo.cs\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <None Include=\\\\\\\"App.config\\\\\\\" />\\\\r\\\\n    <None Include=\\\\\\\"packages.config\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <ProjectReference Include=\\\\\\\"..\\\\\\\\PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\\\\\">\\\\r\\\\n      <Project>\"},{\"Position\":22135,\"NumberToRemove\":37,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\",\\\"Folders\\\":[\"},{\"Position\":22173,\"NumberToRemove\":60,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\Properties\\\",\\\"Folders\\\":[],\\\"Files\\\":[\"},{\"Position\":22234,\"NumberToRemove\":1607,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\Properties\\\\\\\\AssemblyInfo.cs\\\",\\\"Contents\\\":\\\"using System.Reflection;\\\\r\\\\nusing System.Runtime.CompilerServices;\\\\r\\\\nusing System.Runtime.InteropServices;\\\\r\\\\n\\\\r\\\\n// General Information about an assembly is controlled through the following\\\\r\\\\n// set of attributes. Change these attribute values to modify the information\\\\r\\\\n// associated with an assembly.\\\\r\\\\n[assembly: AssemblyTitle(\\\\\\\"PVCCommandLine\\\\\\\")]\\\\r\\\\n[assembly: AssemblyDescription(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyConfiguration(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCompany(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyProduct(\\\\\\\"PVCCommandLine\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCopyright(\\\\\\\"Copyright Â©  2018\\\\\\\")]\\\\r\\\\n[assembly: AssemblyTrademark(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCulture(\\\\\\\"\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Setting ComVisible to false makes the types in this assembly not visible\\\\r\\\\n// to COM components.  If you need to access a type in this assembly from\\\\r\\\\n// COM, set the ComVisible attribute to true on that type.\\\\r\\\\n[assembly: ComVisible(false)]\\\\r\\\\n\\\\r\\\\n// The following GUID is for the ID of the typelib if this project is exposed to COM\\\\r\\\\n[assembly: Guid(\\\\\\\"300570ec-ee81-4c45-a08f-7a2cb6fe22e9\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Version information for an assembly consists of the following four values:\\\\r\\\\n//\\\\r\\\\n//      Major Version\\\\r\\\\n//      Minor Version\\\\r\\\\n//      Build Number\\\\r\\\\n//      Revision\\\\r\\\\n//\\\\r\\\\n// You can specify all the values or you can default the Build and Revision Numbers\\\\r\\\\n// by using the '*' as shown below:\\\\r\\\\n// [assembly: AssemblyVersion(\\\\\\\"1.0.*\\\\\\\")]\\\\r\\\\n[assembly: AssemblyVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n[assembly: AssemblyFileVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":23844,\"NumberToRemove\":77,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\App.config\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\" ?>\\\\r\\\\n<configuration>\\\\r\\\\n    <startup> \\\\r\\\\n        <supportedRuntime version=\\\\\\\"v4.0\\\\\\\" sku=\\\\\\\".NETFramework,Version=v4.6.1\\\\\\\" />\\\\r\\\\n    </startup>\\\\r\\\\n</configuration>\\\"},\"},{\"Position\":24102,\"NumberToRemove\":37,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\Program.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing McMaster.Extensions.CommandLineUtils;\\\\r\\\\n\\\\r\\\\nnamespace PVCCommandLine\\\\r\\\\n\"},{\"Position\":24363,\"NumberToRemove\":143,\"ContentToAdd\":\"{\\\\r\\\\n    class Program\\\\r\\\\n    \"},{\"Position\":24393,\"NumberToRemove\":107,\"ContentToAdd\":\"{\\\\r\\\\n        static void Main(string[] args)\\\\r\\\\n        \"},{\"Position\":24449,\"NumberToRemove\":211,\"ContentToAdd\":\"{\\\\r\\\\n            CommandLineApplication.ExecuteAsync<Program>(args);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        //https://github.com/natemcmaster/CommandLineUtils/blob/master/docs/samples/subcommands/inheritance/Program.cs\\\\r\\\\n        //CredentialCache\\\\r\\\\n        //NetworkCredential\\\\r\\\\n\\\\r\\\\n        [Option()]\\\\r\\\\n        \\\\r\\\\n        public string Command \"},{\"Position\":24788,\"NumberToRemove\":36,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public async Task OnExecuteAsync()\\\\r\\\\n        \"},{\"Position\":24863,\"NumberToRemove\":33,\"ContentToAdd\":\"{\\\\r\\\\n            ;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n\\\\r\\\\n    [HelpOption(\\\\\\\"--help\\\\\\\")]\\\\r\\\\n    abstract class CommandBase\\\\r\\\\n    \"},{\"Position\":24981,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n        public abstract List<string> CreateArgs();\\\\r\\\\n\\\\r\\\\n        protected virtual async Task<int> OnExecuteAsync(CommandLineApplication app)\\\\r\\\\n        \"},{\"Position\":25140,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n            var args = CreateArgs();\\\\r\\\\n\\\\r\\\\n            Console.WriteLine(\\\\\\\"Result = pvc \\\\\\\" + ArgumentEscaper.EscapeAndConcatenate(args));\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":25342,\"NumberToRemove\":50,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCCommandLine\\\\\\\\PVCCommandLine.csproj\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<Project ToolsVersion=\\\\\\\"15.0\\\\\\\" xmlns=\\\\\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\\\\\">\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props\\\\\\\" Condition=\\\\\\\"Exists('$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props')\\\\\\\" />\\\\r\\\\n  <PropertyGroup>\\\\r\\\\n    <Configuration Condition=\\\\\\\" '$(Configuration)' == '' \\\\\\\">Debug</Configuration>\\\\r\\\\n    <Platform Condition=\\\\\\\" '$(Platform)' == '' \\\\\\\">AnyCPU</Platform>\\\\r\\\\n    <ProjectGuid>\"},{\"Position\":25939,\"NumberToRemove\":53,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}</ProjectGuid>\\\\r\\\\n    <OutputType>Exe</OutputType>\\\\r\\\\n    <RootNamespace>PVCCommandLine</RootNamespace>\\\\r\\\\n    <AssemblyName>PVCCommandLine</AssemblyName>\\\\r\\\\n    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>\\\\r\\\\n    <FileAlignment>512</FileAlignment>\\\\r\\\\n    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>\\\\r\\\\n    <Deterministic>true</Deterministic>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \\\\\\\">\\\\r\\\\n    <PlatformTarget>AnyCPU</PlatformTarget>\\\\r\\\\n    <DebugSymbols>true</DebugSymbols>\\\\r\\\\n    <DebugType>full</DebugType>\\\\r\\\\n    <Optimize>false</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Debug\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n    <LangVersion>7.3</LangVersion>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \\\\\\\">\\\\r\\\\n    <PlatformTarget>AnyCPU</PlatformTarget>\\\\r\\\\n    <DebugType>pdbonly</DebugType>\\\\r\\\\n    <Optimize>true</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Release\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Reference Include=\\\\\\\"McMaster.Extensions.CommandLineUtils, Version=2.2.5.0, Culture=neutral, PublicKeyToken=6f71cb76b82f055d, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\McMaster.Extensions.CommandLineUtils.2.2.5\\\\\\\\lib\\\\\\\\net45\\\\\\\\McMaster.Extensions.CommandLineUtils.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ComponentModel.DataAnnotations\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Core\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ValueTuple, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\System.ValueTuple.4.4.0\\\\\\\\lib\\\\\\\\net461\\\\\\\\System.ValueTuple.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml.Linq\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data.DataSetExtensions\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"Microsoft.CSharp\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Net.Http\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Compile Include=\\\\\\\"Program.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Properties\\\\\\\\AssemblyInfo.cs\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <None Include=\\\\\\\"App.config\\\\\\\" />\\\\r\\\\n    <None Include=\\\\\\\"packages.config\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <ProjectReference Include=\\\\\\\"..\\\\\\\\PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\\\\\">\\\\r\\\\n      <Project>\"},{\"Position\":28709,\"NumberToRemove\":57,\"ContentToAdd\":\"{3671d7ca-1c5e-469d-9266-8e3617330b7b}</Project>\\\\r\\\\n      <Name>PVCPipeLibrary</Name>\\\\r\\\\n    </ProjectReference>\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildToolsPath)\\\\\\\\Microsoft.CSharp.targets\\\\\\\" />\\\\r\\\\n</Project>\\\"}]},\"},{\"Position\":28932,\"NumberToRemove\":148,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\",\\\"Folders\\\":[\"},{\"Position\":28969,\"NumberToRemove\":240,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Properties\\\",\\\"Folders\\\":[],\\\"Files\\\":[\"},{\"Position\":29029,\"NumberToRemove\":80,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Properties\\\\\\\\AssemblyInfo.cs\\\",\\\"Contents\\\":\\\"using System.Reflection;\\\\r\\\\nusing System.Runtime.CompilerServices;\\\\r\\\\nusing System.Runtime.InteropServices;\\\\r\\\\n\\\\r\\\\n// General Information about an assembly is controlled through the following\\\\r\\\\n// set of attributes. Change these attribute values to modify the information\\\\r\\\\n// associated with an assembly.\\\\r\\\\n[assembly: AssemblyTitle(\\\\\\\"PVCPipeClient\\\\\\\")]\\\\r\\\\n[assembly: AssemblyDescription(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyConfiguration(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCompany(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyProduct(\\\\\\\"PVCPipeClient\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCopyright(\\\\\\\"Copyright Â©  2018\\\\\\\")]\\\\r\\\\n[assembly: AssemblyTrademark(\\\\\\\"\\\\\\\")]\\\\r\\\\n[assembly: AssemblyCulture(\\\\\\\"\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Setting ComVisible to false makes the types in this assembly not visible\\\\r\\\\n// to COM components.  If you need to access a type in this assembly from\\\\r\\\\n// COM, set the ComVisible attribute to true on that type.\\\\r\\\\n[assembly: ComVisible(false)]\\\\r\\\\n\\\\r\\\\n// The following GUID is for the ID of the typelib if this project is exposed to COM\\\\r\\\\n[assembly: Guid(\\\\\\\"3671d7ca-1c5e-469d-9266-8e3617330b7b\\\\\\\")]\\\\r\\\\n\\\\r\\\\n// Version information for an assembly consists of the following four values:\\\\r\\\\n//\\\\r\\\\n//      Major Version\\\\r\\\\n//      Minor Version\\\\r\\\\n//      Build Number\\\\r\\\\n//      Revision\\\\r\\\\n//\\\\r\\\\n// You can specify all the values or you can default the Build and Revision Numbers\\\\r\\\\n// by using the '*' as shown below:\\\\r\\\\n// [assembly: AssemblyVersion(\\\\\\\"1.0.*\\\\\\\")]\\\\r\\\\n[assembly: AssemblyVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n[assembly: AssemblyFileVersion(\\\\\\\"1.0.0.0\\\\\\\")]\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":30636,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Account.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeClient\\\\r\\\\n\"},{\"Position\":30713,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n    public class Account\\\\r\\\\n    \"},{\"Position\":30750,\"NumberToRemove\":129,\"ContentToAdd\":\"{\\\\r\\\\n        public string Username;\\\\r\\\\n        public string Password;\\\\r\\\\n        public Account(string username, string password)\\\\r\\\\n        \"},{\"Position\":30893,\"NumberToRemove\":80,\"ContentToAdd\":\"{\\\\r\\\\n            Username = username;\\\\r\\\\n            Password = password;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":31000,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Commit.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\n\\\\r\\\\nnamespace PVCPipeClient\\\\r\\\\n\"},{\"Position\":31211,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n    public class Commit\\\\r\\\\n    \"},{\"Position\":31247,\"NumberToRemove\":238,\"ContentToAdd\":\"{\\\\r\\\\n        public string Diffs \"},{\"Position\":31280,\"NumberToRemove\":596,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public int Parent \"},{\"Position\":31327,\"NumberToRemove\":2660,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Message \"},{\"Position\":31378,\"NumberToRemove\":357,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Author \"},{\"Position\":31428,\"NumberToRemove\":56,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Committer \"},{\"Position\":31481,\"NumberToRemove\":45,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public DateTime DateAndTime \"},{\"Position\":31538,\"NumberToRemove\":165,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public Commit(string diffs, string message, string author, string committer, int parent, DateTime dateTime)\\\\r\\\\n        \"},{\"Position\":31686,\"NumberToRemove\":155,\"ContentToAdd\":\"{\\\\r\\\\n            Diffs = diffs;\\\\r\\\\n            Message = message;\\\\r\\\\n            Author = author;\\\\r\\\\n            Committer = committer;\\\\r\\\\n            Parent = parent;\\\\r\\\\n            DateAndTime = dateTime;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":31926,\"NumberToRemove\":145,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PullResult.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeClient\\\\r\\\\n\"},{\"Position\":32006,\"NumberToRemove\":202,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":32062,\"NumberToRemove\":189,\"ContentToAdd\":\"{\\\\r\\\\n        public enum PullResult\\\\r\\\\n        \"},{\"Position\":32109,\"NumberToRemove\":85,\"ContentToAdd\":\"{\\\\r\\\\n            Success = 0,\\\\r\\\\n            Uncommitted_Changes,\\\\r\\\\n            Merge_Conflict\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":32238,\"NumberToRemove\":45,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PushResult.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeClient\\\\r\\\\n\"},{\"Position\":32318,\"NumberToRemove\":113,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":32374,\"NumberToRemove\":62,\"ContentToAdd\":\"{\\\\r\\\\n        public enum PushResult\\\\r\\\\n        \"},{\"Position\":32421,\"NumberToRemove\":111,\"ContentToAdd\":\"{\\\\r\\\\n            Success = 0,\\\\r\\\\n            Uncommited_Changes,\\\\r\\\\n            Conflict,\\\\r\\\\n            Authentication_Error,\\\\r\\\\n            Nonexistant_Repository,\\\\r\\\\n            No_Response_From_Server\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":32659,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\",\\\"Contents\\\":\\\"<?xml version=\\\\\\\"1.0\\\\\\\" encoding=\\\\\\\"utf-8\\\\\\\"?>\\\\r\\\\n<Project ToolsVersion=\\\\\\\"15.0\\\\\\\" xmlns=\\\\\\\"http://schemas.microsoft.com/developer/msbuild/2003\\\\\\\">\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props\\\\\\\" Condition=\\\\\\\"Exists('$(MSBuildExtensionsPath)\\\\\\\\$(MSBuildToolsVersion)\\\\\\\\Microsoft.Common.props')\\\\\\\" />\\\\r\\\\n  <PropertyGroup>\\\\r\\\\n    <Configuration Condition=\\\\\\\" '$(Configuration)' == '' \\\\\\\">Debug</Configuration>\\\\r\\\\n    <Platform Condition=\\\\\\\" '$(Platform)' == '' \\\\\\\">AnyCPU</Platform>\\\\r\\\\n    <ProjectGuid>\"},{\"Position\":33255,\"NumberToRemove\":185,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}</ProjectGuid>\\\\r\\\\n    <OutputType>Library</OutputType>\\\\r\\\\n    <AppDesignerFolder>Properties</AppDesignerFolder>\\\\r\\\\n    <RootNamespace>PVCPipeClient</RootNamespace>\\\\r\\\\n    <AssemblyName>PVCPipeClient</AssemblyName>\\\\r\\\\n    <TargetFrameworkVersion>v4.6.1</TargetFrameworkVersion>\\\\r\\\\n    <FileAlignment>512</FileAlignment>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \\\\\\\">\\\\r\\\\n    <DebugSymbols>true</DebugSymbols>\\\\r\\\\n    <DebugType>full</DebugType>\\\\r\\\\n    <Optimize>false</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Debug\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>DEBUG;TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \\\\\\\">\\\\r\\\\n    <DebugType>pdbonly</DebugType>\\\\r\\\\n    <Optimize>true</Optimize>\\\\r\\\\n    <OutputPath>bin\\\\\\\\Release\\\\\\\\</OutputPath>\\\\r\\\\n    <DefineConstants>TRACE</DefineConstants>\\\\r\\\\n    <ErrorReport>prompt</ErrorReport>\\\\r\\\\n    <WarningLevel>4</WarningLevel>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Reference Include=\\\\\\\"Newtonsoft.Json, Version=11.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\Newtonsoft.Json.11.0.2\\\\\\\\lib\\\\\\\\net45\\\\\\\\Newtonsoft.Json.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Core\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.ValueTuple, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL\\\\\\\">\\\\r\\\\n      <HintPath>..\\\\\\\\packages\\\\\\\\System.ValueTuple.4.5.0\\\\\\\\lib\\\\\\\\net461\\\\\\\\System.ValueTuple.dll</HintPath>\\\\r\\\\n    </Reference>\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml.Linq\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data.DataSetExtensions\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"Microsoft.CSharp\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Data\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Net.Http\\\\\\\" />\\\\r\\\\n    <Reference Include=\\\\\\\"System.Xml\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Compile Include=\\\\\\\"Account.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Commit.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Properties\\\\\\\\AssemblyInfo.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"PullResult.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"PushResult.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"PVCServerInterface.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"RegisterResult.cs\\\\\\\" />\\\\r\\\\n    <Compile Include=\\\\\\\"Status.cs\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <None Include=\\\\\\\"packages.config\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n  <Import Project=\\\\\\\"$(MSBuildToolsPath)\\\\\\\\Microsoft.CSharp.targets\\\\\\\" />\\\\r\\\\n</Project>\\\"},\"},{\"Position\":35915,\"NumberToRemove\":105,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\PVCServerInterface.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.IO;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Net;\\\\r\\\\nusing System.Net.Http;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Text.RegularExpressions;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing Newtonsoft.Json;\\\\r\\\\n\\\\r\\\\nnamespace PVCPipeClient\\\\r\\\\n\"},{\"Position\":36272,\"NumberToRemove\":290,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":36328,\"NumberToRemove\":59,\"ContentToAdd\":\"{        \\\\r\\\\n        class Folder\\\\r\\\\n        \"},{\"Position\":36373,\"NumberToRemove\":86,\"ContentToAdd\":\"{\\\\r\\\\n            public string Path;\\\\r\\\\n            public Folder[] Folders;\\\\r\\\\n            public FileObj[] Files;\\\\r\\\\n        }\\\\r\\\\n        class FileObj\\\\r\\\\n        \"},{\"Position\":36538,\"NumberToRemove\":41,\"ContentToAdd\":\"{\\\\r\\\\n            public string Path;\\\\r\\\\n            public string Contents;\\\\r\\\\n\\\\r\\\\n            public FileObj(string path, string contents)\\\\r\\\\n            \"},{\"Position\":36693,\"NumberToRemove\":122,\"ContentToAdd\":\"{\\\\r\\\\n                Path = path;\\\\r\\\\n                Contents = contents;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        class Diff\\\\r\\\\n        \"},{\"Position\":36838,\"NumberToRemove\":42,\"ContentToAdd\":\"{\\\\r\\\\n            public int Position;\\\\r\\\\n            public int NumberToRemove;\\\\r\\\\n            public string ContentToAdd;\\\\r\\\\n            public Diff(int pos, int numToRem, string toAdd)\\\\r\\\\n            \"},{\"Position\":37040,\"NumberToRemove\":229,\"ContentToAdd\":\"{\\\\r\\\\n                Position = pos;\\\\r\\\\n                NumberToRemove = numToRem;\\\\r\\\\n                ContentToAdd = toAdd;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public Account User \"},{\"Position\":37229,\"NumberToRemove\":244,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public async Task<string> GetCurrentBranch()\\\\r\\\\n        \"},{\"Position\":37314,\"NumberToRemove\":77,\"ContentToAdd\":\"{\\\\r\\\\n            return File.ReadAllText($@\\\\\\\"\"},{\"Position\":37359,\"NumberToRemove\":277,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<string[]> GetAllBranches()\\\\r\\\\n        \"},{\"Position\":37472,\"NumberToRemove\":218,\"ContentToAdd\":\"{\\\\r\\\\n            string[] temp = Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":37534,\"NumberToRemove\":315,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\").ToArray();\\\\r\\\\n            for (int i = 0; i < temp.Length; i++)\\\\r\\\\n            \"},{\"Position\":37645,\"NumberToRemove\":144,\"ContentToAdd\":\"{\\\\r\\\\n                temp[i] = temp[i].Remove(0, $@\\\\\\\"\"},{\"Position\":37698,\"NumberToRemove\":282,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\\\\\\\".Length);\\\\r\\\\n            }\\\\r\\\\n            return temp;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        async Task<Diff[]> GetDiffs(string left, string right)\\\\r\\\\n        \"},{\"Position\":37883,\"NumberToRemove\":71,\"ContentToAdd\":\"{\\\\r\\\\n            List<Diff> diffs = new List<Diff>();\\\\r\\\\n            await Task.Run(() =>\\\\r\\\\n            \"},{\"Position\":37988,\"NumberToRemove\":239,\"ContentToAdd\":\"{\\\\r\\\\n                //Try checking each character of right against left until there is a mismatch. Then maybe recursive call on shortened file?\\\\r\\\\n                //New strat: For now, trying out comparing lines. Check line against line\\\\r\\\\n                string[] leftLines = left.Split('\"},{\"Position\":38278,\"NumberToRemove\":36,\"ContentToAdd\":\"{');\\\\r\\\\n                string[] rightLines = right.Split('\"},{\"Position\":38337,\"NumberToRemove\":49,\"ContentToAdd\":\"{');\\\\r\\\\n                for (int i = 1; i < leftLines.Length; i++)\\\\r\\\\n                \"},{\"Position\":38423,\"NumberToRemove\":89,\"ContentToAdd\":\"{\\\\r\\\\n                    leftLines[i] = '\"},{\"Position\":38464,\"NumberToRemove\":69,\"ContentToAdd\":\"{' + leftLines[i];\\\\r\\\\n                }\\\\r\\\\n                for (int i = 1; i < rightLines.Length; i++)\\\\r\\\\n                \"},{\"Position\":38586,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n                    rightLines[i] = '\"},{\"Position\":38628,\"NumberToRemove\":42,\"ContentToAdd\":\"{' + rightLines[i];\\\\r\\\\n                }\\\\r\\\\n                int loopLength = leftLines.Length > rightLines.Length ? leftLines.Length : rightLines.Length;\\\\r\\\\n                for (int i = 0; i < loopLength; i++)\\\\r\\\\n                \"},{\"Position\":38857,\"NumberToRemove\":42,\"ContentToAdd\":\"{\\\\r\\\\n                    string strLeft = i < leftLines.Length ? leftLines[i] : null;\\\\r\\\\n                    string strRight = i < rightLines.Length ? rightLines[i] : null;\\\\r\\\\n                    if (strLeft != strRight)\\\\r\\\\n                    \"},{\"Position\":39101,\"NumberToRemove\":45,\"ContentToAdd\":\"{\\\\r\\\\n                        if (strLeft == null)\\\\r\\\\n                        \"},{\"Position\":39178,\"NumberToRemove\":98,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, leftLines.Length) + cumulativeLength(rightLines, i, leftLines.Length), 0, strRight));\\\\r\\\\n                        }\\\\r\\\\n                        else if (strRight == null)\\\\r\\\\n                        \"},{\"Position\":39455,\"NumberToRemove\":307,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, rightLines.Length), leftLines[i].Length, \\\\\\\"\\\\\\\"));\\\\r\\\\n                        }\\\\r\\\\n                        else\\\\r\\\\n                        \"},{\"Position\":39673,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n                            diffs.Add(new Diff(cumulativeLength(rightLines, i), leftLines[i].Length, strRight));\\\\r\\\\n                        }\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                int cumulativeLength(string[] array, int endingIndexPlusOne, int startingIndex = 0)\\\\r\\\\n                \"},{\"Position\":39988,\"NumberToRemove\":246,\"ContentToAdd\":\"{\\\\r\\\\n                    int cumLen = 0;\\\\r\\\\n                    for (int i = startingIndex; i < endingIndexPlusOne; i++)\\\\r\\\\n                    \"},{\"Position\":40132,\"NumberToRemove\":100,\"ContentToAdd\":\"{\\\\r\\\\n                        cumLen += array[i].Length;\\\\r\\\\n                    }\\\\r\\\\n                    return cumLen;\\\\r\\\\n                }\\\\r\\\\n            });\\\\r\\\\n            return diffs.ToArray();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        string MergeDiffs(string left, Diff[] diffs)\\\\r\\\\n        \"},{\"Position\":40414,\"NumberToRemove\":61,\"ContentToAdd\":\"{\\\\r\\\\n            for (int i = 0; i < diffs.Length; i++)\\\\r\\\\n            \"},{\"Position\":40485,\"NumberToRemove\":121,\"ContentToAdd\":\"{\\\\r\\\\n                left = left.Remove(diffs[i].Position, diffs[i].NumberToRemove).Insert(diffs[i].Position, diffs[i].ContentToAdd);\\\\r\\\\n            }\\\\r\\\\n            return left;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public string Origin\\\\r\\\\n        \"},{\"Position\":40724,\"NumberToRemove\":111,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":40760,\"NumberToRemove\":38,\"ContentToAdd\":\"{\\\\r\\\\n                return File.ReadAllText($@\\\\\\\"\"},{\"Position\":40809,\"NumberToRemove\":43,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\origin\\\\\\\");\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public string Path \"},{\"Position\":40898,\"NumberToRemove\":146,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string[] IgnoredPaths\\\\r\\\\n        \"},{\"Position\":40967,\"NumberToRemove\":216,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":41003,\"NumberToRemove\":120,\"ContentToAdd\":\"{\\\\r\\\\n                if (!File.Exists($@\\\\\\\"\"},{\"Position\":41045,\"NumberToRemove\":41,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":41087,\"NumberToRemove\":131,\"ContentToAdd\":\"{\\\\r\\\\n                    return new string[] \"},{\"Position\":41132,\"NumberToRemove\":37,\"ContentToAdd\":\"{ @\\\\\\\"\\\\\\\\.pvc\\\\\\\" };\\\\r\\\\n                }\\\\r\\\\n                string[] igPaths = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":41230,\"NumberToRemove\":38,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n                string[] igPaths2 = new string[igPaths.Length + 1];\\\\r\\\\n                igPaths.CopyTo(igPaths2, 1);\\\\r\\\\n                igPaths2[0] = @\\\\\\\"\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n                return igPaths2;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public string IgnoredRegex\\\\r\\\\n        \"},{\"Position\":41537,\"NumberToRemove\":44,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":41573,\"NumberToRemove\":44,\"ContentToAdd\":\"{\\\\r\\\\n                return IgnoredPaths.Length > 1 ? (IgnoredPaths[1].StartsWith(\\\\\\\"R: \\\\\\\") ? IgnoredPaths[1].Remove(0, 3) : \\\\\\\"\\\\\\\") : \\\\\\\"\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        public async Task SetIgnoredRegex(string regexToIgnore)\\\\r\\\\n        \"},{\"Position\":41819,\"NumberToRemove\":136,\"ContentToAdd\":\"{\\\\r\\\\n            if (IgnoredPaths.Length > 1 && IgnoredPaths[1].StartsWith(\\\\\\\"R: \\\\\\\"))\\\\r\\\\n            \"},{\"Position\":41919,\"NumberToRemove\":74,\"ContentToAdd\":\"{\\\\r\\\\n                string[] linesa = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":41980,\"NumberToRemove\":46,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n                linesa[0] = \\\\\\\"R: \\\\\\\" + regexToIgnore;\\\\r\\\\n                File.WriteAllLines($@\\\\\\\"\"},{\"Position\":42101,\"NumberToRemove\":52,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", linesa);\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            if (!File.Exists($@\\\\\\\"\"},{\"Position\":42212,\"NumberToRemove\":99,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":42250,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":42293,\"NumberToRemove\":148,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", \\\\\\\"R: \\\\\\\" + regexToIgnore);\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            string[] lines = File.ReadAllLines($@\\\\\\\"\"},{\"Position\":42439,\"NumberToRemove\":585,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\");\\\\r\\\\n            string[] lines2 = new string[lines.Length + 1];\\\\r\\\\n            lines.CopyTo(lines2, 1);\\\\r\\\\n            lines2[0] = \\\\\\\"R: \\\\\\\" + regexToIgnore;\\\\r\\\\n            File.WriteAllLines($@\\\\\\\"\"},{\"Position\":42655,\"NumberToRemove\":431,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", lines2);\\\\r\\\\n        }\\\\r\\\\n        public async Task IgnorePaths(string[] pathsToIgnore)\\\\r\\\\n        \"},{\"Position\":42775,\"NumberToRemove\":432,\"ContentToAdd\":\"{\\\\r\\\\n            File.AppendAllLines($@\\\\\\\"\"},{\"Position\":42816,\"NumberToRemove\":56,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", pathsToIgnore);\\\\r\\\\n        }\\\\r\\\\n        public async Task UnignorePaths(string[] pathsToUnignore)\\\\r\\\\n        \"},{\"Position\":42947,\"NumberToRemove\":18,\"ContentToAdd\":\"{\\\\r\\\\n            if (File.Exists($@\\\\\\\"\"},{\"Position\":42984,\"NumberToRemove\":255,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":43022,\"NumberToRemove\":302,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllLines($@\\\\\\\"\"},{\"Position\":43066,\"NumberToRemove\":246,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\", File.ReadAllLines($@\\\\\\\"\"},{\"Position\":43110,\"NumberToRemove\":104,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcignore\\\\\\\").Except(pathsToUnignore));\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n        //public Func<string, string, string> GetDiffs \"},{\"Position\":43246,\"NumberToRemove\":247,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Func<string, string, string> MergeDiffs \"},{\"Position\":43320,\"NumberToRemove\":262,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Commit Head \"},{\"Position\":43366,\"NumberToRemove\":104,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        //public Commit[] Branches \"},{\"Position\":43418,\"NumberToRemove\":339,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n        HttpClient client;\\\\r\\\\n\\\\r\\\\n        public HttpClient HttpClient\\\\r\\\\n        \"},{\"Position\":43517,\"NumberToRemove\":64,\"ContentToAdd\":\"{\\\\r\\\\n            get\\\\r\\\\n            \"},{\"Position\":43553,\"NumberToRemove\":133,\"ContentToAdd\":\"{\\\\r\\\\n                return client;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public PVCServerInterface(/*Commit head,*/ string path)\\\\r\\\\n        \"},{\"Position\":43701,\"NumberToRemove\":260,\"ContentToAdd\":\"{\\\\r\\\\n            client = new HttpClient();\\\\r\\\\n            //Head = head;\\\\r\\\\n            Path = path;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Registers the account specified in the User property of this client-server interface at the specified URL and with the specified recovery email.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <param name=\\\\\\\"registerURL\\\\\\\"></param>\\\\r\\\\n        /// <param name=\\\\\\\"recoveryEmail\\\\\\\"></param>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<RegisterResult> RegisterAccount(string registerURL, string recoveryEmail)\\\\r\\\\n        \"},{\"Position\":44286,\"NumberToRemove\":48,\"ContentToAdd\":\"{\\\\r\\\\n            var registered = await client.PostAsync(registerURL, new StringContent(JsonConvert.SerializeObject((User, recoveryEmail)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return registered.IsSuccessStatusCode ? RegisterResult.Success : RegisterResult.Failure;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<RegisterResult> RegisterAccount(string registerURL, Account account, string recoveryEmail)\\\\r\\\\n        \"},{\"Position\":44717,\"NumberToRemove\":140,\"ContentToAdd\":\"{\\\\r\\\\n            User = account;\\\\r\\\\n            var registered = await client.PostAsync(registerURL, new StringContent(JsonConvert.SerializeObject((User, recoveryEmail)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return registered.IsSuccessStatusCode ? RegisterResult.Success : RegisterResult.Failure;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<bool> ResetPassword(string generalResetURL, string username)\\\\r\\\\n        \"},{\"Position\":45149,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n            var result = await client.PostAsync($\\\\\\\"\"},{\"Position\":45205,\"NumberToRemove\":83,\"ContentToAdd\":\"{generalResetURL}/\"},{\"Position\":45223,\"NumberToRemove\":25,\"ContentToAdd\":\"{username}\\\\\\\", new StringContent(username, Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return result.IsSuccessStatusCode;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<bool> ChangePassword(string passwordChangeURL, string newPassword)\\\\r\\\\n        \"},{\"Position\":45478,\"NumberToRemove\":133,\"ContentToAdd\":\"{\\\\r\\\\n            var result = await client.PostAsync(passwordChangeURL, new StringContent(JsonConvert.SerializeObject((User, newPassword)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n            return result.IsSuccessStatusCode;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<string[]> Log()\\\\r\\\\n        \"},{\"Position\":45780,\"NumberToRemove\":155,\"ContentToAdd\":\"{\\\\r\\\\n            List<string> ret = new List<string>();\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            string path2 = Path + \\\\\\\"\\\\\\\\\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n            Commit temp = GetCommit(head, path2);\\\\r\\\\n            while (true)\\\\r\\\\n            \"},{\"Position\":46026,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n                ret.Add(temp.Message);\\\\r\\\\n                if (temp.Parent == 0)\\\\r\\\\n                \"},{\"Position\":46130,\"NumberToRemove\":61,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                temp = GetCommit(temp.Parent, path2);\\\\r\\\\n            }\\\\r\\\\n            return ret.ToArray();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<string[]> Log(int number)\\\\r\\\\n        \"},{\"Position\":46377,\"NumberToRemove\":61,\"ContentToAdd\":\"{\\\\r\\\\n            string[] ret = new string[number];\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            string path2 = Path + \\\\\\\"\\\\\\\\\\\\\\\\.pvc\\\\\\\";\\\\r\\\\n            Commit temp = GetCommit(head, path2);\\\\r\\\\n            for (int i = 0; i < number; i++)\\\\r\\\\n            \"},{\"Position\":46639,\"NumberToRemove\":24,\"ContentToAdd\":\"{\\\\r\\\\n                ret[i] = temp.Message;\\\\r\\\\n                if (temp.Parent == 0)\\\\r\\\\n                \"},{\"Position\":46743,\"NumberToRemove\":308,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                temp = GetCommit(temp.Parent, path2);\\\\r\\\\n            }\\\\r\\\\n            return ret;\\\\r\\\\n\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// WIP\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<PullResult> Pull()\\\\r\\\\n        \"},{\"Position\":47146,\"NumberToRemove\":108,\"ContentToAdd\":\"{\\\\r\\\\n                return PullResult.Uncommitted_Changes;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":47279,\"NumberToRemove\":194,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool allValid = true;\\\\r\\\\n            foreach (string path in Directory.EnumerateDirectories($@\\\\\\\"\"},{\"Position\":47539,\"NumberToRemove\":30,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n            \"},{\"Position\":47587,\"NumberToRemove\":54,\"ContentToAdd\":\"{\\\\r\\\\n                string branchCheck = path.Remove(0, Path.Length + 19);\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":47727,\"NumberToRemove\":25,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":47757,\"NumberToRemove\":32,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":47840,\"NumberToRemove\":141,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":47865,\"NumberToRemove\":25,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) != branch1)\\\\r\\\\n                \"},{\"Position\":47998,\"NumberToRemove\":215,\"ContentToAdd\":\"{\\\\r\\\\n                    allValid = false;\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            if (allValid)\\\\r\\\\n            \"},{\"Position\":48153,\"NumberToRemove\":134,\"ContentToAdd\":\"{\\\\r\\\\n                Directory.Move(path2, $@\\\\\\\"\"},{\"Position\":48200,\"NumberToRemove\":135,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcTemp\\\\\\\");\\\\r\\\\n                Directory.Delete($@\\\\\\\"\"},{\"Position\":48261,\"NumberToRemove\":155,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\", true);\\\\r\\\\n                Directory.Move($@\\\\\\\"\"},{\"Position\":48322,\"NumberToRemove\":47,\"ContentToAdd\":\"{Path}\\\\\\\\.pvcTemp\\\\\\\", $@\\\\\\\"\"},{\"Position\":48346,\"NumberToRemove\":203,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n                await Checkout(branch);\\\\r\\\\n                return PullResult.Success;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return PullResult.Merge_Conflict;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task<Status> GetStatus(string branch)\\\\r\\\\n        \"},{\"Position\":48654,\"NumberToRemove\":38,\"ContentToAdd\":\"{\\\\r\\\\n            if (await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":48718,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                return Status.Uncommitted_Changes;\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":48826,\"NumberToRemove\":58,\"ContentToAdd\":\"{\\\\r\\\\n                string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n                await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":49020,\"NumberToRemove\":109,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":49050,\"NumberToRemove\":102,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n                if (!File.Exists($@\\\\\\\"\"},{\"Position\":49104,\"NumberToRemove\":80,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":49129,\"NumberToRemove\":199,\"ContentToAdd\":\"{branch}\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":49161,\"NumberToRemove\":106,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Ahead_of_Origin;\\\\r\\\\n                }\\\\r\\\\n                int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":49302,\"NumberToRemove\":156,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":49327,\"NumberToRemove\":30,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n                int ca = CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2);\\\\r\\\\n                Directory.Delete(path2, true);\\\\r\\\\n                if (branch1 == branch2)\\\\r\\\\n                \"},{\"Position\":49542,\"NumberToRemove\":161,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Up_to_Date;\\\\r\\\\n                }\\\\r\\\\n                else if (ca == branch1)\\\\r\\\\n                \"},{\"Position\":49676,\"NumberToRemove\":137,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Behind_Origin;\\\\r\\\\n                }\\\\r\\\\n                else//(ca == branch2)\\\\r\\\\n                \"},{\"Position\":49811,\"NumberToRemove\":163,\"ContentToAdd\":\"{\\\\r\\\\n                    return Status.Ahead_of_Origin;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            //else if (await CanPush(File.ReadAllText($@\\\\\\\"\"},{\"Position\":49966,\"NumberToRemove\":139,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")))\\\\r\\\\n            //\"},{\"Position\":50013,\"NumberToRemove\":257,\"ContentToAdd\":\"{\\\\r\\\\n            //    return Status.Up_to_Date;\\\\r\\\\n            //}\\\\r\\\\n            //return Status.Out_of_Date;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        public async Task<bool> Checkout(string branch)\\\\r\\\\n        \"},{\"Position\":50216,\"NumberToRemove\":54,\"ContentToAdd\":\"{\\\\r\\\\n            if (!File.Exists($@\\\\\\\"\"},{\"Position\":50254,\"NumberToRemove\":144,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":50284,\"NumberToRemove\":79,\"ContentToAdd\":\"{branch}\\\\\\\") || await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":50342,\"NumberToRemove\":228,\"ContentToAdd\":\"{\\\\r\\\\n                return false;\\\\r\\\\n            }\\\\r\\\\n            await Task.Run(async () =>\\\\r\\\\n            \"},{\"Position\":50451,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n                foreach (string path in Directory.EnumerateDirectories(Path))\\\\r\\\\n                \"},{\"Position\":50553,\"NumberToRemove\":243,\"ContentToAdd\":\"{\\\\r\\\\n                    if (path != Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n                    \"},{\"Position\":50633,\"NumberToRemove\":78,\"ContentToAdd\":\"{\\\\r\\\\n                        Directory.Delete(path, true);\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                foreach (string path in Directory.EnumerateFiles(Path))\\\\r\\\\n                \"},{\"Position\":50832,\"NumberToRemove\":216,\"ContentToAdd\":\"{\\\\r\\\\n                    File.Delete(path);\\\\r\\\\n                }\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":50938,\"NumberToRemove\":373,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\", branch);\\\\r\\\\n                await SetFiles(JsonConvert.DeserializeObject<Folder>(GetUpdatedFiles(int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":51094,\"NumberToRemove\":85,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":51124,\"NumberToRemove\":14,\"ContentToAdd\":\"{branch}\\\\\\\")))), Path);\\\\r\\\\n            });\\\\r\\\\n            return true;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task SetFiles(Folder folder, string rootPath)\\\\r\\\\n        \"},{\"Position\":51285,\"NumberToRemove\":389,\"ContentToAdd\":\"{\\\\r\\\\n            Directory.CreateDirectory(rootPath + folder.Path);\\\\r\\\\n            foreach (FileObj file in folder.Files)\\\\r\\\\n            \"},{\"Position\":51422,\"NumberToRemove\":60,\"ContentToAdd\":\"{\\\\r\\\\n                File.WriteAllText(rootPath + file.Path, file.Contents);\\\\r\\\\n            }\\\\r\\\\n            foreach (Folder dir in folder.Folders)\\\\r\\\\n            \"},{\"Position\":51585,\"NumberToRemove\":10,\"ContentToAdd\":\"{\\\\r\\\\n                await SetFiles(dir, rootPath);\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<Folder> LoadFiles()\\\\r\\\\n        \"},{\"Position\":51724,\"NumberToRemove\":206,\"ContentToAdd\":\"{\\\\r\\\\n            return await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<Folder> LoadFiles(string path, int charsToRemoveFromPath, string[] excludedDirs, string regex, string rootPath = \\\\\\\"\\\\\\\")\\\\r\\\\n        \"},{\"Position\":51981,\"NumberToRemove\":96,\"ContentToAdd\":\"{\\\\r\\\\n            if (rootPath == \\\\\\\"\\\\\\\")\\\\r\\\\n            \"},{\"Position\":52035,\"NumberToRemove\":23,\"ContentToAdd\":\"{\\\\r\\\\n                rootPath = path;\\\\r\\\\n            }\\\\r\\\\n            string[] firstCharsRemoved(string[] start, int charsToRem)\\\\r\\\\n            \"},{\"Position\":52179,\"NumberToRemove\":22,\"ContentToAdd\":\"{\\\\r\\\\n                for (int i = 0; i < start.Length; i++)\\\\r\\\\n                \"},{\"Position\":52258,\"NumberToRemove\":268,\"ContentToAdd\":\"{\\\\r\\\\n                    start[i] = start[i].Remove(0, charsToRem);\\\\r\\\\n                }\\\\r\\\\n                return start;\\\\r\\\\n            }\\\\r\\\\n            string[] exceptRegex(string[] array, string regExpression)\\\\r\\\\n            \"},{\"Position\":52486,\"NumberToRemove\":73,\"ContentToAdd\":\"{\\\\r\\\\n                if (regExpression == \\\\\\\"\\\\\\\")\\\\r\\\\n                \"},{\"Position\":52553,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                    return array;\\\\r\\\\n                }\\\\r\\\\n                Regex regexp = new Regex(regExpression);\\\\r\\\\n                var temp = array.ToList();\\\\r\\\\n                for (int i = 0; i < array.Length; i++)\\\\r\\\\n                \"},{\"Position\":52796,\"NumberToRemove\":22,\"ContentToAdd\":\"{\\\\r\\\\n                    if (regexp.IsMatch(array[i]))\\\\r\\\\n                    \"},{\"Position\":52874,\"NumberToRemove\":132,\"ContentToAdd\":\"{\\\\r\\\\n                        temp.Remove(array[i]);\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                return temp.ToArray();\\\\r\\\\n            }\\\\r\\\\n            Folder folder = new Folder()\\\\r\\\\n            \"},{\"Position\":53090,\"NumberToRemove\":60,\"ContentToAdd\":\"{\\\\r\\\\n                Path = path.Remove(0, charsToRemoveFromPath)\\\\r\\\\n            };\\\\r\\\\n            string[] filePaths = exceptRegex(firstCharsRemoved(Directory.GetFiles(path), charsToRemoveFromPath).Except(excludedDirs).ToArray(), regex);\\\\r\\\\n            folder.Files = new FileObj[filePaths.Length];\\\\r\\\\n            for (int i = 0; i < filePaths.Length; i++)\\\\r\\\\n            \"},{\"Position\":53463,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                folder.Files[i] = new FileObj(filePaths[i], File.ReadAllText($\\\\\\\"\"},{\"Position\":53548,\"NumberToRemove\":109,\"ContentToAdd\":\"{rootPath}\\\\\\\\\\\\\\\\\"},{\"Position\":53562,\"NumberToRemove\":112,\"ContentToAdd\":\"{filePaths[i]}\\\\\\\"));\\\\r\\\\n            }\\\\r\\\\n            Regex regextest = new Regex(regex);\\\\r\\\\n            var folderPaths = exceptRegex(firstCharsRemoved(Directory.GetDirectories(path), charsToRemoveFromPath).Except(excludedDirs).ToArray(), regex);\\\\r\\\\n            folder.Folders = new Folder[folderPaths.Length];\\\\r\\\\n\\\\r\\\\n            for (int i = 0; i < folderPaths.Length; i++)\\\\r\\\\n            \"},{\"Position\":53951,\"NumberToRemove\":167,\"ContentToAdd\":\"{\\\\r\\\\n                folder.Folders[i] = await LoadFiles($\\\\\\\"\"},{\"Position\":54011,\"NumberToRemove\":59,\"ContentToAdd\":\"{rootPath}\"},{\"Position\":54021,\"NumberToRemove\":228,\"ContentToAdd\":\"{folderPaths[i]}\\\\\\\", charsToRemoveFromPath, excludedDirs, regex, rootPath);\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            return folder;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        string GetUpdatedFiles(int latestCommit)\\\\r\\\\n        \"},{\"Position\":54227,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n            Commit lastCommit = JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":54323,\"NumberToRemove\":343,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":54346,\"NumberToRemove\":47,\"ContentToAdd\":\"{latestCommit % 100}\\\\\\\\\"},{\"Position\":54368,\"NumberToRemove\":25,\"ContentToAdd\":\"{latestCommit / 100}\\\\\\\"));\\\\r\\\\n            return MergeDiffs(lastCommit.Parent == 0 ? \\\\\\\"\\\\\\\" : GetUpdatedFiles(lastCommit.Parent), JsonConvert.DeserializeObject<Diff[]>(lastCommit.Diffs));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task CreateBranch(string name)\\\\r\\\\n        \"},{\"Position\":54636,\"NumberToRemove\":104,\"ContentToAdd\":\"{\\\\r\\\\n            await CreateBranch(name, int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":54709,\"NumberToRemove\":101,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":54739,\"NumberToRemove\":80,\"ContentToAdd\":\"{File.ReadAllText($@\\\\\\\"\"},{\"Position\":54761,\"NumberToRemove\":297,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")}\\\\\\\")));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task CreateBranch(string name, int commitID)\\\\r\\\\n        \"},{\"Position\":54893,\"NumberToRemove\":160,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(() => File.WriteAllText($@\\\\\\\"\"},{\"Position\":54953,\"NumberToRemove\":61,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":54983,\"NumberToRemove\":16,\"ContentToAdd\":\"{name}\\\\\\\", commitID.ToString()));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task Clone(string orig)\\\\r\\\\n        \"},{\"Position\":55092,\"NumberToRemove\":255,\"ContentToAdd\":\"{\\\\r\\\\n            await Clone(Path, orig, true, @\\\\\\\"\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n            await Checkout(File.ReadAllText($@\\\\\\\"\"},{\"Position\":55204,\"NumberToRemove\":44,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task Clone(string path, string orig, bool loadCommits, string dataAdditional = @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n        \"},{\"Position\":55371,\"NumberToRemove\":6,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(async () =>\\\\r\\\\n            \"},{\"Position\":55430,\"NumberToRemove\":24,\"ContentToAdd\":\"{\\\\r\\\\n                string path2 = path + dataAdditional;\\\\r\\\\n                Directory.CreateDirectory(path2);\\\\r\\\\n                File.WriteAllText(path2 + @\\\\\\\"\\\\\\\\origin\\\\\\\", orig);\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":55658,\"NumberToRemove\":139,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\");\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":55725,\"NumberToRemove\":9,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\");\\\\r\\\\n                var received = await client.GetAsync(Origin + \\\\\\\"/branches\\\\\\\");\\\\r\\\\n                Dictionary<string, int> branches = JsonConvert.DeserializeObject<Dictionary<string, int>>(received.Content.ReadAsStringAsync().Result);\\\\r\\\\n                foreach (string branch in branches.Keys)\\\\r\\\\n                \"},{\"Position\":56068,\"NumberToRemove\":314,\"ContentToAdd\":\"{\\\\r\\\\n                    File.WriteAllText($@\\\\\\\"\"},{\"Position\":56115,\"NumberToRemove\":109,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":56140,\"NumberToRemove\":30,\"ContentToAdd\":\"{branch}\\\\\\\", branches[branch].ToString());\\\\r\\\\n                }\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":56244,\"NumberToRemove\":22,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\HEAD\\\\\\\", branches.Keys.ToArray()[0]);\\\\r\\\\n                Directory.CreateDirectory($@\\\\\\\"\"},{\"Position\":56345,\"NumberToRemove\":142,\"ContentToAdd\":\"{path2}\\\\\\\\commits\\\\\\\");\\\\r\\\\n\\\\r\\\\n                if (loadCommits)\\\\r\\\\n                \"},{\"Position\":56425,\"NumberToRemove\":124,\"ContentToAdd\":\"{\\\\r\\\\n                    await GetAllCommits(path, branches.Keys.ToArray(), dataAdditional);\\\\r\\\\n                }\\\\r\\\\n            });\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async /*Task<Dictionary<int, Commit>>*/ Task GetAllCommits(string path, string[] branches, string extraString = @\\\\\\\"\\\\\\\\.pvc\\\\\\\")\\\\r\\\\n        \"},{\"Position\":56722,\"NumberToRemove\":23,\"ContentToAdd\":\"{\\\\r\\\\n            // Dictionary<int, Commit> allCommits = new Dictionary<int, Commit>();\\\\r\\\\n            for (int i = 0; i < branches.Length; i++)\\\\r\\\\n            \"},{\"Position\":56882,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n                var received = await client.GetAsync($\\\\\\\"\"},{\"Position\":56943,\"NumberToRemove\":95,\"ContentToAdd\":\"{Origin}?branch=\"},{\"Position\":56959,\"NumberToRemove\":8,\"ContentToAdd\":\"{branches[i]}\\\\\\\");\\\\r\\\\n                Dictionary<int, Commit> commits = JsonConvert.DeserializeObject<Dictionary<int, Commit>>(received.Content.ReadAsStringAsync().Result);\\\\r\\\\n                for (int j = 0; j < commits.Keys.Count; j++)\\\\r\\\\n                \"},{\"Position\":57214,\"NumberToRemove\":254,\"ContentToAdd\":\"{\\\\r\\\\n                    string path2 = $@\\\\\\\"\"},{\"Position\":57258,\"NumberToRemove\":230,\"ContentToAdd\":\"{path}\"},{\"Position\":57264,\"NumberToRemove\":53,\"ContentToAdd\":\"{extraString}\\\\\\\\commits\\\\\\\\\"},{\"Position\":57288,\"NumberToRemove\":477,\"ContentToAdd\":\"{commits.Keys.ToArray()[j] % 100}\\\\\\\";\\\\r\\\\n                    Directory.CreateDirectory(path2);\\\\r\\\\n                    File.WriteAllText($@\\\\\\\"\"},{\"Position\":57427,\"NumberToRemove\":66,\"ContentToAdd\":\"{path2}\\\\\\\\\"},{\"Position\":57436,\"NumberToRemove\":30,\"ContentToAdd\":\"{commits.Keys.ToArray()[j] / 100}\\\\\\\", JsonConvert.SerializeObject(commits.Values.ToArray()[j]));\\\\r\\\\n                    // allCommits.Add(commits[j].GetHashCode(),commits[j]);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            //return allCommits;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<int> GetHead()\\\\r\\\\n        \"},{\"Position\":57750,\"NumberToRemove\":122,\"ContentToAdd\":\"{\\\\r\\\\n            int result = 0;\\\\r\\\\n            await Task.Run(() => result = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":57859,\"NumberToRemove\":54,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":57889,\"NumberToRemove\":30,\"ContentToAdd\":\"{File.ReadAllText($@\\\\\\\"\"},{\"Position\":57911,\"NumberToRemove\":59,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\")}\\\\\\\")));\\\\r\\\\n            return result;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task<int> Commit(Commit commit)\\\\r\\\\n        \"},{\"Position\":58053,\"NumberToRemove\":9,\"ContentToAdd\":\"{\\\\r\\\\n            Guid guid = Guid.NewGuid();\\\\r\\\\n            int hash = guid.GetHashCode();\\\\r\\\\n            string path = $@\\\\\\\"\"},{\"Position\":58177,\"NumberToRemove\":160,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":58200,\"NumberToRemove\":478,\"ContentToAdd\":\"{hash % 100}\\\\\\\";\\\\r\\\\n            await Task.Run(() =>\\\\r\\\\n            \"},{\"Position\":58267,\"NumberToRemove\":219,\"ContentToAdd\":\"{\\\\r\\\\n                Directory.CreateDirectory(path);\\\\r\\\\n                File.WriteAllText($@\\\\\\\"\"},{\"Position\":58362,\"NumberToRemove\":30,\"ContentToAdd\":\"{path}\\\\\\\\\"},{\"Position\":58370,\"NumberToRemove\":74,\"ContentToAdd\":\"{hash / 100}\\\\\\\", JsonConvert.SerializeObject(commit));\\\\r\\\\n            });\\\\r\\\\n            return hash;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        async Task Commit(string author, string committer, string diffs, string message, int parentId, DateTime dateTime)\\\\r\\\\n        \"},{\"Position\":58624,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n            await Commit(new Commit(diffs, message, author, committer, parentId, dateTime));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task Commit(string message, string author, string committer, DateTime dateTime)\\\\r\\\\n        \"},{\"Position\":58854,\"NumberToRemove\":120,\"ContentToAdd\":\"{\\\\r\\\\n            if(dateTime == null)\\\\r\\\\n            \"},{\"Position\":58907,\"NumberToRemove\":214,\"ContentToAdd\":\"{\\\\r\\\\n                dateTime = DateTime.Now;\\\\r\\\\n            }\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            Commit commitToCommit = new Commit(JsonConvert.SerializeObject(await GetDiffs(GetUpdatedFiles(head), JsonConvert.SerializeObject(await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex)))), message, author, committer, head, dateTime);\\\\r\\\\n            int specialHash = await Commit(commitToCommit);\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":59384,\"NumberToRemove\":219,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            File.WriteAllText($@\\\\\\\"\"},{\"Position\":59480,\"NumberToRemove\":74,\"ContentToAdd\":\"{branch}\\\\\\\", specialHash.ToString());\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public async Task DeleteBranch(string branch)\\\\r\\\\n        \"},{\"Position\":59602,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n            await Task.Run(() => File.Delete($@\\\\\\\"\"},{\"Position\":59656,\"NumberToRemove\":120,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":59686,\"NumberToRemove\":215,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            //await client.DeleteAsync($\\\\\\\"\"},{\"Position\":59745,\"NumberToRemove\":210,\"ContentToAdd\":\"{Origin}/\"},{\"Position\":59754,\"NumberToRemove\":205,\"ContentToAdd\":\"{branch}\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        //TODO: Detect uncommitted changes or out-of-date repo\\\\r\\\\n        async Task<bool> UncommittedChanges()\\\\r\\\\n        \"},{\"Position\":59914,\"NumberToRemove\":141,\"ContentToAdd\":\"{\\\\r\\\\n            int head = await GetHead();\\\\r\\\\n            return (await GetDiffs(GetUpdatedFiles(head), JsonConvert.SerializeObject(await LoadFiles(Path, Path.Length, IgnoredPaths, IgnoredRegex)))).Length != 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Describes whether or not a branch can be pushed without causing merge conflicts.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        async Task<bool> CanPush(string branch)\\\\r\\\\n        \"},{\"Position\":60392,\"NumberToRemove\":72,\"ContentToAdd\":\"{\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool canPush = false;\\\\r\\\\n            int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":60611,\"NumberToRemove\":139,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":60641,\"NumberToRemove\":252,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":60715,\"NumberToRemove\":274,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":60740,\"NumberToRemove\":83,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) == branch2)\\\\r\\\\n            \"},{\"Position\":60860,\"NumberToRemove\":20,\"ContentToAdd\":\"{\\\\r\\\\n                canPush = true;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return canPush;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        async Task<bool> CanPull(string branch)\\\\r\\\\n        \"},{\"Position\":61074,\"NumberToRemove\":12,\"ContentToAdd\":\"{\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool canPull = false;\\\\r\\\\n            int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":61293,\"NumberToRemove\":344,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":61323,\"NumberToRemove\":145,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":61397,\"NumberToRemove\":128,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":61422,\"NumberToRemove\":242,\"ContentToAdd\":\"{branch}\\\\\\\"));\\\\r\\\\n            if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) == branch1)\\\\r\\\\n            \"},{\"Position\":61542,\"NumberToRemove\":74,\"ContentToAdd\":\"{\\\\r\\\\n                canPull = true;\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            return canPull;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        int CommonAncestor(int commit1, int commit2)\\\\r\\\\n        \"},{\"Position\":61757,\"NumberToRemove\":52,\"ContentToAdd\":\"{\\\\r\\\\n            return CommonAncestor(commit1, commit2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\");\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        int CommonAncestor(int commit1, int commit2, string path1, string path2)\\\\r\\\\n        \"},{\"Position\":61967,\"NumberToRemove\":105,\"ContentToAdd\":\"{\\\\r\\\\n            int commit2Start = commit2;\\\\r\\\\n            Commit cmit = GetCommit(commit1, path1);\\\\r\\\\n            Commit cmit2Strt = GetCommit(commit2, path2);\\\\r\\\\n            while (true)\\\\r\\\\n            \"},{\"Position\":62172,\"NumberToRemove\":134,\"ContentToAdd\":\"{\\\\r\\\\n                Commit cmit2 = cmit2Strt;\\\\r\\\\n                commit2 = commit2Start;\\\\r\\\\n                while (true)\\\\r\\\\n                \"},{\"Position\":62313,\"NumberToRemove\":152,\"ContentToAdd\":\"{\\\\r\\\\n                    if (commit2 == commit1)\\\\r\\\\n                    \"},{\"Position\":62385,\"NumberToRemove\":66,\"ContentToAdd\":\"{\\\\r\\\\n                        return commit2;\\\\r\\\\n                    }\\\\r\\\\n                    if (cmit2.Parent == 0)\\\\r\\\\n                    \"},{\"Position\":62524,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                        break;\\\\r\\\\n                    }\\\\r\\\\n                    commit2 = cmit2.Parent;\\\\r\\\\n                    cmit2 = GetCommit(cmit2.Parent, path2);\\\\r\\\\n                }\\\\r\\\\n                if (cmit.Parent == 0)\\\\r\\\\n                \"},{\"Position\":62776,\"NumberToRemove\":58,\"ContentToAdd\":\"{\\\\r\\\\n                    break;\\\\r\\\\n                }\\\\r\\\\n                commit1 = cmit.Parent;\\\\r\\\\n                cmit = GetCommit(cmit.Parent, path1);\\\\r\\\\n            }\\\\r\\\\n            return 0;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        Commit GetCommit(int id, string pvcPath)\\\\r\\\\n        \"},{\"Position\":63050,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n            return JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":63133,\"NumberToRemove\":37,\"ContentToAdd\":\"{pvcPath}\\\\\\\\commits\\\\\\\\\"},{\"Position\":63153,\"NumberToRemove\":70,\"ContentToAdd\":\"{id % 100}\\\\\\\\\"},{\"Position\":63165,\"NumberToRemove\":25,\"ContentToAdd\":\"{id / 100}\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n        /// <summary>\\\\r\\\\n        /// Pushes committed changes.\\\\r\\\\n        /// </summary>\\\\r\\\\n        /// <param name=\\\\\\\"branchToPush\\\\\\\">The branch to push. If empty, pushes all branches.</param>\\\\r\\\\n        /// <returns></returns>\\\\r\\\\n        public async Task<PushResult> Push(string branchToPush = \\\\\\\"\\\\\\\")\\\\r\\\\n        \"},{\"Position\":63509,\"NumberToRemove\":141,\"ContentToAdd\":\"{\\\\r\\\\n            HttpStatusCode responseCode = HttpStatusCode.InternalServerError;\\\\r\\\\n            if (await UncommittedChanges())\\\\r\\\\n            \"},{\"Position\":63654,\"NumberToRemove\":231,\"ContentToAdd\":\"{\\\\r\\\\n                return PushResult.Uncommited_Changes;\\\\r\\\\n            }\\\\r\\\\n            string branch = File.ReadAllText($@\\\\\\\"\"},{\"Position\":63782,\"NumberToRemove\":66,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\HEAD\\\\\\\");\\\\r\\\\n            string path2 = Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\\tempRepoClone\\\\\\\";\\\\r\\\\n            await Clone(path2, Origin, true, \\\\\\\"\\\\\\\");\\\\r\\\\n            bool allValid = true;\\\\r\\\\n            if (branchToPush == \\\\\\\"\\\\\\\")\\\\r\\\\n            \"},{\"Position\":64024,\"NumberToRemove\":78,\"ContentToAdd\":\"{\\\\r\\\\n                foreach (string path in Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":64098,\"NumberToRemove\":56,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":64150,\"NumberToRemove\":170,\"ContentToAdd\":\"{\\\\r\\\\n                    if (!await checkValid(path.Remove(0, Path.Length + 19)))\\\\r\\\\n                    \"},{\"Position\":64255,\"NumberToRemove\":158,\"ContentToAdd\":\"{\\\\r\\\\n                        break;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":64389,\"NumberToRemove\":70,\"ContentToAdd\":\"{\\\\r\\\\n                await checkValid(branchToPush);\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            async Task<bool> checkValid(string branchCheck)\\\\r\\\\n            \"},{\"Position\":64541,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":64607,\"NumberToRemove\":105,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":64637,\"NumberToRemove\":25,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                if (File.Exists($@\\\\\\\"\"},{\"Position\":64695,\"NumberToRemove\":41,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":64720,\"NumberToRemove\":74,\"ContentToAdd\":\"{branchCheck}\\\\\\\"))\\\\r\\\\n                \"},{\"Position\":64757,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                    int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":64827,\"NumberToRemove\":200,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":64852,\"NumberToRemove\":141,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    if (CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2) != branch2)\\\\r\\\\n                    \"},{\"Position\":64993,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n                        allValid = false;\\\\r\\\\n                        return false;\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                return true;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            if (allValid)\\\\r\\\\n            \"},{\"Position\":65224,\"NumberToRemove\":186,\"ContentToAdd\":\"{\\\\r\\\\n                if (branchToPush == \\\\\\\"\\\\\\\")\\\\r\\\\n                \"},{\"Position\":65290,\"NumberToRemove\":116,\"ContentToAdd\":\"{\\\\r\\\\n                    foreach (string path in Directory.EnumerateFiles($@\\\\\\\"\"},{\"Position\":65368,\"NumberToRemove\":23,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\"))\\\\r\\\\n                    \"},{\"Position\":65424,\"NumberToRemove\":16,\"ContentToAdd\":\"{\\\\r\\\\n                        await PushBranch(path.Remove(0, Path.Length + 19));\\\\r\\\\n                    }\\\\r\\\\n                }\\\\r\\\\n                else\\\\r\\\\n                \"},{\"Position\":65594,\"NumberToRemove\":275,\"ContentToAdd\":\"{\\\\r\\\\n                    await PushBranch(branchToPush);\\\\r\\\\n                }\\\\r\\\\n                async Task PushBranch(string branchCheck)\\\\r\\\\n                \"},{\"Position\":65752,\"NumberToRemove\":9,\"ContentToAdd\":\"{\\\\r\\\\n                    int branch1 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":65822,\"NumberToRemove\":353,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":65852,\"NumberToRemove\":62,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    int commonAncestor;\\\\r\\\\n                    if (File.Exists($@\\\\\\\"\"},{\"Position\":65957,\"NumberToRemove\":526,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":65982,\"NumberToRemove\":241,\"ContentToAdd\":\"{branchCheck}\\\\\\\"))\\\\r\\\\n                    \"},{\"Position\":66023,\"NumberToRemove\":84,\"ContentToAdd\":\"{\\\\r\\\\n                        int branch2 = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":66097,\"NumberToRemove\":56,\"ContentToAdd\":\"{path2}\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":66122,\"NumberToRemove\":51,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                        commonAncestor = CommonAncestor(branch1, branch2, Path + @\\\\\\\"\\\\\\\\.pvc\\\\\\\", path2);\\\\r\\\\n                    }\\\\r\\\\n                    else\\\\r\\\\n                    \"},{\"Position\":66322,\"NumberToRemove\":82,\"ContentToAdd\":\"{\\\\r\\\\n                        commonAncestor = 0;\\\\r\\\\n                    }\\\\r\\\\n                    int commit = int.Parse(File.ReadAllText($@\\\\\\\"\"},{\"Position\":66463,\"NumberToRemove\":76,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\refs\\\\\\\\branches\\\\\\\\\"},{\"Position\":66493,\"NumberToRemove\":56,\"ContentToAdd\":\"{branchCheck}\\\\\\\"));\\\\r\\\\n                    Dictionary<int, Commit> commits = new Dictionary<int, Commit>();\\\\r\\\\n                    while (commit != commonAncestor)\\\\r\\\\n                    \"},{\"Position\":66679,\"NumberToRemove\":43,\"ContentToAdd\":\"{\\\\r\\\\n                        Commit commitInCommitForm = JsonConvert.DeserializeObject<Commit>(File.ReadAllText($@\\\\\\\"\"},{\"Position\":66795,\"NumberToRemove\":171,\"ContentToAdd\":\"{Path}\\\\\\\\.pvc\\\\\\\\commits\\\\\\\\\"},{\"Position\":66818,\"NumberToRemove\":64,\"ContentToAdd\":\"{commit % 100}\\\\\\\\\"},{\"Position\":66834,\"NumberToRemove\":219,\"ContentToAdd\":\"{commit / 100}\\\\\\\"));\\\\r\\\\n                        commits.Add(commit, commitInCommitForm);\\\\r\\\\n                        commit = commitInCommitForm.Parent;\\\\r\\\\n                    }\\\\r\\\\n                    commits.Reverse();\\\\r\\\\n                    var response = client.PutAsync($\\\\\\\"\"},{\"Position\":67109,\"NumberToRemove\":94,\"ContentToAdd\":\"{Origin}/\"},{\"Position\":67118,\"NumberToRemove\":68,\"ContentToAdd\":\"{branchCheck}\\\\\\\", new StringContent(JsonConvert.SerializeObject((User, commits)), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n                    responseCode = response.Result.StatusCode;\\\\r\\\\n                    await response;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            Directory.Delete(path2, true);\\\\r\\\\n            if (allValid)\\\\r\\\\n            \"},{\"Position\":67471,\"NumberToRemove\":108,\"ContentToAdd\":\"{\\\\r\\\\n                switch (responseCode)\\\\r\\\\n                \"},{\"Position\":67533,\"NumberToRemove\":302,\"ContentToAdd\":\"{\\\\r\\\\n                    case HttpStatusCode.OK:\\\\r\\\\n                        return PushResult.Success;\\\\r\\\\n                    case HttpStatusCode.Unauthorized:\\\\r\\\\n                        return PushResult.Authentication_Error;\\\\r\\\\n                    case HttpStatusCode.BadRequest:\\\\r\\\\n                        return PushResult.Nonexistant_Repository;\\\\r\\\\n                    default:\\\\r\\\\n                        return PushResult.No_Response_From_Server;\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n            else\\\\r\\\\n            \"},{\"Position\":68059,\"NumberToRemove\":86,\"ContentToAdd\":\"{\\\\r\\\\n                return PushResult.Conflict;\\\\r\\\\n            }\\\\r\\\\n            //await client.PostAsync(Origin, new StringContent(JsonConvert.SerializeObject(commit), Encoding.UTF8, \\\\\\\"application/json\\\\\\\"));\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":68300,\"NumberToRemove\":84,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\RegisterResult.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeClient\\\\r\\\\n\"},{\"Position\":68384,\"NumberToRemove\":90,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":68440,\"NumberToRemove\":88,\"ContentToAdd\":\"{\\\\r\\\\n        public enum RegisterResult\\\\r\\\\n        \"},{\"Position\":68491,\"NumberToRemove\":86,\"ContentToAdd\":\"{\\\\r\\\\n            Success,\\\\r\\\\n            Failure\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":68573,\"NumberToRemove\":84,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCPipeClient\\\\\\\\Status.cs\\\",\\\"Contents\\\":\\\"namespace PVCPipeClient\\\\r\\\\n\"},{\"Position\":68649,\"NumberToRemove\":90,\"ContentToAdd\":\"{\\\\r\\\\n    public partial class PVCServerInterface\\\\r\\\\n    \"},{\"Position\":68705,\"NumberToRemove\":288,\"ContentToAdd\":\"{\\\\r\\\\n        public enum Status\\\\r\\\\n        \"},{\"Position\":68748,\"NumberToRemove\":81,\"ContentToAdd\":\"{\\\\r\\\\n            Uncommitted_Changes,\\\\r\\\\n            Ahead_of_Origin,\\\\r\\\\n            Behind_Origin,\\\\r\\\\n            Up_to_Date\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":68919,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\.pvcignore\\\",\\\"Contents\\\":\\\"R: bin|vs|obj|packages\\\\r\\\\n\\\"},\"},{\"Position\":68983,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PVCClient.sln\\\",\\\"Contents\\\":\\\"Microsoft Visual Studio Solution File, Format Version 12.00\\\\r\\\\n# Visual Studio 15\\\\r\\\\nVisualStudioVersion = 15.0.27004.2005\\\\r\\\\nMinimumVisualStudioVersion = 10.0.40219.1\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":69202,\"NumberToRemove\":0,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCClient\\\\\\\", \\\\\\\"PVCClient\\\\\\\\PVCClient.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":69296,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":69364,\"NumberToRemove\":0,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCPipeLibrary\\\\\\\", \\\\\\\"PVCPipeClient\\\\\\\\PVCPipeLibrary.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":69472,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":69540,\"NumberToRemove\":0,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"PVCCommandLine\\\\\\\", \\\\\\\"PVCCommandLine\\\\\\\\PVCCommandLine.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":69649,\"NumberToRemove\":0,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nGlobal\\\\r\\\\n\\\\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\\\\r\\\\n\\\\t\\\\tDebug|Any CPU = Debug|Any CPU\\\\r\\\\n\\\\t\\\\tRelease|Any CPU = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":69951,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":70037,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":70121,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":70211,\"NumberToRemove\":0,\"ContentToAdd\":\"{EBCB5049-341B-4988-A676-3E01610C0B05}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":70299,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":70385,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":70469,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":70559,\"NumberToRemove\":0,\"ContentToAdd\":\"{3671D7CA-1C5E-469D-9266-8E3617330B7B}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":70647,\"NumberToRemove\":0,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":70733,\"NumberToRemove\":0,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":70817,\"NumberToRemove\":0,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":70907,\"NumberToRemove\":0,\"ContentToAdd\":\"{300570EC-EE81-4C45-A08F-7A2CB6FE22E9}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(SolutionProperties) = preSolution\\\\r\\\\n\\\\t\\\\tHideSolutionNode = FALSE\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ExtensibilityGlobals) = postSolution\\\\r\\\\n\\\\t\\\\tSolutionGuid = \"},{\"Position\":71195,\"NumberToRemove\":0,\"ContentToAdd\":\"{78911CB1-A8D8-4CCA-BCF1-C4390A8F96AE}\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\nEndGlobal\\\\r\\\\n\\\"}]}\"}]","Parent":1422373333,"Message":"Started on command line tool and tested out basic branching. Next, use credentials and McMaster cmdline tools to finish it.","Author":"penguinee232","Committer":"penguinee232","DateAndTime":"2018-11-11T18:04:59.3347287-08:00"}