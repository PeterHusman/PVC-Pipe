{"Diffs":"[{\"Position\":11197,\"NumberToRemove\":170,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return false;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            return true;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpGet(\\\\\\\"checkAuth\\\\\\\")]\\\\r\\\\n        public string[] CheckAccountPerms([FromBody]Account accnt)\\\\r\\\\n        \"},{\"Position\":11461,\"NumberToRemove\":94,\"ContentToAdd\":\"{\\\\r\\\\n            if(accnt == null)\\\\r\\\\n            \"},{\"Position\":11511,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return null;\\\\r\\\\n            }\\\\r\\\\n            connection.Open();\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if(userID < 0)\\\\r\\\\n            \"},{\"Position\":11749,\"NumberToRemove\":446,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return null;\\\\r\\\\n            }\\\\r\\\\n            bool auth = RunVoidAuthenticatable(SetUpUSP(\\\\\\\"usp_CheckAuth\\\\\\\", (\\\\\\\"UserID\\\\\\\", userID)));\\\\r\\\\n            if(!auth)\\\\r\\\\n            \"},{\"Position\":11988,\"NumberToRemove\":487,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return null;\\\\r\\\\n            }\\\\r\\\\n            SqlDataAdapter adapter = new SqlDataAdapter(SetUpUSP(\\\\\\\"usp_GetAuthRepos\\\\\\\", (\\\\\\\"UserID\\\\\\\", userID)));\\\\r\\\\n            DataTable data = new DataTable();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            string[] repoNames = new string[data.Rows.Count];\\\\r\\\\n            for(int i = 0; i < repoNames.Length; i++)\\\\r\\\\n            \"},{\"Position\":12420,\"NumberToRemove\":771,\"ContentToAdd\":\"{\\\\r\\\\n                repoNames[i] = (string)SqlReturnObj(SetUpUSP(\\\\\\\"usp_GetRepoName\\\\\\\", (\\\\\\\"RepositoryID\\\\\\\", (int)data.Rows[i].ItemArray[0])));\\\\r\\\\n            }\\\\r\\\\n            return repoNames;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        [HttpPost(\\\\\\\"\"},{\"Position\":12655,\"NumberToRemove\":56,\"ContentToAdd\":\"{repo}\\\\\\\")]\\\\r\\\\n        public void CreateRepo(string repo, [FromBody]Account accnt)\\\\r\\\\n        \"},{\"Position\":12749,\"NumberToRemove\":890,\"ContentToAdd\":\"{\\\\r\\\\n            if (accnt == null)\\\\r\\\\n            \"},{\"Position\":12800,\"NumberToRemove\":59,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            connection.Open();\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_AddRepoWOID\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"Name\\\\\\\", repo));\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":13246,\"NumberToRemove\":265,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"UserID\\\\\\\", userID));\\\\r\\\\n            bool res = RunVoidAuthenticatable(cmd);\\\\r\\\\n            if(!res)\\\\r\\\\n            \"},{\"Position\":13505,\"NumberToRemove\":364,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_AddCommit\\\\\\\";\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n            byte[] hash = GetFullPasswordHash(userID, accnt.Password, false);\\\\r\\\\n            int repoID = GetRepoID(repo, false);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":13875,\"NumberToRemove\":77,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int commitID = new Random().Next(1, int.MaxValue);\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"CommitID\\\\\\\", commitID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"Message\\\\\\\", \\\\\\\"Initial commit for repository \\\\\\\" + repo));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"ParentID\\\\\\\", 0));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"Author\\\\\\\", \\\\\\\"Auto-generated\\\\\\\"));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"Committer\\\\\\\", \\\\\\\"Auto-generated\\\\\\\"));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"TextDiffs\\\\\\\", JsonConvert.SerializeObject(new Diff[] \"},{\"Position\":14646,\"NumberToRemove\":133,\"ContentToAdd\":\"{ new Diff(0, 0, JsonConvert.SerializeObject(new Folder \"},{\"Position\":14702,\"NumberToRemove\":7,\"ContentToAdd\":\"{ Path = \\\\\\\"\\\\\\\", Folders = new Folder[0], Files = new FileObj[0] })) })));\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"UserID\\\\\\\", userID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"PasswordHash\\\\\\\", hash);\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_AddBranch\\\\\\\";\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"BranchName\\\\\\\", \\\\\\\"master\\\\\\\"));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"CommitID\\\\\\\", commitID));\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"UserID\\\\\\\", userID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"PasswordHash\\\\\\\", hash);\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n\\\\r\\\\n        }\\\\r\\\\n        [HttpPost(\\\\\\\"register\\\\\\\")]\\\\r\\\\n        public void RegisterUser([FromBody](Account, string) account)\\\\r\\\\n        \"},{\"Position\":15592,\"NumberToRemove\":149,\"ContentToAdd\":\"{\\\\r\\\\n            if (account.Item1 == null)\\\\r\\\\n            \"},{\"Position\":15651,\"NumberToRemove\":93,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            connection.Open();\\\\r\\\\n            string salt = \\\\\\\"\\\\\\\";\\\\r\\\\n            Random random = new Random();\\\\r\\\\n            for (int i = 0; i < 50; i++)\\\\r\\\\n            \"},{\"Position\":15916,\"NumberToRemove\":196,\"ContentToAdd\":\"{\\\\r\\\\n                salt = salt + (char)(random.Next(32, 126));\\\\r\\\\n            }\\\\r\\\\n            string password = salt + account.Item1.Password;\\\\r\\\\n            SHA256Managed sha256 = new SHA256Managed();\\\\r\\\\n            byte[] hash = sha256.ComputeHash(Encoding.UTF8.GetBytes(password));\\\\r\\\\n            SqlCommand cmd = SetUpUSP(\\\\\\\"usp_RegisterUser\\\\\\\", new string[] \"},{\"Position\":16280,\"NumberToRemove\":200,\"ContentToAdd\":\"{ \\\\\\\"Username\\\\\\\", \\\\\\\"PasswordHash\\\\\\\", \\\\\\\"Salt\\\\\\\", \\\\\\\"ResetAddress\\\\\\\" }, new object[] \"},{\"Position\":16357,\"NumberToRemove\":625,\"ContentToAdd\":\"{ account.Item1.Username, hash, salt, account.Item2 });\\\\r\\\\n            cmd.ExecuteNonQuery();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpPut(\\\\\\\"\"},{\"Position\":16490,\"NumberToRemove\":357,\"ContentToAdd\":\"{repo}/\"},{\"Position\":16497,\"NumberToRemove\":1547,\"ContentToAdd\":\"{branch}\\\\\\\")]\\\\r\\\\n        public void PushBranch(string repo, string branch, [FromBody](Account, Dictionary<int, Commit>) commitDictionary)\\\\r\\\\n        \"},{\"Position\":16646,\"NumberToRemove\":165,\"ContentToAdd\":\"{\\\\r\\\\n            int repoID = GetRepoID(repo);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":16739,\"NumberToRemove\":207,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            Account accnt = commitDictionary.Item1;\\\\r\\\\n            if (accnt == null)\\\\r\\\\n            \"},{\"Position\":16935,\"NumberToRemove\":7,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":17135,\"NumberToRemove\":113,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            byte[] hash = GetFullPasswordHash(userID, accnt.Password, false);\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_AddCommit\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            DataTable table = new DataTable();\\\\r\\\\n            SqlDataAdapter adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            Commit[] commits = commitDictionary.Item2.Values.ToArray();\\\\r\\\\n            for (int i = 0; i < commits.Length; i++)\\\\r\\\\n            \"},{\"Position\":17760,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n                cmd.Parameters.Clear();\\\\r\\\\n                cmd.Parameters.Add(new SqlParameter(\\\\\\\"CommitID\\\\\\\", commitDictionary.Item2.Keys.ToArray()[i]));\\\\r\\\\n                cmd.CommandText = \\\\\\\"usp_GetCommitByID\\\\\\\";\\\\r\\\\n                table.Clear();\\\\r\\\\n                adapter.Fill(table);\\\\r\\\\n                if (table.Rows.Count <= 0)\\\\r\\\\n                \"},{\"Position\":18117,\"NumberToRemove\":265,\"ContentToAdd\":\"{\\\\r\\\\n                    cmd.CommandText = \\\\\\\"usp_AddCommit\\\\\\\";\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"Message\\\\\\\", commits[i].Message));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"ParentID\\\\\\\", commits[i].Parent));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"Author\\\\\\\", commits[i].Author));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"Committer\\\\\\\", commits[i].Committer));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"TextDiffs\\\\\\\", commits[i].Diffs));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"UserID\\\\\\\", userID));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"PasswordHash\\\\\\\", hash));\\\\r\\\\n                    RunVoidAuthenticatable(cmd);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_UpdateBranch\\\\\\\";\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"BranchName\\\\\\\", branch));\\\\r\\\\n            int[] keys = commitDictionary.Item2.Keys.ToArray();\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"CommitID\\\\\\\", keys[0]));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"UserID\\\\\\\", userID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"PasswordHash\\\\\\\", hash));\\\\r\\\\n            table.Clear();\\\\r\\\\n            adapter.Fill(table);\\\\r\\\\n            if (table.Rows.Count <= 0)\\\\r\\\\n            \"},{\"Position\":19664,\"NumberToRemove\":200,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n            }\\\\r\\\\n            else if ((int)table.Rows[0][table.Rows[0].ItemArray.Length - 1] == 1)\\\\r\\\\n            \"},{\"Position\":19829,\"NumberToRemove\":669,\"ContentToAdd\":\"{\\\\r\\\\n                cmd.CommandText = \\\\\\\"usp_AddBranch\\\\\\\";\\\\r\\\\n                RunVoidAuthenticatable(cmd);\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        // DELETE api/pipe/repo/branch\\\\r\\\\n        [HttpDelete(\\\\\\\"\"},{\"Position\":20036,\"NumberToRemove\":52,\"ContentToAdd\":\"{repo}/\"},{\"Position\":20043,\"NumberToRemove\":487,\"ContentToAdd\":\"{branch}\\\\\\\")]\\\\r\\\\n        public void DeleteBranch(string repo, string branch, [FromBody]Account accnt)\\\\r\\\\n        \"},{\"Position\":20156,\"NumberToRemove\":291,\"ContentToAdd\":\"{\\\\r\\\\n            if (accnt == null)\\\\r\\\\n            \"},{\"Position\":20207,\"NumberToRemove\":94,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_DeleteBranch\\\\\\\", connection);\\\\r\\\\n            int repoID = GetRepoID(repo);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":20472,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":20672,\"NumberToRemove\":183,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            byte[] hash = GetFullPasswordHash(userID, accnt.Password, false);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"BranchName\\\\\\\", branch));\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"UserID\\\\\\\", userID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"PasswordHash\\\\\\\", hash);\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        private int GetRepoID(string repo, bool openConnection = true)\\\\r\\\\n        \"},{\"Position\":21341,\"NumberToRemove\":200,\"ContentToAdd\":\"{\\\\r\\\\n            if (openConnection)\\\\r\\\\n            \"},{\"Position\":21393,\"NumberToRemove\":609,\"ContentToAdd\":\"{ connection.Open(); }\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_GetRepoID\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryName\\\\\\\", repo));\\\\r\\\\n            SqlDataAdapter adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            DataTable data = new DataTable();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n            if (data.Rows.Count <= 0)\\\\r\\\\n            \"},{\"Position\":21880,\"NumberToRemove\":108,\"ContentToAdd\":\"{\\\\r\\\\n                return -1;\\\\r\\\\n            }\\\\r\\\\n            int retVal = (int)data.Rows[0][0];\\\\r\\\\n            data.Clear();\\\\r\\\\n            return retVal;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        //VERY DANGEROUS!!!! USE AT YOUR OWN RISK!!!\\\\r\\\\n        // DELETE api/pipe/repo\\\\r\\\\n        [HttpDelete(\\\\\\\"\"},{\"Position\":22171,\"NumberToRemove\":93,\"ContentToAdd\":\"{repo}\\\\\\\")]\\\\r\\\\n        public void DeleteRepo(string repo, [FromBody]Account accnt)\\\\r\\\\n        \"},{\"Position\":22265,\"NumberToRemove\":209,\"ContentToAdd\":\"{\\\\r\\\\n            if (accnt == null)\\\\r\\\\n            \"},{\"Position\":22316,\"NumberToRemove\":213,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int repoID = GetRepoID(repo);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":22499,\"NumberToRemove\":175,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":22699,\"NumberToRemove\":252,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            byte[] hash = GetFullPasswordHash(userID, accnt.Password, false);\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_DeleteRepo\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"RepositoryID\\\\\\\", repoID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"UserID\\\\\\\", userID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"PasswordHash\\\\\\\", hash);\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpDelete(\\\\\\\"perms/\"},{\"Position\":23308,\"NumberToRemove\":107,\"ContentToAdd\":\"{repo}\\\\\\\")]\\\\r\\\\n        public void RemoveEdit(string repo, [FromBody](Account, Account) accounts)\\\\r\\\\n        \"},{\"Position\":23931,\"NumberToRemove\":174,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            SqlCommand cmd = SetUpUSP(\\\\\\\"usp_RevokeEdit\\\\\\\", new(string, object)[] \"},{\"Position\":24106,\"NumberToRemove\":347,\"ContentToAdd\":\"{ (\\\\\\\"UserID\\\\\\\", userID), (\\\\\\\"TargetID\\\\\\\", targetID), (\\\\\\\"RepositoryID\\\\\\\", repoID), (\\\\\\\"PasswordHash\\\\\\\", GetFullPasswordHash(userID, accounts.Item1.Password, false)) });\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpPost(\\\\\\\"perms/\"},{\"Position\":24358,\"NumberToRemove\":59,\"ContentToAdd\":\"{repo}\\\\\\\")]\\\\r\\\\n        public void AllowEdit(string repo, [FromBody](Account, Account) accounts)\\\\r\\\\n        \"},{\"Position\":24465,\"NumberToRemove\":207,\"ContentToAdd\":\"{\\\\r\\\\n            int repoID = GetRepoID(repo);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":24558,\"NumberToRemove\":231,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int userID = GetUserID(accounts.Item1.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":24767,\"NumberToRemove\":558,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int targetID = GetUserID(accounts.Item2.Username, false);\\\\r\\\\n            if (targetID < 0)\\\\r\\\\n            \"},{\"Position\":24980,\"NumberToRemove\":80,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            SqlCommand cmd = SetUpUSP(\\\\\\\"usp_AllowEdit\\\\\\\", new(string, object)[] \"},{\"Position\":25154,\"NumberToRemove\":103,\"ContentToAdd\":\"{ (\\\\\\\"UserID\\\\\\\", userID), (\\\\\\\"TargetID\\\\\\\", targetID), (\\\\\\\"RepositoryID\\\\\\\", repoID), (\\\\\\\"PasswordHash\\\\\\\", GetFullPasswordHash(userID, accounts.Item1.Password, false)) });\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpPost(\\\\\\\"changePass\\\\\\\")]\\\\r\\\\n        public void ChangePassword([FromBody](Account, string) account)\\\\r\\\\n        \"},{\"Position\":25501,\"NumberToRemove\":252,\"ContentToAdd\":\"{\\\\r\\\\n            if (account.Item1 == null)\\\\r\\\\n            \"},{\"Position\":25560,\"NumberToRemove\":237,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int userID = GetUserID(account.Item1.Username, true);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":25767,\"NumberToRemove\":288,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            string salt = \\\\\\\"\\\\\\\";\\\\r\\\\n            Random random = new Random();\\\\r\\\\n            for (int i = 0; i < 50; i++)\\\\r\\\\n            \"},{\"Position\":25998,\"NumberToRemove\":660,\"ContentToAdd\":\"{\\\\r\\\\n                salt = salt + (char)(random.Next(32, 126));\\\\r\\\\n            }\\\\r\\\\n            string password = salt + account.Item2;\\\\r\\\\n            SHA256Managed sha256 = new SHA256Managed();\\\\r\\\\n            byte[] hash = sha256.ComputeHash(Encoding.UTF8.GetBytes(password));\\\\r\\\\n            RunVoidAuthenticatable(SetUpUSP(\\\\\\\"usp_ChangePassword\\\\\\\", (\\\\\\\"UserID\\\\\\\", userID), (\\\\\\\"PasswordHash\\\\\\\", GetFullPasswordHash(userID, account.Item1.Password, false)), (\\\\\\\"NewPasswordHash\\\\\\\", hash), (\\\\\\\"NewSalt\\\\\\\", salt)));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpPost(\\\\\\\"passwordReset/\"},{\"Position\":26556,\"NumberToRemove\":35,\"ContentToAdd\":\"{username}\\\\\\\")]\\\\r\\\\n        public void ResetPassword(string username)\\\\r\\\\n        \"},{\"Position\":26636,\"NumberToRemove\":74,\"ContentToAdd\":\"{\\\\r\\\\n            int userID = GetUserID(username, true);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":26739,\"NumberToRemove\":127,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            var resetAddress = SqlReturnObj(SetUpUSP(\\\\\\\"usp_GetResetAddress\\\\\\\", (\\\\\\\"UserID\\\\\\\", userID)));\\\\r\\\\n            if(resetAddress == null)\\\\r\\\\n            \"},{\"Position\":26991,\"NumberToRemove\":266,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            var saltP = SqlReturnObj(SetUpUSP(\\\\\\\"usp_GetSaltUserID\\\\\\\", (\\\\\\\"UserID\\\\\\\", userID)));\\\\r\\\\n            if (saltP == null)\\\\r\\\\n            \"},{\"Position\":27228,\"NumberToRemove\":235,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n            // new SmtpClient()\\\\r\\\\n            // new NetworkCredentials\\\\r\\\\n            // new MailMessage().To.Add()\\\\r\\\\n            SmtpClient client = new SmtpClient()\\\\r\\\\n            \"},{\"Position\":27516,\"NumberToRemove\":148,\"ContentToAdd\":\"{\\\\r\\\\n                Port = 587,\\\\r\\\\n                EnableSsl = true,\\\\r\\\\n                DeliveryMethod = SmtpDeliveryMethod.Network,\\\\r\\\\n                UseDefaultCredentials = false,\\\\r\\\\n                Host = \\\\\\\"smtp.gmail.com\\\\\\\",\\\\r\\\\n                Credentials = emailCredentials\\\\r\\\\n            };\\\\r\\\\n            Random random = new Random();\\\\r\\\\n            StringBuilder sb = new StringBuilder(siteAddress);\\\\r\\\\n            sb.Append(\\\\\\\"/api/pipe/passwordResetFinal?userID=\\\\\\\");\\\\r\\\\n            sb.Append(userID);\\\\r\\\\n            sb.Append(\\\\\\\"&code=\\\\\\\");\\\\r\\\\n            string salt = (string)saltP;\\\\r\\\\n            for(int i = 0; i < salt.Length; i++)\\\\r\\\\n            \"},{\"Position\":28176,\"NumberToRemove\":175,\"ContentToAdd\":\"{\\\\r\\\\n                sb.Append($\\\\\\\"%\"},{\"Position\":28211,\"NumberToRemove\":433,\"ContentToAdd\":\"{((int)salt[i]):X}\\\\\\\");\\\\r\\\\n            }\\\\r\\\\n            try\\\\r\\\\n            \"},{\"Position\":28285,\"NumberToRemove\":296,\"ContentToAdd\":\"{\\\\r\\\\n                MailMessage message = new MailMessage(emailCredentials.UserName, (string)resetAddress)\\\\r\\\\n                \"},{\"Position\":28412,\"NumberToRemove\":197,\"ContentToAdd\":\"{\\\\r\\\\n                    Subject = passwordResetSubject,\\\\r\\\\n                    Body = passwordResetBody.Replace(\\\\\\\"%LINK\\\\\\\", sb.ToString())\\\\r\\\\n                };\\\\r\\\\n                client.Send(message);\\\\r\\\\n            }\\\\r\\\\n            catch(Exception)\\\\r\\\\n            \"},{\"Position\":28678,\"NumberToRemove\":416,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpGet(\\\\\\\"passwordResetFinal\\\\\\\")]\\\\r\\\\n        public string FinishPasswordReset(int userID, string code)\\\\r\\\\n        \"},{\"Position\":28913,\"NumberToRemove\":52,\"ContentToAdd\":\"{\\\\r\\\\n            Random random = new Random();\\\\r\\\\n            string newPassword = \\\\\\\"\\\\\\\";\\\\r\\\\n            for (int i = 0; i < 15; i++)\\\\r\\\\n            \"},{\"Position\":29061,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n                newPassword += (char)random.Next(32, 126);\\\\r\\\\n            }\\\\r\\\\n            string salt = \\\\\\\"\\\\\\\";\\\\r\\\\n            for (int i = 0; i < 50; i++)\\\\r\\\\n            \"},{\"Position\":29236,\"NumberToRemove\":186,\"ContentToAdd\":\"{\\\\r\\\\n                salt = salt + (char)(random.Next(32, 126));\\\\r\\\\n            }\\\\r\\\\n            string password = salt + newPassword;\\\\r\\\\n            SHA256Managed sha256 = new SHA256Managed();\\\\r\\\\n            byte[] hash = sha256.ComputeHash(Encoding.UTF8.GetBytes(password));\\\\r\\\\n            var saltToCheck = SqlReturnObj(SetUpUSP(\\\\\\\"usp_GetSaltUserID\\\\\\\", (\\\\\\\"UserID\\\\\\\", userID)));\\\\r\\\\n            if(saltToCheck == null)\\\\r\\\\n            \"},{\"Position\":29669,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return \\\\\\\"Authentication Error: Incorrect userID\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n            var passwordHash = SqlReturnObj(SetUpUSP(\\\\\\\"usp_GetPasswordHash\\\\\\\", (\\\\\\\"UserID\\\\\\\", userID)));\\\\r\\\\n            if (passwordHash == null)\\\\r\\\\n            \"},{\"Position\":29965,\"NumberToRemove\":33,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return \\\\\\\"Authentication Error: Incorrect userID\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n            if((string)saltToCheck != code)\\\\r\\\\n            \"},{\"Position\":30162,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return \\\\\\\"Authentication Error: Incorrect code or userID\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n            RunVoidAuthenticatable(SetUpUSP(\\\\\\\"usp_ChangePassword\\\\\\\", (\\\\\\\"UserID\\\\\\\", userID), (\\\\\\\"PasswordHash\\\\\\\", (byte[])passwordHash), (\\\\\\\"NewPasswordHash\\\\\\\", hash), (\\\\\\\"NewSalt\\\\\\\", salt)));\\\\r\\\\n            return $\\\\\\\"Please change your password. Your password has been reset to \"},{\"Position\":30578,\"NumberToRemove\":51,\"ContentToAdd\":\"{newPassword}\\\\\\\";\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]},\"},{\"Position\":30630,\"NumberToRemove\":50,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Models\\\",\\\"Folders\\\":[],\\\"Files\\\":[\"},{\"Position\":30677,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Models\\\\\\\\Commit.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\n\\\\r\\\\nnamespace Pipe.Models\\\\r\\\\n\"},{\"Position\":30863,\"NumberToRemove\":129,\"ContentToAdd\":\"{\\\\r\\\\n    public class Commit\\\\r\\\\n    \"},{\"Position\":30899,\"NumberToRemove\":203,\"ContentToAdd\":\"{\\\\r\\\\n        public string Diffs \"},{\"Position\":30932,\"NumberToRemove\":51,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public int Parent \"},{\"Position\":30979,\"NumberToRemove\":62,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Message \"},{\"Position\":31030,\"NumberToRemove\":24,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Author \"},{\"Position\":31080,\"NumberToRemove\":108,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Committer \"},{\"Position\":31133,\"NumberToRemove\":120,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public Commit(string diffs, string message, string author, string committer, int parent)\\\\r\\\\n        \"},{\"Position\":31262,\"NumberToRemove\":26,\"ContentToAdd\":\"{\\\\r\\\\n            Diffs = diffs;\\\\r\\\\n            Message = message;\\\\r\\\\n            Author = author;\\\\r\\\\n            Committer = committer;\\\\r\\\\n            Parent = parent;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]},\"},{\"Position\":31465,\"NumberToRemove\":153,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Properties\\\",\\\"Folders\\\":[],\\\"Files\\\":[\"},{\"Position\":31516,\"NumberToRemove\":95,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Properties\\\\\\\\launchSettings.json\\\",\\\"Contents\\\":\\\"\"},{\"Position\":31578,\"NumberToRemove\":150,\"ContentToAdd\":\"{\\\\r\\\\n  \\\\\\\"iisSettings\\\\\\\": \"},{\"Position\":31602,\"NumberToRemove\":151,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"windowsAuthentication\\\\\\\": false,\\\\r\\\\n    \\\\\\\"anonymousAuthentication\\\\\\\": true,\\\\r\\\\n    \\\\\\\"iisExpress\\\\\\\": \"},{\"Position\":31710,\"NumberToRemove\":61,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"applicationUrl\\\\\\\": \\\\\\\"http://localhost:56854/\\\\\\\",\\\\r\\\\n      \\\\\\\"sslPort\\\\\\\": 0\\\\r\\\\n    }\\\\r\\\\n  },\\\\r\\\\n  \\\\\\\"profiles\\\\\\\": \"},{\"Position\":31830,\"NumberToRemove\":59,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"IIS Express\\\\\\\": \"},{\"Position\":31856,\"NumberToRemove\":20,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"commandName\\\\\\\": \\\\\\\"IISExpress\\\\\\\",\\\\r\\\\n      \\\\\\\"launchBrowser\\\\\\\": true,\\\\r\\\\n      \\\\\\\"launchUrl\\\\\\\": \\\\\\\"api/values\\\\\\\",\\\\r\\\\n      \\\\\\\"environmentVariables\\\\\\\": \"},{\"Position\":32009,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n        \\\\\\\"ASPNETCORE_ENVIRONMENT\\\\\\\": \\\\\\\"Development\\\\\\\"\\\\r\\\\n      }\\\\r\\\\n    },\\\\r\\\\n    \\\\\\\"Pipe\\\\\\\": \"},{\"Position\":32104,\"NumberToRemove\":140,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"commandName\\\\\\\": \\\\\\\"Project\\\\\\\",\\\\r\\\\n      \\\\\\\"launchBrowser\\\\\\\": true,\\\\r\\\\n      \\\\\\\"launchUrl\\\\\\\": \\\\\\\"api/values\\\\\\\",\\\\r\\\\n      \\\\\\\"environmentVariables\\\\\\\": \"},{\"Position\":32254,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n        \\\\\\\"ASPNETCORE_ENVIRONMENT\\\\\\\": \\\\\\\"Development\\\\\\\"\\\\r\\\\n      },\\\\r\\\\n      \\\\\\\"applicationUrl\\\\\\\": \\\\\\\"http://localhost:56855/\\\\\\\"\\\\r\\\\n    }\\\\r\\\\n  }\\\\r\\\\n}\\\"}]},\"},{\"Position\":32405,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\wwwroot\\\",\\\"Folders\\\":[],\\\"Files\\\":[]}],\\\"Files\\\":[\"},{\"Position\":32466,\"NumberToRemove\":114,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\appsettings.Development.json\\\",\\\"Contents\\\":\\\"\"},{\"Position\":32525,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\\r\\\\n  \\\\\\\"Logging\\\\\\\": \"},{\"Position\":32545,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"IncludeScopes\\\\\\\": false,\\\\r\\\\n    \\\\\\\"LogLevel\\\\\\\": \"},{\"Position\":32601,\"NumberToRemove\":79,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"Default\\\\\\\": \\\\\\\"Debug\\\\\\\",\\\\r\\\\n      \\\\\\\"System\\\\\\\": \\\\\\\"Information\\\\\\\",\\\\r\\\\n      \\\\\\\"Microsoft\\\\\\\": \\\\\\\"Information\\\\\\\"\\\\r\\\\n    }\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":32741,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\appsettings.json\\\",\\\"Contents\\\":\\\"\"},{\"Position\":32788,\"NumberToRemove\":82,\"ContentToAdd\":\"{\\\\r\\\\n  \\\\\\\"ConnectionStrings\\\\\\\": \"},{\"Position\":32818,\"NumberToRemove\":244,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"Dev\\\\\\\": \\\\\\\"server=GMRMLTV; database=PVC; user=sa; password=GreatMinds110\\\\\\\"\\\\r\\\\n  },\\\\r\\\\n\\\\r\\\\n  \\\\\\\"Logging\\\\\\\": \"},{\"Position\":32932,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"IncludeScopes\\\\\\\": false,\\\\r\\\\n    \\\\\\\"Debug\\\\\\\": \"},{\"Position\":32985,\"NumberToRemove\":723,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"LogLevel\\\\\\\": \"},{\"Position\":33010,\"NumberToRemove\":346,\"ContentToAdd\":\"{\\\\r\\\\n        \\\\\\\"Default\\\\\\\": \\\\\\\"Warning\\\\\\\"\\\\r\\\\n      }\\\\r\\\\n    },\\\\r\\\\n    \\\\\\\"Console\\\\\\\": \"},{\"Position\":33089,\"NumberToRemove\":37,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"LogLevel\\\\\\\": \"},{\"Position\":33114,\"NumberToRemove\":63,\"ContentToAdd\":\"{\\\\r\\\\n        \\\\\\\"Default\\\\\\\": \\\\\\\"Warning\\\\\\\"\\\\r\\\\n      }\\\\r\\\\n    }\\\\r\\\\n  },\\\\r\\\\n  \\\\\\\"Email\\\\\\\": \"},{\"Position\":33196,\"NumberToRemove\":266,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"Username\\\\\\\": \\\\\\\"pvcpipe116@gmail.com\\\\\\\",\\\\r\\\\n    \\\\\\\"Password\\\\\\\": \\\\\\\"PVCP1pe!\\\\\\\",\\\\r\\\\n    \\\\\\\"Subject\\\\\\\": \\\\\\\"PVC-Pipe Password Reset\\\\\\\",\\\\r\\\\n    \\\\\\\"Body\\\\\\\": \\\\\\\"Please change your password. Your password reset link is %LINK\\\\\\\"\\\\r\\\\n  },\\\\r\\\\n  \\\\\\\"SiteData\\\\\\\": \"},{\"Position\":33440,\"NumberToRemove\":424,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"Address\\\\\\\": \\\\\\\"http://localhost:56854\\\\\\\"\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":33507,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Pipe.csproj\\\",\\\"Contents\\\":\\\"<Project Sdk=\\\\\\\"Microsoft.NET.Sdk.Web\\\\\\\">\\\\r\\\\n\\\\r\\\\n  <PropertyGroup>\\\\r\\\\n    <TargetFramework>netcoreapp2.0</TargetFramework>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\\\\\\\">\\\\r\\\\n    <DefineConstants>TRACE;DEBUG</DefineConstants>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Folder Include=\\\\\\\"wwwroot\\\\\\\\\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <PackageReference Include=\\\\\\\"Microsoft.AspNetCore.All\\\\\\\" Version=\\\\\\\"2.0.6\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <DotNetCliToolReference Include=\\\\\\\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\\\\\\\" Version=\\\\\\\"2.0.3\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n\\\\r\\\\n</Project>\\\\r\\\\n\\\"},\"},{\"Position\":34230,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Program.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.IO;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing Microsoft.AspNetCore;\\\\r\\\\nusing Microsoft.AspNetCore.Hosting;\\\\r\\\\nusing Microsoft.Extensions.Configuration;\\\\r\\\\nusing Microsoft.Extensions.Logging;\\\\r\\\\n\\\\r\\\\nnamespace Pipe\\\\r\\\\n\"},{\"Position\":34576,\"NumberToRemove\":116,\"ContentToAdd\":\"{\\\\r\\\\n    public class Program\\\\r\\\\n    \"},{\"Position\":34613,\"NumberToRemove\":65,\"ContentToAdd\":\"{\\\\r\\\\n        public static void Main(string[] args)\\\\r\\\\n        \"},{\"Position\":34676,\"NumberToRemove\":92,\"ContentToAdd\":\"{\\\\r\\\\n            BuildWebHost(args).Run();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public static IWebHost BuildWebHost(string[] args) =>\\\\r\\\\n            WebHost.CreateDefaultBuilder(args)\\\\r\\\\n                .UseStartup<Startup>()\\\\r\\\\n                .Build();\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":34942,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Startup.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing Microsoft.AspNetCore.Builder;\\\\r\\\\nusing Microsoft.AspNetCore.Hosting;\\\\r\\\\nusing Microsoft.Extensions.Configuration;\\\\r\\\\nusing Microsoft.Extensions.DependencyInjection;\\\\r\\\\nusing Microsoft.Extensions.Logging;\\\\r\\\\nusing Microsoft.Extensions.Options;\\\\r\\\\n\\\\r\\\\nnamespace Pipe\\\\r\\\\n\"},{\"Position\":35366,\"NumberToRemove\":70,\"ContentToAdd\":\"{\\\\r\\\\n    //public interface INotifier\\\\r\\\\n    //\"},{\"Position\":35413,\"NumberToRemove\":103,\"ContentToAdd\":\"{\\\\r\\\\n    //    string Address \"},{\"Position\":35443,\"NumberToRemove\":63,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n    //    void SendMail();\\\\r\\\\n    //}\\\\r\\\\n\\\\r\\\\n    //public class EmailNotifier : INotifier\\\\r\\\\n    //\"},{\"Position\":35559,\"NumberToRemove\":92,\"ContentToAdd\":\"{\\\\r\\\\n    //    public EmailNotifier(string address)\\\\r\\\\n    //    \"},{\"Position\":35624,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n    //        Address = address;\\\\r\\\\n    //    }\\\\r\\\\n\\\\r\\\\n    //    public string Address \"},{\"Position\":35716,\"NumberToRemove\":69,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n    //    public void SendMail()\\\\r\\\\n    //    \"},{\"Position\":35783,\"NumberToRemove\":83,\"ContentToAdd\":\"{\\\\r\\\\n    //        System.Diagnostics.Debug.WriteLine($\\\\\\\"Mail sent to \"},{\"Position\":35853,\"NumberToRemove\":69,\"ContentToAdd\":\"{Address}\\\\\\\");\\\\r\\\\n    //    }\\\\r\\\\n    //}\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n    //public class SMSNotifier : INotifier\\\\r\\\\n    //\"},{\"Position\":35956,\"NumberToRemove\":112,\"ContentToAdd\":\"{\\\\r\\\\n    //    public SMSNotifier(string address)\\\\r\\\\n    //    \"},{\"Position\":36019,\"NumberToRemove\":198,\"ContentToAdd\":\"{\\\\r\\\\n    //        Address = address;\\\\r\\\\n    //    }\\\\r\\\\n\\\\r\\\\n    //    public string Address \"},{\"Position\":36111,\"NumberToRemove\":525,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n    //    public void SendMail()\\\\r\\\\n    //    \"},{\"Position\":36178,\"NumberToRemove\":57,\"ContentToAdd\":\"{\\\\r\\\\n    //        System.Diagnostics.Debug.WriteLine($\\\\\\\"SMS sent to \"},{\"Position\":36247,\"NumberToRemove\":149,\"ContentToAdd\":\"{Address}\\\\\\\");\\\\r\\\\n    //    }\\\\r\\\\n    //}\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n    public class Startup\\\\r\\\\n    \"},{\"Position\":36330,\"NumberToRemove\":64,\"ContentToAdd\":\"{\\\\r\\\\n        public Startup(IConfiguration configuration)\\\\r\\\\n        \"},{\"Position\":36399,\"NumberToRemove\":218,\"ContentToAdd\":\"{\\\\r\\\\n            Configuration = configuration;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public IConfiguration Configuration \"},{\"Position\":36511,\"NumberToRemove\":79,\"ContentToAdd\":\"{ get; }\\\\r\\\\n\\\\r\\\\n        // This method gets called by the runtime. Use this method to add services to the container.\\\\r\\\\n        public void ConfigureServices(IServiceCollection services)\\\\r\\\\n        \"},{\"Position\":36709,\"NumberToRemove\":302,\"ContentToAdd\":\"{\\\\r\\\\n            services.AddMvc();\\\\r\\\\n\\\\r\\\\n//#if USESMS\\\\r\\\\n//            services.AddTransient<INotifier, SMSNotifier>((i) => new SMSNotifier(\\\\\\\"123-555-1212\\\\\\\"));\\\\r\\\\n//#else\\\\r\\\\n//            services.AddTransient<INotifier, EmailNotifier>(((i) => new EmailNotifier(\\\\\\\"peterAdmin@pipe.com\\\\\\\")));\\\\r\\\\n//#endif\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\\\\r\\\\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\\\\r\\\\n        \"},{\"Position\":37234,\"NumberToRemove\":86,\"ContentToAdd\":\"{\\\\r\\\\n            if (env.IsDevelopment())\\\\r\\\\n            \"},{\"Position\":37291,\"NumberToRemove\":84,\"ContentToAdd\":\"{\\\\r\\\\n                app.UseDeveloperExceptionPage();\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            app.UseMvc();\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":37440,\"NumberToRemove\":90,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\.pvcignore\\\",\\\"Contents\\\":\\\"R: bin|obj|vs|packages\\\\r\\\\n\\\"},\"},{\"Position\":37504,\"NumberToRemove\":288,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe.sln\\\",\\\"Contents\\\":\\\"\\\\r\\\\nMicrosoft Visual Studio Solution File, Format Version 12.00\\\\r\\\\n# Visual Studio 15\\\\r\\\\nVisualStudioVersion = 15.0.27428.2027\\\\r\\\\nMinimumVisualStudioVersion = 10.0.40219.1\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":37722,\"NumberToRemove\":81,\"ContentToAdd\":\"{9A19103F-16F7-4668-BE54-9A1E7A4F7556}\\\\\\\") = \\\\\\\"Pipe\\\\\\\", \\\\\\\"Pipe\\\\\\\\Pipe.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":37801,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nGlobal\\\\r\\\\n\\\\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\\\\r\\\\n\\\\t\\\\tDebug|Any CPU = Debug|Any CPU\\\\r\\\\n\\\\t\\\\tRelease|Any CPU = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":38103,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":38189,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":38273,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":38363,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(SolutionProperties) = preSolution\\\\r\\\\n\\\\t\\\\tHideSolutionNode = FALSE\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ExtensibilityGlobals) = postSolution\\\\r\\\\n\\\\t\\\\tSolutionGuid = \"},{\"Position\":38651,\"NumberToRemove\":0,\"ContentToAdd\":\"{A7FB2405-9F73-4374-A8D3-03010D1B7FD6}\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\nEndGlobal\\\\r\\\\n\\\"}]}\"}]","Parent":-266072256,"Message":"9/29/2018 4:34:51 PM: Wrote basic functions for repo auth checking. Next, use them.","Author":"penguinee232","Committer":"penguinee232"}