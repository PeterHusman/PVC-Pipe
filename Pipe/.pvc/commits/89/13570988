{"Diffs":"[{\"Position\":102,\"NumberToRemove\":446,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Controllers\\\\\\\\PVCController.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.Data;\\\\r\\\\nusing System.Data.SqlClient;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Net;\\\\r\\\\nusing System.Net.Mail;\\\\r\\\\nusing System.Security;\\\\r\\\\nusing System.Security.Cryptography;\\\\r\\\\nusing System.Text;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing Microsoft.AspNetCore.Mvc;\\\\r\\\\nusing Microsoft.Extensions.Configuration;\\\\r\\\\nusing Newtonsoft.Json;\\\\r\\\\nusing Pipe.Models;\\\\r\\\\n\\\\r\\\\nnamespace Pipe.Controllers\\\\r\\\\n\"},{\"Position\":706,\"NumberToRemove\":180,\"ContentToAdd\":\"{\\\\r\\\\n        IConfiguration configuration;\\\\r\\\\n        SqlConnection connection;\\\\r\\\\n        NetworkCredential emailCredentials;\\\\r\\\\n        string passwordResetBody;\\\\r\\\\n        string passwordResetSubject;\\\\r\\\\n        string siteAddress;\\\\r\\\\n        Dictionary<int, (string, DateTime)> resetLinks;\\\\r\\\\n\\\\r\\\\n        public PVCController(IConfiguration configuration)//, INotifier notifier)\\\\r\\\\n        \"},{\"Position\":1100,\"NumberToRemove\":246,\"ContentToAdd\":\"{\\\\r\\\\n            this.configuration = configuration;\\\\r\\\\n            connection = new SqlConnection(configuration.GetConnectionString(\\\\\\\"Dev\\\\\\\"));\\\\r\\\\n            var emailAuth = configuration.GetSection(\\\\\\\"Email\\\\\\\");\\\\r\\\\n            emailCredentials = new NetworkCredential(emailAuth[\\\\\\\"Username\\\\\\\"], emailAuth[\\\\\\\"Password\\\\\\\"]);\\\\r\\\\n            passwordResetBody = emailAuth[\\\\\\\"Body\\\\\\\"];\\\\r\\\\n            passwordResetSubject = emailAuth[\\\\\\\"Subject\\\\\\\"];\\\\r\\\\n            siteAddress = configuration.GetSection(\\\\\\\"SiteData\\\\\\\")[\\\\\\\"Address\\\\\\\"];\\\\r\\\\n            resetLinks = new Dictionary<int, (string, DateTime)>();\\\\r\\\\n            //notifier.SendMail();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public class Account\\\\r\\\\n        \"},{\"Position\":3021,\"NumberToRemove\":377,\"ContentToAdd\":\"{ userID });\\\\r\\\\n            var prospectiveSalt = SqlReturnObj(cmd);\\\\r\\\\n            if(prospectiveSalt == null)\\\\r\\\\n            \"},{\"Position\":3148,\"NumberToRemove\":207,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return new byte[0];\\\\r\\\\n            }\\\\r\\\\n            string salt = (string)prospectiveSalt;\\\\r\\\\n            password = salt + password;\\\\r\\\\n            SHA256Managed sha256 = new SHA256Managed();\\\\r\\\\n            return sha256.ComputeHash(Encoding.UTF8.GetBytes(password));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        private SqlCommand SetUpUSP(string usp, string[] parameterNames, object[] parameterValues)\\\\r\\\\n        \"},{\"Position\":3614,\"NumberToRemove\":232,\"ContentToAdd\":\"{\\\\r\\\\n            SqlCommand cmd = new SqlCommand(usp, connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            for (int i = 0; i < parameterNames.Length; i++)\\\\r\\\\n            \"},{\"Position\":3821,\"NumberToRemove\":52,\"ContentToAdd\":\"{\\\\r\\\\n                cmd.Parameters.AddWithValue(parameterNames[i], parameterValues[i]);\\\\r\\\\n            }\\\\r\\\\n            return cmd;\\\\r\\\\n        }\\\\r\\\\n        private SqlCommand SetUpUSP(string usp, params (string, object)[] parameters)\\\\r\\\\n        \"},{\"Position\":4067,\"NumberToRemove\":341,\"ContentToAdd\":\"{\\\\r\\\\n            SqlCommand cmd = new SqlCommand(usp, connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            for (int i = 0; i < parameters.Length; i++)\\\\r\\\\n            \"},{\"Position\":4270,\"NumberToRemove\":189,\"ContentToAdd\":\"{\\\\r\\\\n                cmd.Parameters.AddWithValue(parameters[i].Item1, parameters[i].Item2);\\\\r\\\\n            }\\\\r\\\\n            return cmd;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        private int GetUserID(string username, bool openConnection)\\\\r\\\\n        \"},{\"Position\":4505,\"NumberToRemove\":206,\"ContentToAdd\":\"{\\\\r\\\\n            if (openConnection)\\\\r\\\\n            \"},{\"Position\":4557,\"NumberToRemove\":197,\"ContentToAdd\":\"{ connection.Open(); }\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_GetUserID\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"Username\\\\\\\", username));\\\\r\\\\n            object userID = SqlReturnObj(cmd);\\\\r\\\\n            if (userID != null)\\\\r\\\\n            \"},{\"Position\":4898,\"NumberToRemove\":81,\"ContentToAdd\":\"{\\\\r\\\\n                return (int)SqlReturnObj(cmd);\\\\r\\\\n            }\\\\r\\\\n            return -1;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n        private static object SqlReturnObj(SqlCommand cmd)\\\\r\\\\n        \"},{\"Position\":5087,\"NumberToRemove\":50,\"ContentToAdd\":\"{\\\\r\\\\n            SqlDataAdapter adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            DataTable data = new DataTable();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            if (data.Rows.Count <= 0)\\\\r\\\\n            \"},{\"Position\":5294,\"NumberToRemove\":48,\"ContentToAdd\":\"{\\\\r\\\\n                return null;\\\\r\\\\n            }\\\\r\\\\n            object retVal = data.Rows[0][0];\\\\r\\\\n            data.Clear();\\\\r\\\\n            return retVal;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpGet(\\\\\\\"\"},{\"Position\":5491,\"NumberToRemove\":480,\"ContentToAdd\":\"{repo}/branches\\\\\\\")]\\\\r\\\\n        public string GetBranches(string repo)\\\\r\\\\n        \"},{\"Position\":5572,\"NumberToRemove\":409,\"ContentToAdd\":\"{\\\\r\\\\n            if (repo == null)\\\\r\\\\n            \"},{\"Position\":5622,\"NumberToRemove\":217,\"ContentToAdd\":\"{\\\\r\\\\n                return \\\\\\\"\\\\\\\";//new string[] \"},{\"Position\":5670,\"NumberToRemove\":315,\"ContentToAdd\":\"{ };\\\\r\\\\n            }\\\\r\\\\n            connection.Open();\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_GetRepoID\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryName\\\\\\\", repo));\\\\r\\\\n            SqlDataAdapter adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            DataTable data = new DataTable();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            if (data.Rows.Count <= 0)\\\\r\\\\n            \"},{\"Position\":6151,\"NumberToRemove\":92,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return \\\\\\\"\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_GetBranchesOfRepo\\\\\\\";\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", (int)data.Rows[0][0]));\\\\r\\\\n            data.Clear();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            if (data.Rows.Count == 0)\\\\r\\\\n            \"},{\"Position\":6560,\"NumberToRemove\":50,\"ContentToAdd\":\"{\\\\r\\\\n                return \\\\\\\"\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n            Dictionary<string, int> output = new Dictionary<string, int>(data.Rows.Count);\\\\r\\\\n            for (int i = 0; i < data.Rows.Count; i++)\\\\r\\\\n            \"},{\"Position\":6777,\"NumberToRemove\":48,\"ContentToAdd\":\"{\\\\r\\\\n                output.Add(data.Rows[i][\\\\\\\"BranchName\\\\\\\"].ToString(), (int)data.Rows[i][\\\\\\\"CommitID\\\\\\\"]);\\\\r\\\\n            }\\\\r\\\\n            return JsonConvert.SerializeObject(output);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        //Returns history of a branch\\\\r\\\\n        // GET api/pipe/[repo]?branch=master&...\\\\r\\\\n        [HttpGet(\\\\\\\"\"},{\"Position\":7092,\"NumberToRemove\":579,\"ContentToAdd\":\"{repo}\\\\\\\")]\\\\r\\\\n        public string Get(string repo, string branch = \\\\\\\"master\\\\\\\")\\\\r\\\\n        \"},{\"Position\":7184,\"NumberToRemove\":387,\"ContentToAdd\":\"{\\\\r\\\\n            if (repo == null)\\\\r\\\\n            \"},{\"Position\":7234,\"NumberToRemove\":333,\"ContentToAdd\":\"{\\\\r\\\\n                return \\\\\\\"\\\\\\\";//new string[] \"},{\"Position\":7282,\"NumberToRemove\":48,\"ContentToAdd\":\"{ };\\\\r\\\\n            }\\\\r\\\\n            connection.Open();\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_GetRepoID\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryName\\\\\\\", repo));\\\\r\\\\n            SqlDataAdapter adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            DataTable data = new DataTable();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_GetBranchCommitID\\\\\\\";\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n            if (data.Rows.Count <= 0)\\\\r\\\\n            \"},{\"Position\":7862,\"NumberToRemove\":125,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return \\\\\\\"\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", (int)data.Rows[0][0]));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"BranchName\\\\\\\", branch));\\\\r\\\\n            data.Clear();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            if (data.Rows.Count == 0)\\\\r\\\\n            \"},{\"Position\":8249,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n                return \\\\\\\"\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_GetRepoHistoryFromRecentCommit\\\\\\\";\\\\r\\\\n            cmd.Parameters[1] = new SqlParameter(\\\\\\\"CommitID\\\\\\\", (int)data.Rows[0][1]);\\\\r\\\\n            data.Clear();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            if (data.Rows.Count == 0)\\\\r\\\\n            \"},{\"Position\":8582,\"NumberToRemove\":145,\"ContentToAdd\":\"{\\\\r\\\\n                return \\\\\\\"\\\\\\\";//new string[] \"},{\"Position\":8630,\"NumberToRemove\":155,\"ContentToAdd\":\"{ };\\\\r\\\\n            }\\\\r\\\\n            return JsonConvert.SerializeObject(commitHistoryFromDataBaseEntry(data));//new string[] \"},{\"Position\":8755,\"NumberToRemove\":446,\"ContentToAdd\":\"{ data.Rows[0][\\\\\\\"Message\\\\\\\"].ToString() };//new string[] \"},{\"Position\":8811,\"NumberToRemove\":48,\"ContentToAdd\":\"{ \\\\\\\"value1\\\\\\\", \\\\\\\"value2\\\\\\\", repo };\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        Dictionary<int, Commit> commitHistoryFromDataBaseEntry(DataTable table)\\\\r\\\\n        \"},{\"Position\":8956,\"NumberToRemove\":7,\"ContentToAdd\":\"{\\\\r\\\\n            Dictionary<int, Commit> commits = new Dictionary<int, Commit>();\\\\r\\\\n            for (int i = 0; i < table.Rows.Count; i++)\\\\r\\\\n            \"},{\"Position\":9111,\"NumberToRemove\":127,\"ContentToAdd\":\"{\\\\r\\\\n                commits.Add((int)table.Rows[i][\\\\\\\"CommitID\\\\\\\"], new Commit((string)table.Rows[i][\\\\\\\"TextDiffs\\\\\\\"], (string)table.Rows[i][\\\\\\\"Message\\\\\\\"], (string)table.Rows[i][\\\\\\\"Author\\\\\\\"], (string)table.Rows[i][\\\\\\\"Committer\\\\\\\"], (int)table.Rows[i][\\\\\\\"ParentID\\\\\\\"]));\\\\r\\\\n            }\\\\r\\\\n            return commits;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        //[HttpPost]\\\\r\\\\n        //public void Post([FromBody]Commit[] commits, [FromBody]string branch)\\\\r\\\\n        //\"},{\"Position\":9557,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n\\\\r\\\\n        //}\\\\r\\\\n\\\\r\\\\n        [HttpPost(\\\\\\\"\"},{\"Position\":9605,\"NumberToRemove\":182,\"ContentToAdd\":\"{repo}/\"},{\"Position\":9612,\"NumberToRemove\":278,\"ContentToAdd\":\"{branch}\\\\\\\")]\\\\r\\\\n        public void CreateBranch(string repo, string branch, int commitID, [FromBody]Account accnt)\\\\r\\\\n        \"},{\"Position\":9739,\"NumberToRemove\":735,\"ContentToAdd\":\"{\\\\r\\\\n            if (accnt == null)\\\\r\\\\n            \"},{\"Position\":9790,\"NumberToRemove\":210,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int repoID = GetRepoID(repo);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":9973,\"NumberToRemove\":105,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_AddBranch\\\\\\\", connection);\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":10252,\"NumberToRemove\":94,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            byte[] hash = GetFullPasswordHash(userID, accnt.Password, false);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"BranchName\\\\\\\", branch));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"CommitID\\\\\\\", commitID));\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"UserID\\\\\\\", userID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"PasswordHash\\\\\\\", hash);\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        private bool RunVoidAuthenticatable(SqlCommand cmd)\\\\r\\\\n        \"},{\"Position\":10987,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n            SqlDataAdapter adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            DataTable table = new DataTable();\\\\r\\\\n            adapter.Fill(table);\\\\r\\\\n            if (table.Rows.Count <= 0)\\\\r\\\\n            \"},{\"Position\":11197,\"NumberToRemove\":581,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return false;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            return true;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpPost(\\\\\\\"\"},{\"Position\":11367,\"NumberToRemove\":270,\"ContentToAdd\":\"{repo}\\\\\\\")]\\\\r\\\\n        public void CreateRepo(string repo, [FromBody]Account accnt)\\\\r\\\\n        \"},{\"Position\":11461,\"NumberToRemove\":771,\"ContentToAdd\":\"{\\\\r\\\\n            if (accnt == null)\\\\r\\\\n            \"},{\"Position\":11512,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            connection.Open();\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_AddRepoWOID\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"Name\\\\\\\", repo));\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":11958,\"NumberToRemove\":880,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"UserID\\\\\\\", userID));\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_AddCommit\\\\\\\";\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n            byte[] hash = GetFullPasswordHash(userID, accnt.Password, false);\\\\r\\\\n            int repoID = GetRepoID(repo, false);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":12445,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int commitID = new Random().Next(1, int.MaxValue);\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"CommitID\\\\\\\", commitID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"Message\\\\\\\", \\\\\\\"Initial commit for repository \\\\\\\" + repo));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"ParentID\\\\\\\", 0));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"Author\\\\\\\", \\\\\\\"Auto-generated\\\\\\\"));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"Committer\\\\\\\", \\\\\\\"Auto-generated\\\\\\\"));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"TextDiffs\\\\\\\", JsonConvert.SerializeObject(new Diff[] \"},{\"Position\":13216,\"NumberToRemove\":265,\"ContentToAdd\":\"{ new Diff(0, 0, JsonConvert.SerializeObject(new Folder \"},{\"Position\":13272,\"NumberToRemove\":358,\"ContentToAdd\":\"{ Path = \\\\\\\"\\\\\\\", Folders = new Folder[0], Files = new FileObj[0] })) })));\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"UserID\\\\\\\", userID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"PasswordHash\\\\\\\", hash);\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_AddBranch\\\\\\\";\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"BranchName\\\\\\\", \\\\\\\"master\\\\\\\"));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"CommitID\\\\\\\", commitID));\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"UserID\\\\\\\", userID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"PasswordHash\\\\\\\", hash);\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n\\\\r\\\\n        }\\\\r\\\\n        [HttpPost(\\\\\\\"register\\\\\\\")]\\\\r\\\\n        public void RegisterUser([FromBody](Account, string) account)\\\\r\\\\n        \"},{\"Position\":14162,\"NumberToRemove\":59,\"ContentToAdd\":\"{\\\\r\\\\n            if (account.Item1 == null)\\\\r\\\\n            \"},{\"Position\":14221,\"NumberToRemove\":112,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            connection.Open();\\\\r\\\\n            string salt = \\\\\\\"\\\\\\\";\\\\r\\\\n            Random random = new Random();\\\\r\\\\n            for (int i = 0; i < 50; i++)\\\\r\\\\n            \"},{\"Position\":14486,\"NumberToRemove\":7,\"ContentToAdd\":\"{\\\\r\\\\n                salt = salt + (char)(random.Next(32, 126));\\\\r\\\\n            }\\\\r\\\\n            string password = salt + account.Item1.Password;\\\\r\\\\n            SHA256Managed sha256 = new SHA256Managed();\\\\r\\\\n            byte[] hash = sha256.ComputeHash(Encoding.UTF8.GetBytes(password));\\\\r\\\\n            SqlCommand cmd = SetUpUSP(\\\\\\\"usp_RegisterUser\\\\\\\", new string[] \"},{\"Position\":14850,\"NumberToRemove\":149,\"ContentToAdd\":\"{ \\\\\\\"Username\\\\\\\", \\\\\\\"PasswordHash\\\\\\\", \\\\\\\"Salt\\\\\\\", \\\\\\\"ResetAddress\\\\\\\" }, new object[] \"},{\"Position\":14927,\"NumberToRemove\":93,\"ContentToAdd\":\"{ account.Item1.Username, hash, salt, account.Item2 });\\\\r\\\\n            cmd.ExecuteNonQuery();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpPut(\\\\\\\"\"},{\"Position\":15060,\"NumberToRemove\":195,\"ContentToAdd\":\"{repo}/\"},{\"Position\":15067,\"NumberToRemove\":200,\"ContentToAdd\":\"{branch}\\\\\\\")]\\\\r\\\\n        public void PushBranch(string repo, string branch, [FromBody](Account, Dictionary<int, Commit>) commitDictionary)\\\\r\\\\n        \"},{\"Position\":15216,\"NumberToRemove\":625,\"ContentToAdd\":\"{\\\\r\\\\n            int repoID = GetRepoID(repo);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":15309,\"NumberToRemove\":357,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            Account accnt = commitDictionary.Item1;\\\\r\\\\n            if (accnt == null)\\\\r\\\\n            \"},{\"Position\":15505,\"NumberToRemove\":1547,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":15705,\"NumberToRemove\":163,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            byte[] hash = GetFullPasswordHash(userID, accnt.Password, false);\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_AddCommit\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            DataTable table = new DataTable();\\\\r\\\\n            SqlDataAdapter adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            Commit[] commits = commitDictionary.Item2.Values.ToArray();\\\\r\\\\n            for (int i = 0; i < commits.Length; i++)\\\\r\\\\n            \"},{\"Position\":16330,\"NumberToRemove\":207,\"ContentToAdd\":\"{\\\\r\\\\n                cmd.Parameters.Clear();\\\\r\\\\n                cmd.Parameters.Add(new SqlParameter(\\\\\\\"CommitID\\\\\\\", commitDictionary.Item2.Keys.ToArray()[i]));\\\\r\\\\n                cmd.CommandText = \\\\\\\"usp_GetCommitByID\\\\\\\";\\\\r\\\\n                table.Clear();\\\\r\\\\n                adapter.Fill(table);\\\\r\\\\n                if (table.Rows.Count <= 0)\\\\r\\\\n                \"},{\"Position\":16687,\"NumberToRemove\":7,\"ContentToAdd\":\"{\\\\r\\\\n                    cmd.CommandText = \\\\\\\"usp_AddCommit\\\\\\\";\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"Message\\\\\\\", commits[i].Message));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"ParentID\\\\\\\", commits[i].Parent));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"Author\\\\\\\", commits[i].Author));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"Committer\\\\\\\", commits[i].Committer));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"TextDiffs\\\\\\\", commits[i].Diffs));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"UserID\\\\\\\", userID));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"PasswordHash\\\\\\\", hash));\\\\r\\\\n                    RunVoidAuthenticatable(cmd);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_UpdateBranch\\\\\\\";\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"BranchName\\\\\\\", branch));\\\\r\\\\n            int[] keys = commitDictionary.Item2.Keys.ToArray();\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"CommitID\\\\\\\", keys[0]));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"UserID\\\\\\\", userID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"PasswordHash\\\\\\\", hash));\\\\r\\\\n            table.Clear();\\\\r\\\\n            adapter.Fill(table);\\\\r\\\\n            if (table.Rows.Count <= 0)\\\\r\\\\n            \"},{\"Position\":18234,\"NumberToRemove\":113,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n            }\\\\r\\\\n            else if ((int)table.Rows[0][table.Rows[0].ItemArray.Length - 1] == 1)\\\\r\\\\n            \"},{\"Position\":18399,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n                cmd.CommandText = \\\\\\\"usp_AddBranch\\\\\\\";\\\\r\\\\n                RunVoidAuthenticatable(cmd);\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        // DELETE api/pipe/repo/branch\\\\r\\\\n        [HttpDelete(\\\\\\\"\"},{\"Position\":18606,\"NumberToRemove\":265,\"ContentToAdd\":\"{repo}/\"},{\"Position\":18613,\"NumberToRemove\":200,\"ContentToAdd\":\"{branch}\\\\\\\")]\\\\r\\\\n        public void DeleteBranch(string repo, string branch, [FromBody]Account accnt)\\\\r\\\\n        \"},{\"Position\":18726,\"NumberToRemove\":669,\"ContentToAdd\":\"{\\\\r\\\\n            if (accnt == null)\\\\r\\\\n            \"},{\"Position\":18777,\"NumberToRemove\":52,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_DeleteBranch\\\\\\\", connection);\\\\r\\\\n            int repoID = GetRepoID(repo);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":19042,\"NumberToRemove\":486,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":19242,\"NumberToRemove\":291,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            byte[] hash = GetFullPasswordHash(userID, accnt.Password, false);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"BranchName\\\\\\\", branch));\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"UserID\\\\\\\", userID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"PasswordHash\\\\\\\", hash);\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        private int GetRepoID(string repo, bool openConnection = true)\\\\r\\\\n        \"},{\"Position\":19911,\"NumberToRemove\":94,\"ContentToAdd\":\"{\\\\r\\\\n            if (openConnection)\\\\r\\\\n            \"},{\"Position\":19963,\"NumberToRemove\":51,\"ContentToAdd\":\"{ connection.Open(); }\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_GetRepoID\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryName\\\\\\\", repo));\\\\r\\\\n            SqlDataAdapter adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            DataTable data = new DataTable();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n            if (data.Rows.Count <= 0)\\\\r\\\\n            \"},{\"Position\":20450,\"NumberToRemove\":183,\"ContentToAdd\":\"{\\\\r\\\\n                return -1;\\\\r\\\\n            }\\\\r\\\\n            int retVal = (int)data.Rows[0][0];\\\\r\\\\n            data.Clear();\\\\r\\\\n            return retVal;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        //VERY DANGEROUS!!!! USE AT YOUR OWN RISK!!!\\\\r\\\\n        // DELETE api/pipe/repo\\\\r\\\\n        [HttpDelete(\\\\\\\"\"},{\"Position\":20741,\"NumberToRemove\":200,\"ContentToAdd\":\"{repo}\\\\\\\")]\\\\r\\\\n        public void DeleteRepo(string repo, [FromBody]Account accnt)\\\\r\\\\n        \"},{\"Position\":20835,\"NumberToRemove\":596,\"ContentToAdd\":\"{\\\\r\\\\n            if (accnt == null)\\\\r\\\\n            \"},{\"Position\":20886,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int repoID = GetRepoID(repo);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":21069,\"NumberToRemove\":186,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":21269,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            byte[] hash = GetFullPasswordHash(userID, accnt.Password, false);\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_DeleteRepo\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"RepositoryID\\\\\\\", repoID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"UserID\\\\\\\", userID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"PasswordHash\\\\\\\", hash);\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpDelete(\\\\\\\"perms/\"},{\"Position\":21878,\"NumberToRemove\":33,\"ContentToAdd\":\"{repo}\\\\\\\")]\\\\r\\\\n        public void RemoveEdit(string repo, [FromBody](Account, Account) accounts)\\\\r\\\\n        \"},{\"Position\":21986,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n            int repoID = GetRepoID(repo);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":22079,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int userID = GetUserID(accounts.Item1.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":22288,\"NumberToRemove\":50,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int targetID = GetUserID(accounts.Item2.Username, false);\\\\r\\\\n            if (targetID < 0)\\\\r\\\\n            \"},{\"Position\":22501,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            SqlCommand cmd = SetUpUSP(\\\\\\\"usp_RevokeEdit\\\\\\\", new(string, object)[] \"},{\"Position\":22676,\"NumberToRemove\":129,\"ContentToAdd\":\"{ (\\\\\\\"UserID\\\\\\\", userID), (\\\\\\\"TargetID\\\\\\\", targetID), (\\\\\\\"RepositoryID\\\\\\\", repoID), (\\\\\\\"PasswordHash\\\\\\\", GetFullPasswordHash(userID, accounts.Item1.Password, false)) });\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpPost(\\\\\\\"perms/\"},{\"Position\":22928,\"NumberToRemove\":203,\"ContentToAdd\":\"{repo}\\\\\\\")]\\\\r\\\\n        public void AllowEdit(string repo, [FromBody](Account, Account) accounts)\\\\r\\\\n        \"},{\"Position\":23035,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n            int repoID = GetRepoID(repo);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":23128,\"NumberToRemove\":62,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int userID = GetUserID(accounts.Item1.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":23337,\"NumberToRemove\":24,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int targetID = GetUserID(accounts.Item2.Username, false);\\\\r\\\\n            if (targetID < 0)\\\\r\\\\n            \"},{\"Position\":23550,\"NumberToRemove\":108,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            SqlCommand cmd = SetUpUSP(\\\\\\\"usp_AllowEdit\\\\\\\", new(string, object)[] \"},{\"Position\":23724,\"NumberToRemove\":120,\"ContentToAdd\":\"{ (\\\\\\\"UserID\\\\\\\", userID), (\\\\\\\"TargetID\\\\\\\", targetID), (\\\\\\\"RepositoryID\\\\\\\", repoID), (\\\\\\\"PasswordHash\\\\\\\", GetFullPasswordHash(userID, accounts.Item1.Password, false)) });\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpPost(\\\\\\\"changePass\\\\\\\")]\\\\r\\\\n        public void ChangePassword([FromBody](Account, string) account)\\\\r\\\\n        \"},{\"Position\":24071,\"NumberToRemove\":26,\"ContentToAdd\":\"{\\\\r\\\\n            if (account.Item1 == null)\\\\r\\\\n            \"},{\"Position\":24130,\"NumberToRemove\":153,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int userID = GetUserID(account.Item1.Username, true);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":24337,\"NumberToRemove\":95,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            string salt = \\\\\\\"\\\\\\\";\\\\r\\\\n            Random random = new Random();\\\\r\\\\n            for (int i = 0; i < 50; i++)\\\\r\\\\n            \"},{\"Position\":24568,\"NumberToRemove\":150,\"ContentToAdd\":\"{\\\\r\\\\n                salt = salt + (char)(random.Next(32, 126));\\\\r\\\\n            }\\\\r\\\\n            string password = salt + account.Item2;\\\\r\\\\n            SHA256Managed sha256 = new SHA256Managed();\\\\r\\\\n            byte[] hash = sha256.ComputeHash(Encoding.UTF8.GetBytes(password));\\\\r\\\\n            RunVoidAuthenticatable(SetUpUSP(\\\\\\\"usp_ChangePassword\\\\\\\", (\\\\\\\"UserID\\\\\\\", userID), (\\\\\\\"PasswordHash\\\\\\\", GetFullPasswordHash(userID, account.Item1.Password, false)), (\\\\\\\"NewPasswordHash\\\\\\\", hash), (\\\\\\\"NewSalt\\\\\\\", salt)));\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpPost(\\\\\\\"passwordReset/\"},{\"Position\":25126,\"NumberToRemove\":151,\"ContentToAdd\":\"{username}\\\\\\\")]\\\\r\\\\n        public void ResetPassword(string username)\\\\r\\\\n        \"},{\"Position\":25206,\"NumberToRemove\":61,\"ContentToAdd\":\"{\\\\r\\\\n            int userID = GetUserID(username, true);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":25309,\"NumberToRemove\":59,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            var resetAddress = SqlReturnObj(SetUpUSP(\\\\\\\"usp_GetResetAddress\\\\\\\", (\\\\\\\"UserID\\\\\\\", userID)));\\\\r\\\\n            if(resetAddress == null)\\\\r\\\\n            \"},{\"Position\":25561,\"NumberToRemove\":20,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            var saltP = SqlReturnObj(SetUpUSP(\\\\\\\"usp_GetSaltUserID\\\\\\\", (\\\\\\\"UserID\\\\\\\", userID)));\\\\r\\\\n            if (saltP == null)\\\\r\\\\n            \"},{\"Position\":25798,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n            // new SmtpClient()\\\\r\\\\n            // new NetworkCredentials\\\\r\\\\n            // new MailMessage().To.Add()\\\\r\\\\n            SmtpClient client = new SmtpClient()\\\\r\\\\n            \"},{\"Position\":26086,\"NumberToRemove\":140,\"ContentToAdd\":\"{\\\\r\\\\n                Port = 587,\\\\r\\\\n                EnableSsl = true,\\\\r\\\\n                DeliveryMethod = SmtpDeliveryMethod.Network,\\\\r\\\\n                UseDefaultCredentials = false,\\\\r\\\\n                Host = \\\\\\\"smtp.gmail.com\\\\\\\",\\\\r\\\\n                Credentials = emailCredentials\\\\r\\\\n            };\\\\r\\\\n            Random random = new Random();\\\\r\\\\n            StringBuilder sb = new StringBuilder(siteAddress);\\\\r\\\\n            sb.Append(\\\\\\\"/api/pipe/passwordResetFinal?userID=\\\\\\\");\\\\r\\\\n            sb.Append(userID);\\\\r\\\\n            sb.Append(\\\\\\\"&code=\\\\\\\");\\\\r\\\\n            string salt = (string)saltP;\\\\r\\\\n            for(int i = 0; i < salt.Length; i++)\\\\r\\\\n            \"},{\"Position\":26746,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n                sb.Append($\\\\\\\"%\"},{\"Position\":26781,\"NumberToRemove\":30,\"ContentToAdd\":\"{((int)salt[i]):X}\\\\\\\");\\\\r\\\\n            }\\\\r\\\\n            try\\\\r\\\\n            \"},{\"Position\":26855,\"NumberToRemove\":114,\"ContentToAdd\":\"{\\\\r\\\\n                MailMessage message = new MailMessage(emailCredentials.UserName, (string)resetAddress)\\\\r\\\\n                \"},{\"Position\":26982,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\\r\\\\n                    Subject = passwordResetSubject,\\\\r\\\\n                    Body = passwordResetBody.Replace(\\\\\\\"%LINK\\\\\\\", sb.ToString())\\\\r\\\\n                };\\\\r\\\\n                client.Send(message);\\\\r\\\\n            }\\\\r\\\\n            catch(Exception)\\\\r\\\\n            \"},{\"Position\":27248,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpGet(\\\\\\\"passwordResetFinal\\\\\\\")]\\\\r\\\\n        public string FinishPasswordReset(int userID, string code)\\\\r\\\\n        \"},{\"Position\":27483,\"NumberToRemove\":79,\"ContentToAdd\":\"{\\\\r\\\\n            Random random = new Random();\\\\r\\\\n            string newPassword = \\\\\\\"\\\\\\\";\\\\r\\\\n            for (int i = 0; i < 15; i++)\\\\r\\\\n            \"},{\"Position\":27631,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n                newPassword += (char)random.Next(32, 126);\\\\r\\\\n            }\\\\r\\\\n            string salt = \\\\\\\"\\\\\\\";\\\\r\\\\n            for (int i = 0; i < 50; i++)\\\\r\\\\n            \"},{\"Position\":27806,\"NumberToRemove\":76,\"ContentToAdd\":\"{\\\\r\\\\n                salt = salt + (char)(random.Next(32, 126));\\\\r\\\\n            }\\\\r\\\\n            string password = salt + newPassword;\\\\r\\\\n            SHA256Managed sha256 = new SHA256Managed();\\\\r\\\\n            byte[] hash = sha256.ComputeHash(Encoding.UTF8.GetBytes(password));\\\\r\\\\n            var saltToCheck = SqlReturnObj(SetUpUSP(\\\\\\\"usp_GetSaltUserID\\\\\\\", (\\\\\\\"UserID\\\\\\\", userID)));\\\\r\\\\n            if(saltToCheck == null)\\\\r\\\\n            \"},{\"Position\":28239,\"NumberToRemove\":723,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return \\\\\\\"Authentication Error: Incorrect userID\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n            var passwordHash = SqlReturnObj(SetUpUSP(\\\\\\\"usp_GetPasswordHash\\\\\\\", (\\\\\\\"UserID\\\\\\\", userID)));\\\\r\\\\n            if (passwordHash == null)\\\\r\\\\n            \"},{\"Position\":28535,\"NumberToRemove\":346,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return \\\\\\\"Authentication Error: Incorrect userID\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n            if((string)saltToCheck != code)\\\\r\\\\n            \"},{\"Position\":28732,\"NumberToRemove\":37,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return \\\\\\\"Authentication Error: Incorrect code or userID\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n            RunVoidAuthenticatable(SetUpUSP(\\\\\\\"usp_ChangePassword\\\\\\\", (\\\\\\\"UserID\\\\\\\", userID), (\\\\\\\"PasswordHash\\\\\\\", (byte[])passwordHash), (\\\\\\\"NewPasswordHash\\\\\\\", hash), (\\\\\\\"NewSalt\\\\\\\", salt)));\\\\r\\\\n            return $\\\\\\\"Please change your password. Your password has been reset to \"},{\"Position\":29148,\"NumberToRemove\":63,\"ContentToAdd\":\"{newPassword}\\\\\\\";\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]},\"},{\"Position\":29200,\"NumberToRemove\":266,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Models\\\",\\\"Folders\\\":[],\\\"Files\\\":[\"},{\"Position\":29247,\"NumberToRemove\":424,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Models\\\\\\\\Commit.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\n\\\\r\\\\nnamespace Pipe.Models\\\\r\\\\n\"},{\"Position\":29433,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n    public class Commit\\\\r\\\\n    \"},{\"Position\":29469,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n        public string Diffs \"},{\"Position\":29502,\"NumberToRemove\":116,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public int Parent \"},{\"Position\":29549,\"NumberToRemove\":65,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Message \"},{\"Position\":29600,\"NumberToRemove\":92,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Author \"},{\"Position\":29650,\"NumberToRemove\":67,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Committer \"},{\"Position\":29703,\"NumberToRemove\":70,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public Commit(string diffs, string message, string author, string committer, int parent)\\\\r\\\\n        \"},{\"Position\":29832,\"NumberToRemove\":103,\"ContentToAdd\":\"{\\\\r\\\\n            Diffs = diffs;\\\\r\\\\n            Message = message;\\\\r\\\\n            Author = author;\\\\r\\\\n            Committer = committer;\\\\r\\\\n            Parent = parent;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]},\"},{\"Position\":30035,\"NumberToRemove\":63,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Properties\\\",\\\"Folders\\\":[],\\\"Files\\\":[\"},{\"Position\":30086,\"NumberToRemove\":92,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Properties\\\\\\\\launchSettings.json\\\",\\\"Contents\\\":\\\"\"},{\"Position\":30148,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n  \\\\\\\"iisSettings\\\\\\\": \"},{\"Position\":30172,\"NumberToRemove\":69,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"windowsAuthentication\\\\\\\": false,\\\\r\\\\n    \\\\\\\"anonymousAuthentication\\\\\\\": true,\\\\r\\\\n    \\\\\\\"iisExpress\\\\\\\": \"},{\"Position\":30280,\"NumberToRemove\":83,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"applicationUrl\\\\\\\": \\\\\\\"http://localhost:56854/\\\\\\\",\\\\r\\\\n      \\\\\\\"sslPort\\\\\\\": 0\\\\r\\\\n    }\\\\r\\\\n  },\\\\r\\\\n  \\\\\\\"profiles\\\\\\\": \"},{\"Position\":30400,\"NumberToRemove\":69,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"IIS Express\\\\\\\": \"},{\"Position\":30426,\"NumberToRemove\":112,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"commandName\\\\\\\": \\\\\\\"IISExpress\\\\\\\",\\\\r\\\\n      \\\\\\\"launchBrowser\\\\\\\": true,\\\\r\\\\n      \\\\\\\"launchUrl\\\\\\\": \\\\\\\"api/values\\\\\\\",\\\\r\\\\n      \\\\\\\"environmentVariables\\\\\\\": \"},{\"Position\":30579,\"NumberToRemove\":198,\"ContentToAdd\":\"{\\\\r\\\\n        \\\\\\\"ASPNETCORE_ENVIRONMENT\\\\\\\": \\\\\\\"Development\\\\\\\"\\\\r\\\\n      }\\\\r\\\\n    },\\\\r\\\\n    \\\\\\\"Pipe\\\\\\\": \"},{\"Position\":30674,\"NumberToRemove\":525,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"commandName\\\\\\\": \\\\\\\"Project\\\\\\\",\\\\r\\\\n      \\\\\\\"launchBrowser\\\\\\\": true,\\\\r\\\\n      \\\\\\\"launchUrl\\\\\\\": \\\\\\\"api/values\\\\\\\",\\\\r\\\\n      \\\\\\\"environmentVariables\\\\\\\": \"},{\"Position\":30824,\"NumberToRemove\":57,\"ContentToAdd\":\"{\\\\r\\\\n        \\\\\\\"ASPNETCORE_ENVIRONMENT\\\\\\\": \\\\\\\"Development\\\\\\\"\\\\r\\\\n      },\\\\r\\\\n      \\\\\\\"applicationUrl\\\\\\\": \\\\\\\"http://localhost:56855/\\\\\\\"\\\\r\\\\n    }\\\\r\\\\n  }\\\\r\\\\n}\\\"}]},\"},{\"Position\":30975,\"NumberToRemove\":149,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\wwwroot\\\",\\\"Folders\\\":[],\\\"Files\\\":[]}],\\\"Files\\\":[\"},{\"Position\":31036,\"NumberToRemove\":64,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\appsettings.Development.json\\\",\\\"Contents\\\":\\\"\"},{\"Position\":31095,\"NumberToRemove\":218,\"ContentToAdd\":\"{\\\\r\\\\n  \\\\\\\"Logging\\\\\\\": \"},{\"Position\":31115,\"NumberToRemove\":79,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"IncludeScopes\\\\\\\": false,\\\\r\\\\n    \\\\\\\"LogLevel\\\\\\\": \"},{\"Position\":31171,\"NumberToRemove\":302,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"Default\\\\\\\": \\\\\\\"Debug\\\\\\\",\\\\r\\\\n      \\\\\\\"System\\\\\\\": \\\\\\\"Information\\\\\\\",\\\\r\\\\n      \\\\\\\"Microsoft\\\\\\\": \\\\\\\"Information\\\\\\\"\\\\r\\\\n    }\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":31311,\"NumberToRemove\":86,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\appsettings.json\\\",\\\"Contents\\\":\\\"\"},{\"Position\":31358,\"NumberToRemove\":84,\"ContentToAdd\":\"{\\\\r\\\\n  \\\\\\\"ConnectionStrings\\\\\\\": \"},{\"Position\":31388,\"NumberToRemove\":90,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"Dev\\\\\\\": \\\\\\\"server=GMRMLTV; database=PVC; user=sa; password=GreatMinds110\\\\\\\"\\\\r\\\\n  },\\\\r\\\\n\\\\r\\\\n  \\\\\\\"Logging\\\\\\\": \"},{\"Position\":31502,\"NumberToRemove\":288,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"IncludeScopes\\\\\\\": false,\\\\r\\\\n    \\\\\\\"Debug\\\\\\\": \"},{\"Position\":31555,\"NumberToRemove\":81,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"LogLevel\\\\\\\": \"},{\"Position\":31580,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n        \\\\\\\"Default\\\\\\\": \\\\\\\"Warning\\\\\\\"\\\\r\\\\n      }\\\\r\\\\n    },\\\\r\\\\n    \\\\\\\"Console\\\\\\\": \"},{\"Position\":31659,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"LogLevel\\\\\\\": \"},{\"Position\":31684,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n        \\\\\\\"Default\\\\\\\": \\\\\\\"Warning\\\\\\\"\\\\r\\\\n      }\\\\r\\\\n    }\\\\r\\\\n  },\\\\r\\\\n  \\\\\\\"Email\\\\\\\": \"},{\"Position\":31766,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"Username\\\\\\\": \\\\\\\"pvcpipe116@gmail.com\\\\\\\",\\\\r\\\\n    \\\\\\\"Password\\\\\\\": \\\\\\\"PVCP1pe!\\\\\\\",\\\\r\\\\n    \\\\\\\"Subject\\\\\\\": \\\\\\\"PVC-Pipe Password Reset\\\\\\\",\\\\r\\\\n    \\\\\\\"Body\\\\\\\": \\\\\\\"Please change your password. Your password reset link is %LINK\\\\\\\"\\\\r\\\\n  },\\\\r\\\\n  \\\\\\\"SiteData\\\\\\\": \"},{\"Position\":32010,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"Address\\\\\\\": \\\\\\\"http://localhost:56854\\\\\\\"\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":32077,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Pipe.csproj\\\",\\\"Contents\\\":\\\"<Project Sdk=\\\\\\\"Microsoft.NET.Sdk.Web\\\\\\\">\\\\r\\\\n\\\\r\\\\n  <PropertyGroup>\\\\r\\\\n    <TargetFramework>netcoreapp2.0</TargetFramework>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\\\\\\\">\\\\r\\\\n    <DefineConstants>TRACE;DEBUG</DefineConstants>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Folder Include=\\\\\\\"wwwroot\\\\\\\\\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <PackageReference Include=\\\\\\\"Microsoft.AspNetCore.All\\\\\\\" Version=\\\\\\\"2.0.6\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <DotNetCliToolReference Include=\\\\\\\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\\\\\\\" Version=\\\\\\\"2.0.3\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n\\\\r\\\\n</Project>\\\\r\\\\n\\\"},\"},{\"Position\":32800,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Program.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.IO;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing Microsoft.AspNetCore;\\\\r\\\\nusing Microsoft.AspNetCore.Hosting;\\\\r\\\\nusing Microsoft.Extensions.Configuration;\\\\r\\\\nusing Microsoft.Extensions.Logging;\\\\r\\\\n\\\\r\\\\nnamespace Pipe\\\\r\\\\n\"},{\"Position\":33146,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    public class Program\\\\r\\\\n    \"},{\"Position\":33183,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n        public static void Main(string[] args)\\\\r\\\\n        \"},{\"Position\":33246,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            BuildWebHost(args).Run();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public static IWebHost BuildWebHost(string[] args) =>\\\\r\\\\n            WebHost.CreateDefaultBuilder(args)\\\\r\\\\n                .UseStartup<Startup>()\\\\r\\\\n                .Build();\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":33512,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Startup.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing Microsoft.AspNetCore.Builder;\\\\r\\\\nusing Microsoft.AspNetCore.Hosting;\\\\r\\\\nusing Microsoft.Extensions.Configuration;\\\\r\\\\nusing Microsoft.Extensions.DependencyInjection;\\\\r\\\\nusing Microsoft.Extensions.Logging;\\\\r\\\\nusing Microsoft.Extensions.Options;\\\\r\\\\n\\\\r\\\\nnamespace Pipe\\\\r\\\\n\"},{\"Position\":33936,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    //public interface INotifier\\\\r\\\\n    //\"},{\"Position\":33983,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    //    string Address \"},{\"Position\":34013,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n    //    void SendMail();\\\\r\\\\n    //}\\\\r\\\\n\\\\r\\\\n    //public class EmailNotifier : INotifier\\\\r\\\\n    //\"},{\"Position\":34129,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    //    public EmailNotifier(string address)\\\\r\\\\n    //    \"},{\"Position\":34194,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    //        Address = address;\\\\r\\\\n    //    }\\\\r\\\\n\\\\r\\\\n    //    public string Address \"},{\"Position\":34286,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n    //    public void SendMail()\\\\r\\\\n    //    \"},{\"Position\":34353,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    //        System.Diagnostics.Debug.WriteLine($\\\\\\\"Mail sent to \"},{\"Position\":34423,\"NumberToRemove\":0,\"ContentToAdd\":\"{Address}\\\\\\\");\\\\r\\\\n    //    }\\\\r\\\\n    //}\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n    //public class SMSNotifier : INotifier\\\\r\\\\n    //\"},{\"Position\":34526,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    //    public SMSNotifier(string address)\\\\r\\\\n    //    \"},{\"Position\":34589,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    //        Address = address;\\\\r\\\\n    //    }\\\\r\\\\n\\\\r\\\\n    //    public string Address \"},{\"Position\":34681,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n    //    public void SendMail()\\\\r\\\\n    //    \"},{\"Position\":34748,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n    //        System.Diagnostics.Debug.WriteLine($\\\\\\\"SMS sent to \"},{\"Position\":34817,\"NumberToRemove\":0,\"ContentToAdd\":\"{Address}\\\\\\\");\\\\r\\\\n    //    }\\\\r\\\\n    //}\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n    public class Startup\\\\r\\\\n    \"},{\"Position\":34900,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n        public Startup(IConfiguration configuration)\\\\r\\\\n        \"},{\"Position\":34969,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            Configuration = configuration;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public IConfiguration Configuration \"},{\"Position\":35081,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; }\\\\r\\\\n\\\\r\\\\n        // This method gets called by the runtime. Use this method to add services to the container.\\\\r\\\\n        public void ConfigureServices(IServiceCollection services)\\\\r\\\\n        \"},{\"Position\":35279,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            services.AddMvc();\\\\r\\\\n\\\\r\\\\n//#if USESMS\\\\r\\\\n//            services.AddTransient<INotifier, SMSNotifier>((i) => new SMSNotifier(\\\\\\\"123-555-1212\\\\\\\"));\\\\r\\\\n//#else\\\\r\\\\n//            services.AddTransient<INotifier, EmailNotifier>(((i) => new EmailNotifier(\\\\\\\"peterAdmin@pipe.com\\\\\\\")));\\\\r\\\\n//#endif\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\\\\r\\\\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\\\\r\\\\n        \"},{\"Position\":35804,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            if (env.IsDevelopment())\\\\r\\\\n            \"},{\"Position\":35861,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                app.UseDeveloperExceptionPage();\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            app.UseMvc();\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":36010,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\.pvcignore\\\",\\\"Contents\\\":\\\"R: bin|obj|vs|packages\\\\r\\\\n\\\"},\"},{\"Position\":36074,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\PasswordResetWorks!!!.txt\\\",\\\"Contents\\\":\\\"\\\"},\"},{\"Position\":36127,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe.sln\\\",\\\"Contents\\\":\\\"\\\\r\\\\nMicrosoft Visual Studio Solution File, Format Version 12.00\\\\r\\\\n# Visual Studio 15\\\\r\\\\nVisualStudioVersion = 15.0.27428.2027\\\\r\\\\nMinimumVisualStudioVersion = 10.0.40219.1\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":36345,\"NumberToRemove\":0,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"Pipe\\\\\\\", \\\\\\\"Pipe\\\\\\\\Pipe.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":36424,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nGlobal\\\\r\\\\n\\\\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\\\\r\\\\n\\\\t\\\\tDebug|Any CPU = Debug|Any CPU\\\\r\\\\n\\\\t\\\\tRelease|Any CPU = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":36726,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":36812,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":36896,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":36986,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(SolutionProperties) = preSolution\\\\r\\\\n\\\\t\\\\tHideSolutionNode = FALSE\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ExtensibilityGlobals) = postSolution\\\\r\\\\n\\\\t\\\\tSolutionGuid = \"},{\"Position\":37274,\"NumberToRemove\":0,\"ContentToAdd\":\"{A7FB2405-9F73-4374-A8D3-03010D1B7FD6}\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\nEndGlobal\\\\r\\\\n\\\"}]}\"}]","Parent":1997743554,"Message":"9/22/2018 4:34:18 PM: Did a little bit of crash-proofing involving invalid email addresses.","Author":"penguinee232","Committer":"penguinee232"}