{"Diffs":"[{\"Position\":4311,\"NumberToRemove\":737,\"ContentToAdd\":\"{ };\\\\r\\\\n            }\\\\r\\\\n            connection.Open();\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_GetRepoID\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryName\\\\\\\", repo));\\\\r\\\\n            SqlDataAdapter adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            DataTable data = new DataTable();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            if(data.Rows.Count <= 0)\\\\r\\\\n            \"},{\"Position\":4791,\"NumberToRemove\":217,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return \\\\\\\"\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_GetBranchesOfRepo\\\\\\\";\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", (int)data.Rows[0][0]));\\\\r\\\\n            data.Clear();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            if (data.Rows.Count == 0)\\\\r\\\\n            \"},{\"Position\":5200,\"NumberToRemove\":315,\"ContentToAdd\":\"{\\\\r\\\\n                return \\\\\\\"\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n            Dictionary<string, int> output = new Dictionary<string, int>(data.Rows.Count);\\\\r\\\\n            for (int i = 0; i < data.Rows.Count; i++)\\\\r\\\\n            \"},{\"Position\":5417,\"NumberToRemove\":92,\"ContentToAdd\":\"{\\\\r\\\\n                output.Add(data.Rows[i][\\\\\\\"BranchName\\\\\\\"].ToString(), (int)data.Rows[i][\\\\\\\"CommitID\\\\\\\"]);\\\\r\\\\n            }\\\\r\\\\n            return JsonConvert.SerializeObject(output);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        //Returns history of a branch\\\\r\\\\n        // GET api/pipe/[repo]?branch=master&...\\\\r\\\\n        [HttpGet(\\\\\\\"\"},{\"Position\":5732,\"NumberToRemove\":50,\"ContentToAdd\":\"{repo}\\\\\\\")]\\\\r\\\\n        public string Get(string repo, string branch = \\\\\\\"master\\\\\\\")\\\\r\\\\n        \"},{\"Position\":5824,\"NumberToRemove\":48,\"ContentToAdd\":\"{\\\\r\\\\n            if (repo == null)\\\\r\\\\n            \"},{\"Position\":5874,\"NumberToRemove\":814,\"ContentToAdd\":\"{\\\\r\\\\n                return \\\\\\\"\\\\\\\";//new string[] \"},{\"Position\":5922,\"NumberToRemove\":333,\"ContentToAdd\":\"{ };\\\\r\\\\n            }\\\\r\\\\n            connection.Open();\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_GetRepoID\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryName\\\\\\\", repo));\\\\r\\\\n            SqlDataAdapter adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            DataTable data = new DataTable();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_GetBranchCommitID\\\\\\\";\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n            if(data.Rows.Count <= 0)\\\\r\\\\n            \"},{\"Position\":6501,\"NumberToRemove\":48,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return \\\\\\\"\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", (int)data.Rows[0][0]));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"BranchName\\\\\\\", branch));\\\\r\\\\n            data.Clear();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            if (data.Rows.Count == 0)\\\\r\\\\n            \"},{\"Position\":6888,\"NumberToRemove\":125,\"ContentToAdd\":\"{\\\\r\\\\n                return \\\\\\\"\\\\\\\";\\\\r\\\\n            }\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_GetRepoHistoryFromRecentCommit\\\\\\\";\\\\r\\\\n            cmd.Parameters[1] = new SqlParameter(\\\\\\\"CommitID\\\\\\\", (int)data.Rows[0][1]);\\\\r\\\\n            data.Clear();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            if (data.Rows.Count == 0)\\\\r\\\\n            \"},{\"Position\":7221,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n                return \\\\\\\"\\\\\\\";//new string[] \"},{\"Position\":7269,\"NumberToRemove\":145,\"ContentToAdd\":\"{ };\\\\r\\\\n            }\\\\r\\\\n            return JsonConvert.SerializeObject(commitHistoryFromDataBaseEntry(data));//new string[] \"},{\"Position\":7394,\"NumberToRemove\":155,\"ContentToAdd\":\"{ data.Rows[0][\\\\\\\"Message\\\\\\\"].ToString() };//new string[] \"},{\"Position\":7450,\"NumberToRemove\":446,\"ContentToAdd\":\"{ \\\\\\\"value1\\\\\\\", \\\\\\\"value2\\\\\\\", repo };\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        Dictionary<int, Commit> commitHistoryFromDataBaseEntry(DataTable table)\\\\r\\\\n        \"},{\"Position\":7595,\"NumberToRemove\":48,\"ContentToAdd\":\"{\\\\r\\\\n            Dictionary<int, Commit> commits = new Dictionary<int, Commit>();\\\\r\\\\n            for (int i = 0; i < table.Rows.Count; i++)\\\\r\\\\n            \"},{\"Position\":7750,\"NumberToRemove\":7,\"ContentToAdd\":\"{\\\\r\\\\n                commits.Add((int)table.Rows[i][\\\\\\\"CommitID\\\\\\\"], new Commit((string)table.Rows[i][\\\\\\\"TextDiffs\\\\\\\"], (string)table.Rows[i][\\\\\\\"Message\\\\\\\"], (string)table.Rows[i][\\\\\\\"Author\\\\\\\"], (string)table.Rows[i][\\\\\\\"Committer\\\\\\\"], (int)table.Rows[i][\\\\\\\"ParentID\\\\\\\"]));\\\\r\\\\n            }\\\\r\\\\n            return commits;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        //[HttpPost]\\\\r\\\\n        //public void Post([FromBody]Commit[] commits, [FromBody]string branch)\\\\r\\\\n        //\"},{\"Position\":8196,\"NumberToRemove\":127,\"ContentToAdd\":\"{\\\\r\\\\n\\\\r\\\\n        //}\\\\r\\\\n\\\\r\\\\n        [HttpPost(\\\\\\\"\"},{\"Position\":8244,\"NumberToRemove\":233,\"ContentToAdd\":\"{repo}/\"},{\"Position\":8251,\"NumberToRemove\":735,\"ContentToAdd\":\"{branch}\\\\\\\")]\\\\r\\\\n        public void CreateBranch(string repo, string branch, int commitID, [FromBody]Account accnt)\\\\r\\\\n        \"},{\"Position\":8378,\"NumberToRemove\":210,\"ContentToAdd\":\"{\\\\r\\\\n            if (accnt == null)\\\\r\\\\n            \"},{\"Position\":8429,\"NumberToRemove\":105,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int repoID = GetRepoID(repo);\\\\r\\\\n            if(repoID < 0)\\\\r\\\\n            \"},{\"Position\":8611,\"NumberToRemove\":94,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_AddBranch\\\\\\\", connection);\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if(userID < 0)\\\\r\\\\n            \"},{\"Position\":8889,\"NumberToRemove\":491,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            byte[] hash = GetFullPasswordHash(userID, accnt.Password, false);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"BranchName\\\\\\\", branch));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"CommitID\\\\\\\", commitID));\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"UserID\\\\\\\", userID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"PasswordHash\\\\\\\", hash);\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        private void RunVoidAuthenticatable(SqlCommand cmd)\\\\r\\\\n        \"},{\"Position\":9624,\"NumberToRemove\":904,\"ContentToAdd\":\"{\\\\r\\\\n            SqlDataAdapter adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            DataTable table = new DataTable();\\\\r\\\\n            adapter.Fill(table);\\\\r\\\\n            if (table.Rows.Count <= 0)\\\\r\\\\n            \"},{\"Position\":9834,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpPost(\\\\\\\"\"},{\"Position\":9939,\"NumberToRemove\":880,\"ContentToAdd\":\"{repo}\\\\\\\")]\\\\r\\\\n        public void CreateRepo(string repo, [FromBody]Account accnt)\\\\r\\\\n        \"},{\"Position\":10033,\"NumberToRemove\":175,\"ContentToAdd\":\"{\\\\r\\\\n            if (accnt == null)\\\\r\\\\n            \"},{\"Position\":10084,\"NumberToRemove\":358,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            connection.Open();\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_AddRepoWOID\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"Name\\\\\\\", repo));\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_AddCommit\\\\\\\";\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":10665,\"NumberToRemove\":59,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            byte[] hash = GetFullPasswordHash(userID, accnt.Password, false);\\\\r\\\\n            int repoID = GetRepoID(repo, false);\\\\r\\\\n            if(repoID < 0)\\\\r\\\\n            \"},{\"Position\":10935,\"NumberToRemove\":112,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int commitID = new Random().Next(1, int.MaxValue);\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"CommitID\\\\\\\", commitID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"Message\\\\\\\", \\\\\\\"Initial commit for repository \\\\\\\" + repo));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"ParentID\\\\\\\", 0));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"Author\\\\\\\", \\\\\\\"Auto-generated\\\\\\\"));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"Committer\\\\\\\", \\\\\\\"Auto-generated\\\\\\\"));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"TextDiffs\\\\\\\", JsonConvert.SerializeObject(new Diff[] \"},{\"Position\":11706,\"NumberToRemove\":7,\"ContentToAdd\":\"{ new Diff(0, 0, JsonConvert.SerializeObject(new Folder \"},{\"Position\":11762,\"NumberToRemove\":149,\"ContentToAdd\":\"{ Path = \\\\\\\"\\\\\\\", Folders = new Folder[0], Files = new FileObj[0] })) })));\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"UserID\\\\\\\", userID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"PasswordHash\\\\\\\", hash);\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_AddBranch\\\\\\\";\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"BranchName\\\\\\\", \\\\\\\"master\\\\\\\"));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"CommitID\\\\\\\", commitID));\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"UserID\\\\\\\", userID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"PasswordHash\\\\\\\", hash);\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n\\\\r\\\\n        }\\\\r\\\\n        [HttpPost(\\\\\\\"register\\\\\\\")]\\\\r\\\\n        public void RegisterUser([FromBody]Account account)\\\\r\\\\n        \"},{\"Position\":12642,\"NumberToRemove\":210,\"ContentToAdd\":\"{\\\\r\\\\n            if (account == null)\\\\r\\\\n            \"},{\"Position\":12695,\"NumberToRemove\":625,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            connection.Open();\\\\r\\\\n            string salt = \\\\\\\"\\\\\\\";\\\\r\\\\n            Random random = new Random();\\\\r\\\\n            for (int i = 0; i < 50; i++)\\\\r\\\\n            \"},{\"Position\":12960,\"NumberToRemove\":357,\"ContentToAdd\":\"{\\\\r\\\\n                salt = salt + (char)(random.Next(32, 126));\\\\r\\\\n            }\\\\r\\\\n            string password = salt + account.Password;\\\\r\\\\n            SHA256Managed sha256 = new SHA256Managed();\\\\r\\\\n            byte[] hash = sha256.ComputeHash(Encoding.UTF8.GetBytes(password));\\\\r\\\\n            SqlCommand cmd = SetUpUSP(\\\\\\\"usp_RegisterUser\\\\\\\", new string[] \"},{\"Position\":13318,\"NumberToRemove\":1547,\"ContentToAdd\":\"{ \\\\\\\"Username\\\\\\\", \\\\\\\"PasswordHash\\\\\\\", \\\\\\\"Salt\\\\\\\" }, new object[] \"},{\"Position\":13377,\"NumberToRemove\":163,\"ContentToAdd\":\"{ account.Username, hash, salt });\\\\r\\\\n            cmd.ExecuteNonQuery();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        [HttpPut(\\\\\\\"\"},{\"Position\":13489,\"NumberToRemove\":207,\"ContentToAdd\":\"{repo}/\"},{\"Position\":13496,\"NumberToRemove\":7,\"ContentToAdd\":\"{branch}\\\\\\\")]\\\\r\\\\n        public void PushBranch(string repo, string branch, [FromBody](Account, Dictionary<int, Commit>) commitDictionary)\\\\r\\\\n        \"},{\"Position\":13645,\"NumberToRemove\":113,\"ContentToAdd\":\"{\\\\r\\\\n            int repoID = GetRepoID(repo);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":13738,\"NumberToRemove\":237,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            Account accnt = commitDictionary.Item1;\\\\r\\\\n            if(accnt == null)\\\\r\\\\n            \"},{\"Position\":13933,\"NumberToRemove\":669,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":14133,\"NumberToRemove\":52,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            byte[] hash = GetFullPasswordHash(userID, accnt.Password, false);\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_AddCommit\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            DataTable table = new DataTable();\\\\r\\\\n            SqlDataAdapter adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            Commit[] commits = commitDictionary.Item2.Values.ToArray();\\\\r\\\\n            for (int i = 0; i < commits.Length; i++)\\\\r\\\\n            \"},{\"Position\":14758,\"NumberToRemove\":673,\"ContentToAdd\":\"{\\\\r\\\\n                cmd.Parameters.Clear();\\\\r\\\\n                cmd.Parameters.Add(new SqlParameter(\\\\\\\"CommitID\\\\\\\", commitDictionary.Item2.Keys.ToArray()[i]));\\\\r\\\\n                cmd.CommandText = \\\\\\\"usp_GetCommitByID\\\\\\\";\\\\r\\\\n                table.Clear();\\\\r\\\\n                adapter.Fill(table);\\\\r\\\\n                if (table.Rows.Count <= 0)\\\\r\\\\n                \"},{\"Position\":15115,\"NumberToRemove\":94,\"ContentToAdd\":\"{\\\\r\\\\n                    cmd.CommandText = \\\\\\\"usp_AddCommit\\\\\\\";\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"Message\\\\\\\", commits[i].Message));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"ParentID\\\\\\\", commits[i].Parent));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"Author\\\\\\\", commits[i].Author));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"Committer\\\\\\\", commits[i].Committer));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"TextDiffs\\\\\\\", commits[i].Diffs));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"UserID\\\\\\\", userID));\\\\r\\\\n                    cmd.Parameters.Add(new SqlParameter(\\\\\\\"PasswordHash\\\\\\\", hash));\\\\r\\\\n                    RunVoidAuthenticatable(cmd);\\\\r\\\\n                }\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            cmd.CommandText = \\\\\\\"usp_UpdateBranch\\\\\\\";\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"BranchName\\\\\\\", branch));\\\\r\\\\n            int[] keys = commitDictionary.Item2.Keys.ToArray();\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"CommitID\\\\\\\", keys[0]));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"UserID\\\\\\\", userID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"PasswordHash\\\\\\\", hash));\\\\r\\\\n            table.Clear();\\\\r\\\\n            adapter.Fill(table);\\\\r\\\\n            if (table.Rows.Count <= 0)\\\\r\\\\n            \"},{\"Position\":16662,\"NumberToRemove\":155,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n            }\\\\r\\\\n            else if ((int)table.Rows[0][table.Rows[0].ItemArray.Length-1] == 1)\\\\r\\\\n            \"},{\"Position\":16825,\"NumberToRemove\":596,\"ContentToAdd\":\"{\\\\r\\\\n                cmd.CommandText = \\\\\\\"usp_AddBranch\\\\\\\";\\\\r\\\\n                RunVoidAuthenticatable(cmd);\\\\r\\\\n            }\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        // DELETE api/pipe/repo/branch\\\\r\\\\n        [HttpDelete(\\\\\\\"\"},{\"Position\":17032,\"NumberToRemove\":47,\"ContentToAdd\":\"{repo}/\"},{\"Position\":17039,\"NumberToRemove\":186,\"ContentToAdd\":\"{branch}\\\\\\\")]\\\\r\\\\n        public void DeleteBranch(string repo, string branch, [FromBody]Account accnt)\\\\r\\\\n        \"},{\"Position\":17152,\"NumberToRemove\":36,\"ContentToAdd\":\"{\\\\r\\\\n            if (accnt == null)\\\\r\\\\n            \"},{\"Position\":17203,\"NumberToRemove\":33,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_DeleteBranch\\\\\\\", connection);\\\\r\\\\n            int repoID = GetRepoID(repo);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":17468,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":17668,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            byte[] hash = GetFullPasswordHash(userID, accnt.Password, false);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryID\\\\\\\", repoID));\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"BranchName\\\\\\\", branch));\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"UserID\\\\\\\", userID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"PasswordHash\\\\\\\", hash);\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        private int GetRepoID(string repo, bool openConnection = true)\\\\r\\\\n        \"},{\"Position\":18337,\"NumberToRemove\":50,\"ContentToAdd\":\"{\\\\r\\\\n            if (openConnection)\\\\r\\\\n            \"},{\"Position\":18389,\"NumberToRemove\":53,\"ContentToAdd\":\"{ connection.Open(); }\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_GetRepoID\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.Add(new SqlParameter(\\\\\\\"RepositoryName\\\\\\\", repo));\\\\r\\\\n            SqlDataAdapter adapter = new SqlDataAdapter(cmd);\\\\r\\\\n            DataTable data = new DataTable();\\\\r\\\\n            adapter.Fill(data);\\\\r\\\\n            cmd.Parameters.Clear();\\\\r\\\\n            if(data.Rows.Count <= 0)\\\\r\\\\n            \"},{\"Position\":18875,\"NumberToRemove\":129,\"ContentToAdd\":\"{\\\\r\\\\n                return -1;\\\\r\\\\n            }\\\\r\\\\n            int retVal = (int)data.Rows[0][0];\\\\r\\\\n            data.Clear();\\\\r\\\\n            return retVal;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        //VERY DANGEROUS!!!! USE AT YOUR OWN RISK!!!\\\\r\\\\n        // DELETE api/pipe/repo\\\\r\\\\n        [HttpDelete(\\\\\\\"\"},{\"Position\":19166,\"NumberToRemove\":203,\"ContentToAdd\":\"{repo}\\\\\\\")]\\\\r\\\\n        public void DeleteRepo(string repo, [FromBody]Account accnt)\\\\r\\\\n        \"},{\"Position\":19260,\"NumberToRemove\":51,\"ContentToAdd\":\"{\\\\r\\\\n            if (accnt == null)\\\\r\\\\n            \"},{\"Position\":19311,\"NumberToRemove\":62,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int repoID = GetRepoID(repo);\\\\r\\\\n            if (repoID < 0)\\\\r\\\\n            \"},{\"Position\":19494,\"NumberToRemove\":24,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 400;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            int userID = GetUserID(accnt.Username, false);\\\\r\\\\n            if (userID < 0)\\\\r\\\\n            \"},{\"Position\":19694,\"NumberToRemove\":108,\"ContentToAdd\":\"{\\\\r\\\\n                Response.StatusCode = 401;\\\\r\\\\n                return;\\\\r\\\\n            }\\\\r\\\\n            byte[] hash = GetFullPasswordHash(userID, accnt.Password, false);\\\\r\\\\n            SqlCommand cmd = new SqlCommand(\\\\\\\"usp_DeleteRepo\\\\\\\", connection);\\\\r\\\\n            cmd.CommandType = CommandType.StoredProcedure;\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"RepositoryID\\\\\\\", repoID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"UserID\\\\\\\", userID);\\\\r\\\\n            cmd.Parameters.AddWithValue(\\\\\\\"PasswordHash\\\\\\\", hash);\\\\r\\\\n            RunVoidAuthenticatable(cmd);\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]},\"},{\"Position\":20290,\"NumberToRemove\":120,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Models\\\",\\\"Folders\\\":[],\\\"Files\\\":[\"},{\"Position\":20337,\"NumberToRemove\":26,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Models\\\\\\\\Commit.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\n\\\\r\\\\nnamespace Pipe.Models\\\\r\\\\n\"},{\"Position\":20523,\"NumberToRemove\":153,\"ContentToAdd\":\"{\\\\r\\\\n    public class Commit\\\\r\\\\n    \"},{\"Position\":20559,\"NumberToRemove\":95,\"ContentToAdd\":\"{\\\\r\\\\n        public string Diffs \"},{\"Position\":20592,\"NumberToRemove\":150,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public int Parent \"},{\"Position\":20639,\"NumberToRemove\":151,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Message \"},{\"Position\":20690,\"NumberToRemove\":61,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Author \"},{\"Position\":20740,\"NumberToRemove\":59,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public string Committer \"},{\"Position\":20793,\"NumberToRemove\":20,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n        public Commit(string diffs, string message, string author, string committer, int parent)\\\\r\\\\n        \"},{\"Position\":20922,\"NumberToRemove\":56,\"ContentToAdd\":\"{\\\\r\\\\n            Diffs = diffs;\\\\r\\\\n            Message = message;\\\\r\\\\n            Author = author;\\\\r\\\\n            Committer = committer;\\\\r\\\\n            Parent = parent;\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]},\"},{\"Position\":21125,\"NumberToRemove\":140,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Properties\\\",\\\"Folders\\\":[],\\\"Files\\\":[\"},{\"Position\":21176,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Properties\\\\\\\\launchSettings.json\\\",\\\"Contents\\\":\\\"\"},{\"Position\":21238,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n  \\\\\\\"iisSettings\\\\\\\": \"},{\"Position\":21262,\"NumberToRemove\":114,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"windowsAuthentication\\\\\\\": false,\\\\r\\\\n    \\\\\\\"anonymousAuthentication\\\\\\\": true,\\\\r\\\\n    \\\\\\\"iisExpress\\\\\\\": \"},{\"Position\":21370,\"NumberToRemove\":53,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"applicationUrl\\\\\\\": \\\\\\\"http://localhost:56854/\\\\\\\",\\\\r\\\\n      \\\\\\\"sslPort\\\\\\\": 0\\\\r\\\\n    }\\\\r\\\\n  },\\\\r\\\\n  \\\\\\\"profiles\\\\\\\": \"},{\"Position\":21490,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"IIS Express\\\\\\\": \"},{\"Position\":21516,\"NumberToRemove\":79,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"commandName\\\\\\\": \\\\\\\"IISExpress\\\\\\\",\\\\r\\\\n      \\\\\\\"launchBrowser\\\\\\\": true,\\\\r\\\\n      \\\\\\\"launchUrl\\\\\\\": \\\\\\\"api/values\\\\\\\",\\\\r\\\\n      \\\\\\\"environmentVariables\\\\\\\": \"},{\"Position\":21669,\"NumberToRemove\":25,\"ContentToAdd\":\"{\\\\r\\\\n        \\\\\\\"ASPNETCORE_ENVIRONMENT\\\\\\\": \\\\\\\"Development\\\\\\\"\\\\r\\\\n      }\\\\r\\\\n    },\\\\r\\\\n    \\\\\\\"Pipe\\\\\\\": \"},{\"Position\":21764,\"NumberToRemove\":76,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"commandName\\\\\\\": \\\\\\\"Project\\\\\\\",\\\\r\\\\n      \\\\\\\"launchBrowser\\\\\\\": true,\\\\r\\\\n      \\\\\\\"launchUrl\\\\\\\": \\\\\\\"api/values\\\\\\\",\\\\r\\\\n      \\\\\\\"environmentVariables\\\\\\\": \"},{\"Position\":21914,\"NumberToRemove\":723,\"ContentToAdd\":\"{\\\\r\\\\n        \\\\\\\"ASPNETCORE_ENVIRONMENT\\\\\\\": \\\\\\\"Development\\\\\\\"\\\\r\\\\n      },\\\\r\\\\n      \\\\\\\"applicationUrl\\\\\\\": \\\\\\\"http://localhost:56855/\\\\\\\"\\\\r\\\\n    }\\\\r\\\\n  }\\\\r\\\\n}\\\"}]},\"},{\"Position\":22065,\"NumberToRemove\":346,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\wwwroot\\\",\\\"Folders\\\":[],\\\"Files\\\":[]}],\\\"Files\\\":[\"},{\"Position\":22126,\"NumberToRemove\":37,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\appsettings.Development.json\\\",\\\"Contents\\\":\\\"\"},{\"Position\":22185,\"NumberToRemove\":63,\"ContentToAdd\":\"{\\\\r\\\\n  \\\\\\\"Logging\\\\\\\": \"},{\"Position\":22205,\"NumberToRemove\":266,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"IncludeScopes\\\\\\\": false,\\\\r\\\\n    \\\\\\\"LogLevel\\\\\\\": \"},{\"Position\":22261,\"NumberToRemove\":424,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"Default\\\\\\\": \\\\\\\"Debug\\\\\\\",\\\\r\\\\n      \\\\\\\"System\\\\\\\": \\\\\\\"Information\\\\\\\",\\\\r\\\\n      \\\\\\\"Microsoft\\\\\\\": \\\\\\\"Information\\\\\\\"\\\\r\\\\n    }\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":22401,\"NumberToRemove\":47,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\appsettings.json\\\",\\\"Contents\\\":\\\"\"},{\"Position\":22448,\"NumberToRemove\":30,\"ContentToAdd\":\"{\\\\r\\\\n  \\\\\\\"ConnectionStrings\\\\\\\": \"},{\"Position\":22478,\"NumberToRemove\":116,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"Dev\\\\\\\": \\\\\\\"server=GMRMLTV; database=PVC; user=sa; password=GreatMinds110\\\\\\\"\\\\r\\\\n  },\\\\r\\\\n\\\\r\\\\n  \\\\\\\"Logging\\\\\\\": \"},{\"Position\":22592,\"NumberToRemove\":65,\"ContentToAdd\":\"{\\\\r\\\\n    \\\\\\\"IncludeScopes\\\\\\\": false,\\\\r\\\\n    \\\\\\\"Debug\\\\\\\": \"},{\"Position\":22645,\"NumberToRemove\":92,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"LogLevel\\\\\\\": \"},{\"Position\":22670,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n        \\\\\\\"Default\\\\\\\": \\\\\\\"Warning\\\\\\\"\\\\r\\\\n      }\\\\r\\\\n    },\\\\r\\\\n    \\\\\\\"Console\\\\\\\": \"},{\"Position\":22749,\"NumberToRemove\":70,\"ContentToAdd\":\"{\\\\r\\\\n      \\\\\\\"LogLevel\\\\\\\": \"},{\"Position\":22774,\"NumberToRemove\":103,\"ContentToAdd\":\"{\\\\r\\\\n        \\\\\\\"Default\\\\\\\": \\\\\\\"Warning\\\\\\\"\\\\r\\\\n      }\\\\r\\\\n    }\\\\r\\\\n  }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":22850,\"NumberToRemove\":63,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Pipe.csproj\\\",\\\"Contents\\\":\\\"<Project Sdk=\\\\\\\"Microsoft.NET.Sdk.Web\\\\\\\">\\\\r\\\\n\\\\r\\\\n  <PropertyGroup>\\\\r\\\\n    <TargetFramework>netcoreapp2.0</TargetFramework>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n\\\\r\\\\n  <PropertyGroup Condition=\\\\\\\"'$(Configuration)|$(Platform)'=='Debug|AnyCPU'\\\\\\\">\\\\r\\\\n    <DefineConstants>TRACE;DEBUG</DefineConstants>\\\\r\\\\n  </PropertyGroup>\\\\r\\\\n\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <Folder Include=\\\\\\\"wwwroot\\\\\\\\\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <PackageReference Include=\\\\\\\"Microsoft.AspNetCore.All\\\\\\\" Version=\\\\\\\"2.0.6\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n\\\\r\\\\n  <ItemGroup>\\\\r\\\\n    <DotNetCliToolReference Include=\\\\\\\"Microsoft.VisualStudio.Web.CodeGeneration.Tools\\\\\\\" Version=\\\\\\\"2.0.3\\\\\\\" />\\\\r\\\\n  </ItemGroup>\\\\r\\\\n\\\\r\\\\n</Project>\\\\r\\\\n\\\"},\"},{\"Position\":23573,\"NumberToRemove\":92,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Program.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.IO;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing Microsoft.AspNetCore;\\\\r\\\\nusing Microsoft.AspNetCore.Hosting;\\\\r\\\\nusing Microsoft.Extensions.Configuration;\\\\r\\\\nusing Microsoft.Extensions.Logging;\\\\r\\\\n\\\\r\\\\nnamespace Pipe\\\\r\\\\n\"},{\"Position\":23919,\"NumberToRemove\":67,\"ContentToAdd\":\"{\\\\r\\\\n    public class Program\\\\r\\\\n    \"},{\"Position\":23956,\"NumberToRemove\":69,\"ContentToAdd\":\"{\\\\r\\\\n        public static void Main(string[] args)\\\\r\\\\n        \"},{\"Position\":24019,\"NumberToRemove\":83,\"ContentToAdd\":\"{\\\\r\\\\n            BuildWebHost(args).Run();\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public static IWebHost BuildWebHost(string[] args) =>\\\\r\\\\n            WebHost.CreateDefaultBuilder(args)\\\\r\\\\n                .UseStartup<Startup>()\\\\r\\\\n                .Build();\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"},\"},{\"Position\":24285,\"NumberToRemove\":69,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe\\\\\\\\Startup.cs\\\",\\\"Contents\\\":\\\"using System;\\\\r\\\\nusing System.Collections.Generic;\\\\r\\\\nusing System.Linq;\\\\r\\\\nusing System.Threading.Tasks;\\\\r\\\\nusing Microsoft.AspNetCore.Builder;\\\\r\\\\nusing Microsoft.AspNetCore.Hosting;\\\\r\\\\nusing Microsoft.Extensions.Configuration;\\\\r\\\\nusing Microsoft.Extensions.DependencyInjection;\\\\r\\\\nusing Microsoft.Extensions.Logging;\\\\r\\\\nusing Microsoft.Extensions.Options;\\\\r\\\\n\\\\r\\\\nnamespace Pipe\\\\r\\\\n\"},{\"Position\":24709,\"NumberToRemove\":112,\"ContentToAdd\":\"{\\\\r\\\\n    //public interface INotifier\\\\r\\\\n    //\"},{\"Position\":24756,\"NumberToRemove\":198,\"ContentToAdd\":\"{\\\\r\\\\n    //    string Address \"},{\"Position\":24786,\"NumberToRemove\":525,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n    //    void SendMail();\\\\r\\\\n    //}\\\\r\\\\n\\\\r\\\\n    //public class EmailNotifier : INotifier\\\\r\\\\n    //\"},{\"Position\":24902,\"NumberToRemove\":57,\"ContentToAdd\":\"{\\\\r\\\\n    //    public EmailNotifier(string address)\\\\r\\\\n    //    \"},{\"Position\":24967,\"NumberToRemove\":149,\"ContentToAdd\":\"{\\\\r\\\\n    //        Address = address;\\\\r\\\\n    //    }\\\\r\\\\n\\\\r\\\\n    //    public string Address \"},{\"Position\":25059,\"NumberToRemove\":64,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n    //    public void SendMail()\\\\r\\\\n    //    \"},{\"Position\":25126,\"NumberToRemove\":378,\"ContentToAdd\":\"{\\\\r\\\\n    //        System.Diagnostics.Debug.WriteLine($\\\\\\\"Mail sent to \"},{\"Position\":25196,\"NumberToRemove\":218,\"ContentToAdd\":\"{Address}\\\\\\\");\\\\r\\\\n    //    }\\\\r\\\\n    //}\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n    //public class SMSNotifier : INotifier\\\\r\\\\n    //\"},{\"Position\":25299,\"NumberToRemove\":79,\"ContentToAdd\":\"{\\\\r\\\\n    //    public SMSNotifier(string address)\\\\r\\\\n    //    \"},{\"Position\":25362,\"NumberToRemove\":302,\"ContentToAdd\":\"{\\\\r\\\\n    //        Address = address;\\\\r\\\\n    //    }\\\\r\\\\n\\\\r\\\\n    //    public string Address \"},{\"Position\":25454,\"NumberToRemove\":86,\"ContentToAdd\":\"{ get; set; }\\\\r\\\\n\\\\r\\\\n    //    public void SendMail()\\\\r\\\\n    //    \"},{\"Position\":25521,\"NumberToRemove\":84,\"ContentToAdd\":\"{\\\\r\\\\n    //        System.Diagnostics.Debug.WriteLine($\\\\\\\"SMS sent to \"},{\"Position\":25590,\"NumberToRemove\":90,\"ContentToAdd\":\"{Address}\\\\\\\");\\\\r\\\\n    //    }\\\\r\\\\n    //}\\\\r\\\\n\\\\r\\\\n\\\\r\\\\n    public class Startup\\\\r\\\\n    \"},{\"Position\":25673,\"NumberToRemove\":288,\"ContentToAdd\":\"{\\\\r\\\\n        public Startup(IConfiguration configuration)\\\\r\\\\n        \"},{\"Position\":25742,\"NumberToRemove\":81,\"ContentToAdd\":\"{\\\\r\\\\n            Configuration = configuration;\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        public IConfiguration Configuration \"},{\"Position\":25854,\"NumberToRemove\":0,\"ContentToAdd\":\"{ get; }\\\\r\\\\n\\\\r\\\\n        // This method gets called by the runtime. Use this method to add services to the container.\\\\r\\\\n        public void ConfigureServices(IServiceCollection services)\\\\r\\\\n        \"},{\"Position\":26052,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            services.AddMvc();\\\\r\\\\n\\\\r\\\\n//#if USESMS\\\\r\\\\n//            services.AddTransient<INotifier, SMSNotifier>((i) => new SMSNotifier(\\\\\\\"123-555-1212\\\\\\\"));\\\\r\\\\n//#else\\\\r\\\\n//            services.AddTransient<INotifier, EmailNotifier>(((i) => new EmailNotifier(\\\\\\\"peterAdmin@pipe.com\\\\\\\")));\\\\r\\\\n//#endif\\\\r\\\\n        }\\\\r\\\\n\\\\r\\\\n        // This method gets called by the runtime. Use this method to configure the HTTP request pipeline.\\\\r\\\\n        public void Configure(IApplicationBuilder app, IHostingEnvironment env)\\\\r\\\\n        \"},{\"Position\":26577,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n            if (env.IsDevelopment())\\\\r\\\\n            \"},{\"Position\":26634,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\\r\\\\n                app.UseDeveloperExceptionPage();\\\\r\\\\n            }\\\\r\\\\n\\\\r\\\\n            app.UseMvc();\\\\r\\\\n        }\\\\r\\\\n    }\\\\r\\\\n}\\\\r\\\\n\\\"}]}],\\\"Files\\\":[\"},{\"Position\":26783,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\.pvcignore\\\",\\\"Contents\\\":\\\"R: bin|obj|vs|packages\\\\r\\\\n\\\"},\"},{\"Position\":26847,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Notes.txt\\\",\\\"Contents\\\":\\\"Worked to integrate authentication. It SHOULD work, but apparently the API retrieves a different salt than it originally sent to SQL. Therefore, the hash ends up incorrect and you can't sign in. Work on figuring out if the salt is even worth the trouble and, if it is, FIX IT! Ideas: Check which salt is actually 50 chars. Fix appropriately.\\\"},\"},{\"Position\":27225,\"NumberToRemove\":0,\"ContentToAdd\":\"{\\\"Path\\\":\\\"\\\\\\\\Pipe.sln\\\",\\\"Contents\\\":\\\"\\\\r\\\\nMicrosoft Visual Studio Solution File, Format Version 12.00\\\\r\\\\n# Visual Studio 15\\\\r\\\\nVisualStudioVersion = 15.0.27428.2027\\\\r\\\\nMinimumVisualStudioVersion = 10.0.40219.1\\\\r\\\\nProject(\\\\\\\"\"},{\"Position\":27443,\"NumberToRemove\":0,\"ContentToAdd\":\"{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}\\\\\\\") = \\\\\\\"Pipe\\\\\\\", \\\\\\\"Pipe\\\\\\\\Pipe.csproj\\\\\\\", \\\\\\\"\"},{\"Position\":27522,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}\\\\\\\"\\\\r\\\\nEndProject\\\\r\\\\nGlobal\\\\r\\\\n\\\\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\\\\r\\\\n\\\\t\\\\tDebug|Any CPU = Debug|Any CPU\\\\r\\\\n\\\\t\\\\tRelease|Any CPU = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":27824,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}.Debug|Any CPU.ActiveCfg = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":27910,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}.Debug|Any CPU.Build.0 = Debug|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":27994,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}.Release|Any CPU.ActiveCfg = Release|Any CPU\\\\r\\\\n\\\\t\\\\t\"},{\"Position\":28084,\"NumberToRemove\":0,\"ContentToAdd\":\"{0A415C0F-1EF8-4ACF-B86E-2A580A1A6085}.Release|Any CPU.Build.0 = Release|Any CPU\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(SolutionProperties) = preSolution\\\\r\\\\n\\\\t\\\\tHideSolutionNode = FALSE\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\n\\\\tGlobalSection(ExtensibilityGlobals) = postSolution\\\\r\\\\n\\\\t\\\\tSolutionGuid = \"},{\"Position\":28372,\"NumberToRemove\":0,\"ContentToAdd\":\"{A7FB2405-9F73-4374-A8D3-03010D1B7FD6}\\\\r\\\\n\\\\tEndGlobalSection\\\\r\\\\nEndGlobal\\\\r\\\\n\\\"}]}\"}]","Parent":1385042276,"Message":"8/26/2018 4:19:24 PM: Implemented check for repo existence. If nonexistent, returns status code 400. Invalid auth returns 401.","Author":"Peter","Committer":"Peter"}